<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huizhi.supplier.db.dao.TCpyAssetsLiabilitiesMapper">
  <resultMap id="BaseResultMap" type="com.huizhi.supplier.db.model.TCpyAssetsLiabilities">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="current_assets" jdbcType="DECIMAL" property="currentAssets" />
    <result column="monetary_funds" jdbcType="DECIMAL" property="monetaryFunds" />
    <result column="transactional_financial_assets" jdbcType="DECIMAL" property="transactionalFinancialAssets" />
    <result column="derivative_financial_assets" jdbcType="DECIMAL" property="derivativeFinancialAssets" />
    <result column="receivable_notes_accounts" jdbcType="DECIMAL" property="receivableNotesAccounts" />
    <result column="accounts_receivable" jdbcType="DECIMAL" property="accountsReceivable" />
    <result column="advance_charge" jdbcType="DECIMAL" property="advanceCharge" />
    <result column="other_receipts" jdbcType="DECIMAL" property="otherReceipts" />
    <result column="contract_assets" jdbcType="DECIMAL" property="contractAssets" />
    <result column="inventory" jdbcType="DECIMAL" property="inventory" />
    <result column="sale_assets" jdbcType="DECIMAL" property="saleAssets" />
    <result column="one_year_assets" jdbcType="DECIMAL" property="oneYearAssets" />
    <result column="other_current_assets" jdbcType="DECIMAL" property="otherCurrentAssets" />
    <result column="other_total_current_assets" jdbcType="DECIMAL" property="otherTotalCurrentAssets" />
    <result column="non_current_assets" jdbcType="DECIMAL" property="nonCurrentAssets" />
    <result column="obligatory_right_investment" jdbcType="DECIMAL" property="obligatoryRightInvestment" />
    <result column="other_obligatory_right_investment" jdbcType="DECIMAL" property="otherObligatoryRightInvestment" />
    <result column="long_term_receivables" jdbcType="DECIMAL" property="longTermReceivables" />
    <result column="long_term_investment" jdbcType="DECIMAL" property="longTermInvestment" />
    <result column="other_equity_investment" jdbcType="DECIMAL" property="otherEquityInvestment" />
    <result column="other_non_current_financial_assets" jdbcType="DECIMAL" property="otherNonCurrentFinancialAssets" />
    <result column="investment_property" jdbcType="DECIMAL" property="investmentProperty" />
    <result column="fixed_assets" jdbcType="DECIMAL" property="fixedAssets" />
    <result column="construction_in_progress" jdbcType="DECIMAL" property="constructionInProgress" />
    <result column="productive_biological_assets" jdbcType="DECIMAL" property="productiveBiologicalAssets" />
    <result column="oil_gas_assets" jdbcType="DECIMAL" property="oilGasAssets" />
    <result column="five_star_assets" jdbcType="DECIMAL" property="fiveStarAssets" />
    <result column="development_expenditure" jdbcType="DECIMAL" property="developmentExpenditure" />
    <result column="goodwill" jdbcType="DECIMAL" property="goodwill" />
    <result column="long_expected_contribution" jdbcType="DECIMAL" property="longExpectedContribution" />
    <result column="deferredincome_taxcharges" jdbcType="DECIMAL" property="deferredincomeTaxcharges" />
    <result column="other_non_current_assets" jdbcType="DECIMAL" property="otherNonCurrentAssets" />
    <result column="other_total_non_current_assets" jdbcType="DECIMAL" property="otherTotalNonCurrentAssets" />
    <result column="other_non_current_assets_total_assets" jdbcType="DECIMAL" property="otherNonCurrentAssetsTotalAssets" />
    <result column="current_liabilities" jdbcType="DECIMAL" property="currentLiabilities" />
    <result column="short_term_borrowing" jdbcType="DECIMAL" property="shortTermBorrowing" />
    <result column="transactional_financial_liabilities" jdbcType="DECIMAL" property="transactionalFinancialLiabilities" />
    <result column="derivative_financial_liabilities" jdbcType="DECIMAL" property="derivativeFinancialLiabilities" />
    <result column="payable_accounts_notes" jdbcType="DECIMAL" property="payableAccountsNotes" />
    <result column="accounts_payable" jdbcType="DECIMAL" property="accountsPayable" />
    <result column="advance_receipts" jdbcType="DECIMAL" property="advanceReceipts" />
    <result column="contract_liabilities" jdbcType="DECIMAL" property="contractLiabilities" />
    <result column="paid_workers_salary" jdbcType="DECIMAL" property="paidWorkersSalary" />
    <result column="tax_payable" jdbcType="DECIMAL" property="taxPayable" />
    <result column="other_accounts_payable" jdbcType="DECIMAL" property="otherAccountsPayable" />
    <result column="sale_liabilities" jdbcType="DECIMAL" property="saleLiabilities" />
    <result column="oneYear_non_current_liability" jdbcType="DECIMAL" property="oneyearNonCurrentLiability" />
    <result column="other_current_liabilities" jdbcType="DECIMAL" property="otherCurrentLiabilities" />
    <result column="total_current_liabilities" jdbcType="DECIMAL" property="totalCurrentLiabilities" />
    <result column="non_current_liabilities" jdbcType="DECIMAL" property="nonCurrentLiabilities" />
    <result column="long_term_borrowing" jdbcType="DECIMAL" property="longTermBorrowing" />
    <result column="pay_bond" jdbcType="DECIMAL" property="payBond" />
    <result column="pay_bond_preferred_stock" jdbcType="DECIMAL" property="payBondPreferredStock" />
    <result column="pay_bond_sustainable_debts" jdbcType="DECIMAL" property="payBondSustainableDebts" />
    <result column="long_term_accounts_payable" jdbcType="DECIMAL" property="longTermAccountsPayable" />
    <result column="projected_liabilities" jdbcType="DECIMAL" property="projectedLiabilities" />
    <result column="deferred_income" jdbcType="DECIMAL" property="deferredIncome" />
    <result column="deferred_income_tax_liabilities" jdbcType="DECIMAL" property="deferredIncomeTaxLiabilities" />
    <result column="other_non_current_liabilities" jdbcType="DECIMAL" property="otherNonCurrentLiabilities" />
    <result column="other_total_non_current_liabilities" jdbcType="DECIMAL" property="otherTotalNonCurrentLiabilities" />
    <result column="other_non_current_liabilities_total_liabilities" jdbcType="DECIMAL" property="otherNonCurrentLiabilitiesTotalLiabilities" />
    <result column="owners_equity" jdbcType="DECIMAL" property="ownersEquity" />
    <result column="paid_in_capital" jdbcType="DECIMAL" property="paidInCapital" />
    <result column="other_equity_instruments" jdbcType="DECIMAL" property="otherEquityInstruments" />
    <result column="other_preferred_stock" jdbcType="DECIMAL" property="otherPreferredStock" />
    <result column="other_sustainable_debts" jdbcType="DECIMAL" property="otherSustainableDebts" />
    <result column="capital_reserve" jdbcType="DECIMAL" property="capitalReserve" />
    <result column="treasury_stock" jdbcType="DECIMAL" property="treasuryStock" />
    <result column="surplus_reserve" jdbcType="DECIMAL" property="surplusReserve" />
    <result column="other_comprehensive_income" jdbcType="DECIMAL" property="otherComprehensiveIncome" />
    <result column="undistributed_profits" jdbcType="DECIMAL" property="undistributedProfits" />
    <result column="total_owners_equity" jdbcType="DECIMAL" property="totalOwnersEquity" />
    <result column="total_liability_owners_equity" jdbcType="DECIMAL" property="totalLiabilityOwnersEquity" />
    <result column="create_person" jdbcType="VARCHAR" property="createPerson" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_person" jdbcType="VARCHAR" property="modifyPerson" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="data_resource" jdbcType="VARCHAR" property="dataResource" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, company_id, `year`, current_assets, monetary_funds, transactional_financial_assets, 
    derivative_financial_assets, receivable_notes_accounts, accounts_receivable, advance_charge, 
    other_receipts, contract_assets, inventory, sale_assets, one_year_assets, other_current_assets, 
    other_total_current_assets, non_current_assets, obligatory_right_investment, other_obligatory_right_investment, 
    long_term_receivables, long_term_investment, other_equity_investment, other_non_current_financial_assets, 
    investment_property, fixed_assets, construction_in_progress, productive_biological_assets, 
    oil_gas_assets, five_star_assets, development_expenditure, goodwill, long_expected_contribution, 
    deferredincome_taxcharges, other_non_current_assets, other_total_non_current_assets, 
    other_non_current_assets_total_assets, current_liabilities, short_term_borrowing, 
    transactional_financial_liabilities, derivative_financial_liabilities, payable_accounts_notes, 
    accounts_payable, advance_receipts, contract_liabilities, paid_workers_salary, tax_payable, 
    other_accounts_payable, sale_liabilities, oneYear_non_current_liability, other_current_liabilities, 
    total_current_liabilities, non_current_liabilities, long_term_borrowing, pay_bond, 
    pay_bond_preferred_stock, pay_bond_sustainable_debts, long_term_accounts_payable, 
    projected_liabilities, deferred_income, deferred_income_tax_liabilities, other_non_current_liabilities, 
    other_total_non_current_liabilities, other_non_current_liabilities_total_liabilities, 
    owners_equity, paid_in_capital, other_equity_instruments, other_preferred_stock, 
    other_sustainable_debts, capital_reserve, treasury_stock, surplus_reserve, other_comprehensive_income, 
    undistributed_profits, total_owners_equity, total_liability_owners_equity, create_person, 
    create_time, modify_person, modify_time, data_resource
  </sql>
  <select id="selectByExample" parameterType="com.huizhi.supplier.db.model.TCpyAssetsLiabilitiesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_cpy_assets_liabilities
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_assets_liabilities
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_cpy_assets_liabilities
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_assets_liabilities
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_cpy_assets_liabilities
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.huizhi.supplier.db.model.TCpyAssetsLiabilitiesExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_cpy_assets_liabilities
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>



  <insert id="insert" parameterType="com.huizhi.supplier.db.model.TCpyAssetsLiabilities">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_cpy_assets_liabilities (company_id, `year`, current_assets, 
      monetary_funds, transactional_financial_assets, 
      derivative_financial_assets, receivable_notes_accounts, 
      accounts_receivable, advance_charge, other_receipts, 
      contract_assets, inventory, sale_assets, 
      one_year_assets, other_current_assets, other_total_current_assets, 
      non_current_assets, obligatory_right_investment, 
      other_obligatory_right_investment, long_term_receivables, 
      long_term_investment, other_equity_investment, 
      other_non_current_financial_assets, investment_property, 
      fixed_assets, construction_in_progress, productive_biological_assets, 
      oil_gas_assets, five_star_assets, development_expenditure, 
      goodwill, long_expected_contribution, deferredincome_taxcharges, 
      other_non_current_assets, other_total_non_current_assets, 
      other_non_current_assets_total_assets, current_liabilities, 
      short_term_borrowing, transactional_financial_liabilities, 
      derivative_financial_liabilities, payable_accounts_notes, 
      accounts_payable, advance_receipts, contract_liabilities, 
      paid_workers_salary, tax_payable, other_accounts_payable, 
      sale_liabilities, oneYear_non_current_liability, 
      other_current_liabilities, total_current_liabilities, 
      non_current_liabilities, long_term_borrowing, 
      pay_bond, pay_bond_preferred_stock, pay_bond_sustainable_debts, 
      long_term_accounts_payable, projected_liabilities, 
      deferred_income, deferred_income_tax_liabilities, 
      other_non_current_liabilities, other_total_non_current_liabilities, 
      other_non_current_liabilities_total_liabilities, owners_equity, 
      paid_in_capital, other_equity_instruments, 
      other_preferred_stock, other_sustainable_debts, 
      capital_reserve, treasury_stock, surplus_reserve, 
      other_comprehensive_income, undistributed_profits, 
      total_owners_equity, total_liability_owners_equity, 
      create_person, create_time, modify_person, 
      modify_time, data_resource)
    values (#{companyId,jdbcType=VARCHAR}, #{year,jdbcType=CHAR}, #{currentAssets,jdbcType=DECIMAL}, 
      #{monetaryFunds,jdbcType=DECIMAL}, #{transactionalFinancialAssets,jdbcType=DECIMAL}, 
      #{derivativeFinancialAssets,jdbcType=DECIMAL}, #{receivableNotesAccounts,jdbcType=DECIMAL}, 
      #{accountsReceivable,jdbcType=DECIMAL}, #{advanceCharge,jdbcType=DECIMAL}, #{otherReceipts,jdbcType=DECIMAL}, 
      #{contractAssets,jdbcType=DECIMAL}, #{inventory,jdbcType=DECIMAL}, #{saleAssets,jdbcType=DECIMAL}, 
      #{oneYearAssets,jdbcType=DECIMAL}, #{otherCurrentAssets,jdbcType=DECIMAL}, #{otherTotalCurrentAssets,jdbcType=DECIMAL}, 
      #{nonCurrentAssets,jdbcType=DECIMAL}, #{obligatoryRightInvestment,jdbcType=DECIMAL}, 
      #{otherObligatoryRightInvestment,jdbcType=DECIMAL}, #{longTermReceivables,jdbcType=DECIMAL}, 
      #{longTermInvestment,jdbcType=DECIMAL}, #{otherEquityInvestment,jdbcType=DECIMAL}, 
      #{otherNonCurrentFinancialAssets,jdbcType=DECIMAL}, #{investmentProperty,jdbcType=DECIMAL}, 
      #{fixedAssets,jdbcType=DECIMAL}, #{constructionInProgress,jdbcType=DECIMAL}, #{productiveBiologicalAssets,jdbcType=DECIMAL}, 
      #{oilGasAssets,jdbcType=DECIMAL}, #{fiveStarAssets,jdbcType=DECIMAL}, #{developmentExpenditure,jdbcType=DECIMAL}, 
      #{goodwill,jdbcType=DECIMAL}, #{longExpectedContribution,jdbcType=DECIMAL}, #{deferredincomeTaxcharges,jdbcType=DECIMAL}, 
      #{otherNonCurrentAssets,jdbcType=DECIMAL}, #{otherTotalNonCurrentAssets,jdbcType=DECIMAL}, 
      #{otherNonCurrentAssetsTotalAssets,jdbcType=DECIMAL}, #{currentLiabilities,jdbcType=DECIMAL}, 
      #{shortTermBorrowing,jdbcType=DECIMAL}, #{transactionalFinancialLiabilities,jdbcType=DECIMAL}, 
      #{derivativeFinancialLiabilities,jdbcType=DECIMAL}, #{payableAccountsNotes,jdbcType=DECIMAL}, 
      #{accountsPayable,jdbcType=DECIMAL}, #{advanceReceipts,jdbcType=DECIMAL}, #{contractLiabilities,jdbcType=DECIMAL}, 
      #{paidWorkersSalary,jdbcType=DECIMAL}, #{taxPayable,jdbcType=DECIMAL}, #{otherAccountsPayable,jdbcType=DECIMAL}, 
      #{saleLiabilities,jdbcType=DECIMAL}, #{oneyearNonCurrentLiability,jdbcType=DECIMAL}, 
      #{otherCurrentLiabilities,jdbcType=DECIMAL}, #{totalCurrentLiabilities,jdbcType=DECIMAL}, 
      #{nonCurrentLiabilities,jdbcType=DECIMAL}, #{longTermBorrowing,jdbcType=DECIMAL}, 
      #{payBond,jdbcType=DECIMAL}, #{payBondPreferredStock,jdbcType=DECIMAL}, #{payBondSustainableDebts,jdbcType=DECIMAL}, 
      #{longTermAccountsPayable,jdbcType=DECIMAL}, #{projectedLiabilities,jdbcType=DECIMAL}, 
      #{deferredIncome,jdbcType=DECIMAL}, #{deferredIncomeTaxLiabilities,jdbcType=DECIMAL}, 
      #{otherNonCurrentLiabilities,jdbcType=DECIMAL}, #{otherTotalNonCurrentLiabilities,jdbcType=DECIMAL}, 
      #{otherNonCurrentLiabilitiesTotalLiabilities,jdbcType=DECIMAL}, #{ownersEquity,jdbcType=DECIMAL}, 
      #{paidInCapital,jdbcType=DECIMAL}, #{otherEquityInstruments,jdbcType=DECIMAL}, 
      #{otherPreferredStock,jdbcType=DECIMAL}, #{otherSustainableDebts,jdbcType=DECIMAL}, 
      #{capitalReserve,jdbcType=DECIMAL}, #{treasuryStock,jdbcType=DECIMAL}, #{surplusReserve,jdbcType=DECIMAL}, 
      #{otherComprehensiveIncome,jdbcType=DECIMAL}, #{undistributedProfits,jdbcType=DECIMAL}, 
      #{totalOwnersEquity,jdbcType=DECIMAL}, #{totalLiabilityOwnersEquity,jdbcType=DECIMAL}, 
      #{createPerson,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyPerson,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{dataResource,jdbcType=VARCHAR})
  </insert>




  <insert id="insertSelective" parameterType="com.huizhi.supplier.db.model.TCpyAssetsLiabilities">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_cpy_assets_liabilities
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="year != null">
        `year`,
      </if>
      <if test="currentAssets != null">
        current_assets,
      </if>
      <if test="monetaryFunds != null">
        monetary_funds,
      </if>
      <if test="transactionalFinancialAssets != null">
        transactional_financial_assets,
      </if>
      <if test="derivativeFinancialAssets != null">
        derivative_financial_assets,
      </if>
      <if test="receivableNotesAccounts != null">
        receivable_notes_accounts,
      </if>
      <if test="accountsReceivable != null">
        accounts_receivable,
      </if>
      <if test="advanceCharge != null">
        advance_charge,
      </if>
      <if test="otherReceipts != null">
        other_receipts,
      </if>
      <if test="contractAssets != null">
        contract_assets,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="saleAssets != null">
        sale_assets,
      </if>
      <if test="oneYearAssets != null">
        one_year_assets,
      </if>
      <if test="otherCurrentAssets != null">
        other_current_assets,
      </if>
      <if test="otherTotalCurrentAssets != null">
        other_total_current_assets,
      </if>
      <if test="nonCurrentAssets != null">
        non_current_assets,
      </if>
      <if test="obligatoryRightInvestment != null">
        obligatory_right_investment,
      </if>
      <if test="otherObligatoryRightInvestment != null">
        other_obligatory_right_investment,
      </if>
      <if test="longTermReceivables != null">
        long_term_receivables,
      </if>
      <if test="longTermInvestment != null">
        long_term_investment,
      </if>
      <if test="otherEquityInvestment != null">
        other_equity_investment,
      </if>
      <if test="otherNonCurrentFinancialAssets != null">
        other_non_current_financial_assets,
      </if>
      <if test="investmentProperty != null">
        investment_property,
      </if>
      <if test="fixedAssets != null">
        fixed_assets,
      </if>
      <if test="constructionInProgress != null">
        construction_in_progress,
      </if>
      <if test="productiveBiologicalAssets != null">
        productive_biological_assets,
      </if>
      <if test="oilGasAssets != null">
        oil_gas_assets,
      </if>
      <if test="fiveStarAssets != null">
        five_star_assets,
      </if>
      <if test="developmentExpenditure != null">
        development_expenditure,
      </if>
      <if test="goodwill != null">
        goodwill,
      </if>
      <if test="longExpectedContribution != null">
        long_expected_contribution,
      </if>
      <if test="deferredincomeTaxcharges != null">
        deferredincome_taxcharges,
      </if>
      <if test="otherNonCurrentAssets != null">
        other_non_current_assets,
      </if>
      <if test="otherTotalNonCurrentAssets != null">
        other_total_non_current_assets,
      </if>
      <if test="otherNonCurrentAssetsTotalAssets != null">
        other_non_current_assets_total_assets,
      </if>
      <if test="currentLiabilities != null">
        current_liabilities,
      </if>
      <if test="shortTermBorrowing != null">
        short_term_borrowing,
      </if>
      <if test="transactionalFinancialLiabilities != null">
        transactional_financial_liabilities,
      </if>
      <if test="derivativeFinancialLiabilities != null">
        derivative_financial_liabilities,
      </if>
      <if test="payableAccountsNotes != null">
        payable_accounts_notes,
      </if>
      <if test="accountsPayable != null">
        accounts_payable,
      </if>
      <if test="advanceReceipts != null">
        advance_receipts,
      </if>
      <if test="contractLiabilities != null">
        contract_liabilities,
      </if>
      <if test="paidWorkersSalary != null">
        paid_workers_salary,
      </if>
      <if test="taxPayable != null">
        tax_payable,
      </if>
      <if test="otherAccountsPayable != null">
        other_accounts_payable,
      </if>
      <if test="saleLiabilities != null">
        sale_liabilities,
      </if>
      <if test="oneyearNonCurrentLiability != null">
        oneYear_non_current_liability,
      </if>
      <if test="otherCurrentLiabilities != null">
        other_current_liabilities,
      </if>
      <if test="totalCurrentLiabilities != null">
        total_current_liabilities,
      </if>
      <if test="nonCurrentLiabilities != null">
        non_current_liabilities,
      </if>
      <if test="longTermBorrowing != null">
        long_term_borrowing,
      </if>
      <if test="payBond != null">
        pay_bond,
      </if>
      <if test="payBondPreferredStock != null">
        pay_bond_preferred_stock,
      </if>
      <if test="payBondSustainableDebts != null">
        pay_bond_sustainable_debts,
      </if>
      <if test="longTermAccountsPayable != null">
        long_term_accounts_payable,
      </if>
      <if test="projectedLiabilities != null">
        projected_liabilities,
      </if>
      <if test="deferredIncome != null">
        deferred_income,
      </if>
      <if test="deferredIncomeTaxLiabilities != null">
        deferred_income_tax_liabilities,
      </if>
      <if test="otherNonCurrentLiabilities != null">
        other_non_current_liabilities,
      </if>
      <if test="otherTotalNonCurrentLiabilities != null">
        other_total_non_current_liabilities,
      </if>
      <if test="otherNonCurrentLiabilitiesTotalLiabilities != null">
        other_non_current_liabilities_total_liabilities,
      </if>
      <if test="ownersEquity != null">
        owners_equity,
      </if>
      <if test="paidInCapital != null">
        paid_in_capital,
      </if>
      <if test="otherEquityInstruments != null">
        other_equity_instruments,
      </if>
      <if test="otherPreferredStock != null">
        other_preferred_stock,
      </if>
      <if test="otherSustainableDebts != null">
        other_sustainable_debts,
      </if>
      <if test="capitalReserve != null">
        capital_reserve,
      </if>
      <if test="treasuryStock != null">
        treasury_stock,
      </if>
      <if test="surplusReserve != null">
        surplus_reserve,
      </if>
      <if test="otherComprehensiveIncome != null">
        other_comprehensive_income,
      </if>
      <if test="undistributedProfits != null">
        undistributed_profits,
      </if>
      <if test="totalOwnersEquity != null">
        total_owners_equity,
      </if>
      <if test="totalLiabilityOwnersEquity != null">
        total_liability_owners_equity,
      </if>
      <if test="createPerson != null">
        create_person,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyPerson != null">
        modify_person,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="dataResource != null">
        data_resource,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="currentAssets != null">
        #{currentAssets,jdbcType=DECIMAL},
      </if>
      <if test="monetaryFunds != null">
        #{monetaryFunds,jdbcType=DECIMAL},
      </if>
      <if test="transactionalFinancialAssets != null">
        #{transactionalFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="derivativeFinancialAssets != null">
        #{derivativeFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="receivableNotesAccounts != null">
        #{receivableNotesAccounts,jdbcType=DECIMAL},
      </if>
      <if test="accountsReceivable != null">
        #{accountsReceivable,jdbcType=DECIMAL},
      </if>
      <if test="advanceCharge != null">
        #{advanceCharge,jdbcType=DECIMAL},
      </if>
      <if test="otherReceipts != null">
        #{otherReceipts,jdbcType=DECIMAL},
      </if>
      <if test="contractAssets != null">
        #{contractAssets,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=DECIMAL},
      </if>
      <if test="saleAssets != null">
        #{saleAssets,jdbcType=DECIMAL},
      </if>
      <if test="oneYearAssets != null">
        #{oneYearAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherCurrentAssets != null">
        #{otherCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalCurrentAssets != null">
        #{otherTotalCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="nonCurrentAssets != null">
        #{nonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="obligatoryRightInvestment != null">
        #{obligatoryRightInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherObligatoryRightInvestment != null">
        #{otherObligatoryRightInvestment,jdbcType=DECIMAL},
      </if>
      <if test="longTermReceivables != null">
        #{longTermReceivables,jdbcType=DECIMAL},
      </if>
      <if test="longTermInvestment != null">
        #{longTermInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherEquityInvestment != null">
        #{otherEquityInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentFinancialAssets != null">
        #{otherNonCurrentFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="investmentProperty != null">
        #{investmentProperty,jdbcType=DECIMAL},
      </if>
      <if test="fixedAssets != null">
        #{fixedAssets,jdbcType=DECIMAL},
      </if>
      <if test="constructionInProgress != null">
        #{constructionInProgress,jdbcType=DECIMAL},
      </if>
      <if test="productiveBiologicalAssets != null">
        #{productiveBiologicalAssets,jdbcType=DECIMAL},
      </if>
      <if test="oilGasAssets != null">
        #{oilGasAssets,jdbcType=DECIMAL},
      </if>
      <if test="fiveStarAssets != null">
        #{fiveStarAssets,jdbcType=DECIMAL},
      </if>
      <if test="developmentExpenditure != null">
        #{developmentExpenditure,jdbcType=DECIMAL},
      </if>
      <if test="goodwill != null">
        #{goodwill,jdbcType=DECIMAL},
      </if>
      <if test="longExpectedContribution != null">
        #{longExpectedContribution,jdbcType=DECIMAL},
      </if>
      <if test="deferredincomeTaxcharges != null">
        #{deferredincomeTaxcharges,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentAssets != null">
        #{otherNonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalNonCurrentAssets != null">
        #{otherTotalNonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentAssetsTotalAssets != null">
        #{otherNonCurrentAssetsTotalAssets,jdbcType=DECIMAL},
      </if>
      <if test="currentLiabilities != null">
        #{currentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="shortTermBorrowing != null">
        #{shortTermBorrowing,jdbcType=DECIMAL},
      </if>
      <if test="transactionalFinancialLiabilities != null">
        #{transactionalFinancialLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="derivativeFinancialLiabilities != null">
        #{derivativeFinancialLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="payableAccountsNotes != null">
        #{payableAccountsNotes,jdbcType=DECIMAL},
      </if>
      <if test="accountsPayable != null">
        #{accountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="advanceReceipts != null">
        #{advanceReceipts,jdbcType=DECIMAL},
      </if>
      <if test="contractLiabilities != null">
        #{contractLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="paidWorkersSalary != null">
        #{paidWorkersSalary,jdbcType=DECIMAL},
      </if>
      <if test="taxPayable != null">
        #{taxPayable,jdbcType=DECIMAL},
      </if>
      <if test="otherAccountsPayable != null">
        #{otherAccountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="saleLiabilities != null">
        #{saleLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="oneyearNonCurrentLiability != null">
        #{oneyearNonCurrentLiability,jdbcType=DECIMAL},
      </if>
      <if test="otherCurrentLiabilities != null">
        #{otherCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="totalCurrentLiabilities != null">
        #{totalCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="nonCurrentLiabilities != null">
        #{nonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="longTermBorrowing != null">
        #{longTermBorrowing,jdbcType=DECIMAL},
      </if>
      <if test="payBond != null">
        #{payBond,jdbcType=DECIMAL},
      </if>
      <if test="payBondPreferredStock != null">
        #{payBondPreferredStock,jdbcType=DECIMAL},
      </if>
      <if test="payBondSustainableDebts != null">
        #{payBondSustainableDebts,jdbcType=DECIMAL},
      </if>
      <if test="longTermAccountsPayable != null">
        #{longTermAccountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="projectedLiabilities != null">
        #{projectedLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="deferredIncome != null">
        #{deferredIncome,jdbcType=DECIMAL},
      </if>
      <if test="deferredIncomeTaxLiabilities != null">
        #{deferredIncomeTaxLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentLiabilities != null">
        #{otherNonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalNonCurrentLiabilities != null">
        #{otherTotalNonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentLiabilitiesTotalLiabilities != null">
        #{otherNonCurrentLiabilitiesTotalLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="ownersEquity != null">
        #{ownersEquity,jdbcType=DECIMAL},
      </if>
      <if test="paidInCapital != null">
        #{paidInCapital,jdbcType=DECIMAL},
      </if>
      <if test="otherEquityInstruments != null">
        #{otherEquityInstruments,jdbcType=DECIMAL},
      </if>
      <if test="otherPreferredStock != null">
        #{otherPreferredStock,jdbcType=DECIMAL},
      </if>
      <if test="otherSustainableDebts != null">
        #{otherSustainableDebts,jdbcType=DECIMAL},
      </if>
      <if test="capitalReserve != null">
        #{capitalReserve,jdbcType=DECIMAL},
      </if>
      <if test="treasuryStock != null">
        #{treasuryStock,jdbcType=DECIMAL},
      </if>
      <if test="surplusReserve != null">
        #{surplusReserve,jdbcType=DECIMAL},
      </if>
      <if test="otherComprehensiveIncome != null">
        #{otherComprehensiveIncome,jdbcType=DECIMAL},
      </if>
      <if test="undistributedProfits != null">
        #{undistributedProfits,jdbcType=DECIMAL},
      </if>
      <if test="totalOwnersEquity != null">
        #{totalOwnersEquity,jdbcType=DECIMAL},
      </if>
      <if test="totalLiabilityOwnersEquity != null">
        #{totalLiabilityOwnersEquity,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        #{dataResource,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>



  <select id="countByExample" parameterType="com.huizhi.supplier.db.model.TCpyAssetsLiabilitiesExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_cpy_assets_liabilities
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_assets_liabilities
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        `year` = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.currentAssets != null">
        current_assets = #{record.currentAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.monetaryFunds != null">
        monetary_funds = #{record.monetaryFunds,jdbcType=DECIMAL},
      </if>
      <if test="record.transactionalFinancialAssets != null">
        transactional_financial_assets = #{record.transactionalFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.derivativeFinancialAssets != null">
        derivative_financial_assets = #{record.derivativeFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.receivableNotesAccounts != null">
        receivable_notes_accounts = #{record.receivableNotesAccounts,jdbcType=DECIMAL},
      </if>
      <if test="record.accountsReceivable != null">
        accounts_receivable = #{record.accountsReceivable,jdbcType=DECIMAL},
      </if>
      <if test="record.advanceCharge != null">
        advance_charge = #{record.advanceCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.otherReceipts != null">
        other_receipts = #{record.otherReceipts,jdbcType=DECIMAL},
      </if>
      <if test="record.contractAssets != null">
        contract_assets = #{record.contractAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=DECIMAL},
      </if>
      <if test="record.saleAssets != null">
        sale_assets = #{record.saleAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.oneYearAssets != null">
        one_year_assets = #{record.oneYearAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.otherCurrentAssets != null">
        other_current_assets = #{record.otherCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.otherTotalCurrentAssets != null">
        other_total_current_assets = #{record.otherTotalCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.nonCurrentAssets != null">
        non_current_assets = #{record.nonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.obligatoryRightInvestment != null">
        obligatory_right_investment = #{record.obligatoryRightInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.otherObligatoryRightInvestment != null">
        other_obligatory_right_investment = #{record.otherObligatoryRightInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.longTermReceivables != null">
        long_term_receivables = #{record.longTermReceivables,jdbcType=DECIMAL},
      </if>
      <if test="record.longTermInvestment != null">
        long_term_investment = #{record.longTermInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.otherEquityInvestment != null">
        other_equity_investment = #{record.otherEquityInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.otherNonCurrentFinancialAssets != null">
        other_non_current_financial_assets = #{record.otherNonCurrentFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentProperty != null">
        investment_property = #{record.investmentProperty,jdbcType=DECIMAL},
      </if>
      <if test="record.fixedAssets != null">
        fixed_assets = #{record.fixedAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.constructionInProgress != null">
        construction_in_progress = #{record.constructionInProgress,jdbcType=DECIMAL},
      </if>
      <if test="record.productiveBiologicalAssets != null">
        productive_biological_assets = #{record.productiveBiologicalAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.oilGasAssets != null">
        oil_gas_assets = #{record.oilGasAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.fiveStarAssets != null">
        five_star_assets = #{record.fiveStarAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.developmentExpenditure != null">
        development_expenditure = #{record.developmentExpenditure,jdbcType=DECIMAL},
      </if>
      <if test="record.goodwill != null">
        goodwill = #{record.goodwill,jdbcType=DECIMAL},
      </if>
      <if test="record.longExpectedContribution != null">
        long_expected_contribution = #{record.longExpectedContribution,jdbcType=DECIMAL},
      </if>
      <if test="record.deferredincomeTaxcharges != null">
        deferredincome_taxcharges = #{record.deferredincomeTaxcharges,jdbcType=DECIMAL},
      </if>
      <if test="record.otherNonCurrentAssets != null">
        other_non_current_assets = #{record.otherNonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.otherTotalNonCurrentAssets != null">
        other_total_non_current_assets = #{record.otherTotalNonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.otherNonCurrentAssetsTotalAssets != null">
        other_non_current_assets_total_assets = #{record.otherNonCurrentAssetsTotalAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.currentLiabilities != null">
        current_liabilities = #{record.currentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.shortTermBorrowing != null">
        short_term_borrowing = #{record.shortTermBorrowing,jdbcType=DECIMAL},
      </if>
      <if test="record.transactionalFinancialLiabilities != null">
        transactional_financial_liabilities = #{record.transactionalFinancialLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.derivativeFinancialLiabilities != null">
        derivative_financial_liabilities = #{record.derivativeFinancialLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.payableAccountsNotes != null">
        payable_accounts_notes = #{record.payableAccountsNotes,jdbcType=DECIMAL},
      </if>
      <if test="record.accountsPayable != null">
        accounts_payable = #{record.accountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="record.advanceReceipts != null">
        advance_receipts = #{record.advanceReceipts,jdbcType=DECIMAL},
      </if>
      <if test="record.contractLiabilities != null">
        contract_liabilities = #{record.contractLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.paidWorkersSalary != null">
        paid_workers_salary = #{record.paidWorkersSalary,jdbcType=DECIMAL},
      </if>
      <if test="record.taxPayable != null">
        tax_payable = #{record.taxPayable,jdbcType=DECIMAL},
      </if>
      <if test="record.otherAccountsPayable != null">
        other_accounts_payable = #{record.otherAccountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="record.saleLiabilities != null">
        sale_liabilities = #{record.saleLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.oneyearNonCurrentLiability != null">
        oneYear_non_current_liability = #{record.oneyearNonCurrentLiability,jdbcType=DECIMAL},
      </if>
      <if test="record.otherCurrentLiabilities != null">
        other_current_liabilities = #{record.otherCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.totalCurrentLiabilities != null">
        total_current_liabilities = #{record.totalCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.nonCurrentLiabilities != null">
        non_current_liabilities = #{record.nonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.longTermBorrowing != null">
        long_term_borrowing = #{record.longTermBorrowing,jdbcType=DECIMAL},
      </if>
      <if test="record.payBond != null">
        pay_bond = #{record.payBond,jdbcType=DECIMAL},
      </if>
      <if test="record.payBondPreferredStock != null">
        pay_bond_preferred_stock = #{record.payBondPreferredStock,jdbcType=DECIMAL},
      </if>
      <if test="record.payBondSustainableDebts != null">
        pay_bond_sustainable_debts = #{record.payBondSustainableDebts,jdbcType=DECIMAL},
      </if>
      <if test="record.longTermAccountsPayable != null">
        long_term_accounts_payable = #{record.longTermAccountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="record.projectedLiabilities != null">
        projected_liabilities = #{record.projectedLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.deferredIncome != null">
        deferred_income = #{record.deferredIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.deferredIncomeTaxLiabilities != null">
        deferred_income_tax_liabilities = #{record.deferredIncomeTaxLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.otherNonCurrentLiabilities != null">
        other_non_current_liabilities = #{record.otherNonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.otherTotalNonCurrentLiabilities != null">
        other_total_non_current_liabilities = #{record.otherTotalNonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.otherNonCurrentLiabilitiesTotalLiabilities != null">
        other_non_current_liabilities_total_liabilities = #{record.otherNonCurrentLiabilitiesTotalLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="record.ownersEquity != null">
        owners_equity = #{record.ownersEquity,jdbcType=DECIMAL},
      </if>
      <if test="record.paidInCapital != null">
        paid_in_capital = #{record.paidInCapital,jdbcType=DECIMAL},
      </if>
      <if test="record.otherEquityInstruments != null">
        other_equity_instruments = #{record.otherEquityInstruments,jdbcType=DECIMAL},
      </if>
      <if test="record.otherPreferredStock != null">
        other_preferred_stock = #{record.otherPreferredStock,jdbcType=DECIMAL},
      </if>
      <if test="record.otherSustainableDebts != null">
        other_sustainable_debts = #{record.otherSustainableDebts,jdbcType=DECIMAL},
      </if>
      <if test="record.capitalReserve != null">
        capital_reserve = #{record.capitalReserve,jdbcType=DECIMAL},
      </if>
      <if test="record.treasuryStock != null">
        treasury_stock = #{record.treasuryStock,jdbcType=DECIMAL},
      </if>
      <if test="record.surplusReserve != null">
        surplus_reserve = #{record.surplusReserve,jdbcType=DECIMAL},
      </if>
      <if test="record.otherComprehensiveIncome != null">
        other_comprehensive_income = #{record.otherComprehensiveIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.undistributedProfits != null">
        undistributed_profits = #{record.undistributedProfits,jdbcType=DECIMAL},
      </if>
      <if test="record.totalOwnersEquity != null">
        total_owners_equity = #{record.totalOwnersEquity,jdbcType=DECIMAL},
      </if>
      <if test="record.totalLiabilityOwnersEquity != null">
        total_liability_owners_equity = #{record.totalLiabilityOwnersEquity,jdbcType=DECIMAL},
      </if>
      <if test="record.createPerson != null">
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyPerson != null">
        modify_person = #{record.modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataResource != null">
        data_resource = #{record.dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_assets_liabilities
    set id = #{record.id,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      `year` = #{record.year,jdbcType=CHAR},
      current_assets = #{record.currentAssets,jdbcType=DECIMAL},
      monetary_funds = #{record.monetaryFunds,jdbcType=DECIMAL},
      transactional_financial_assets = #{record.transactionalFinancialAssets,jdbcType=DECIMAL},
      derivative_financial_assets = #{record.derivativeFinancialAssets,jdbcType=DECIMAL},
      receivable_notes_accounts = #{record.receivableNotesAccounts,jdbcType=DECIMAL},
      accounts_receivable = #{record.accountsReceivable,jdbcType=DECIMAL},
      advance_charge = #{record.advanceCharge,jdbcType=DECIMAL},
      other_receipts = #{record.otherReceipts,jdbcType=DECIMAL},
      contract_assets = #{record.contractAssets,jdbcType=DECIMAL},
      inventory = #{record.inventory,jdbcType=DECIMAL},
      sale_assets = #{record.saleAssets,jdbcType=DECIMAL},
      one_year_assets = #{record.oneYearAssets,jdbcType=DECIMAL},
      other_current_assets = #{record.otherCurrentAssets,jdbcType=DECIMAL},
      other_total_current_assets = #{record.otherTotalCurrentAssets,jdbcType=DECIMAL},
      non_current_assets = #{record.nonCurrentAssets,jdbcType=DECIMAL},
      obligatory_right_investment = #{record.obligatoryRightInvestment,jdbcType=DECIMAL},
      other_obligatory_right_investment = #{record.otherObligatoryRightInvestment,jdbcType=DECIMAL},
      long_term_receivables = #{record.longTermReceivables,jdbcType=DECIMAL},
      long_term_investment = #{record.longTermInvestment,jdbcType=DECIMAL},
      other_equity_investment = #{record.otherEquityInvestment,jdbcType=DECIMAL},
      other_non_current_financial_assets = #{record.otherNonCurrentFinancialAssets,jdbcType=DECIMAL},
      investment_property = #{record.investmentProperty,jdbcType=DECIMAL},
      fixed_assets = #{record.fixedAssets,jdbcType=DECIMAL},
      construction_in_progress = #{record.constructionInProgress,jdbcType=DECIMAL},
      productive_biological_assets = #{record.productiveBiologicalAssets,jdbcType=DECIMAL},
      oil_gas_assets = #{record.oilGasAssets,jdbcType=DECIMAL},
      five_star_assets = #{record.fiveStarAssets,jdbcType=DECIMAL},
      development_expenditure = #{record.developmentExpenditure,jdbcType=DECIMAL},
      goodwill = #{record.goodwill,jdbcType=DECIMAL},
      long_expected_contribution = #{record.longExpectedContribution,jdbcType=DECIMAL},
      deferredincome_taxcharges = #{record.deferredincomeTaxcharges,jdbcType=DECIMAL},
      other_non_current_assets = #{record.otherNonCurrentAssets,jdbcType=DECIMAL},
      other_total_non_current_assets = #{record.otherTotalNonCurrentAssets,jdbcType=DECIMAL},
      other_non_current_assets_total_assets = #{record.otherNonCurrentAssetsTotalAssets,jdbcType=DECIMAL},
      current_liabilities = #{record.currentLiabilities,jdbcType=DECIMAL},
      short_term_borrowing = #{record.shortTermBorrowing,jdbcType=DECIMAL},
      transactional_financial_liabilities = #{record.transactionalFinancialLiabilities,jdbcType=DECIMAL},
      derivative_financial_liabilities = #{record.derivativeFinancialLiabilities,jdbcType=DECIMAL},
      payable_accounts_notes = #{record.payableAccountsNotes,jdbcType=DECIMAL},
      accounts_payable = #{record.accountsPayable,jdbcType=DECIMAL},
      advance_receipts = #{record.advanceReceipts,jdbcType=DECIMAL},
      contract_liabilities = #{record.contractLiabilities,jdbcType=DECIMAL},
      paid_workers_salary = #{record.paidWorkersSalary,jdbcType=DECIMAL},
      tax_payable = #{record.taxPayable,jdbcType=DECIMAL},
      other_accounts_payable = #{record.otherAccountsPayable,jdbcType=DECIMAL},
      sale_liabilities = #{record.saleLiabilities,jdbcType=DECIMAL},
      oneYear_non_current_liability = #{record.oneyearNonCurrentLiability,jdbcType=DECIMAL},
      other_current_liabilities = #{record.otherCurrentLiabilities,jdbcType=DECIMAL},
      total_current_liabilities = #{record.totalCurrentLiabilities,jdbcType=DECIMAL},
      non_current_liabilities = #{record.nonCurrentLiabilities,jdbcType=DECIMAL},
      long_term_borrowing = #{record.longTermBorrowing,jdbcType=DECIMAL},
      pay_bond = #{record.payBond,jdbcType=DECIMAL},
      pay_bond_preferred_stock = #{record.payBondPreferredStock,jdbcType=DECIMAL},
      pay_bond_sustainable_debts = #{record.payBondSustainableDebts,jdbcType=DECIMAL},
      long_term_accounts_payable = #{record.longTermAccountsPayable,jdbcType=DECIMAL},
      projected_liabilities = #{record.projectedLiabilities,jdbcType=DECIMAL},
      deferred_income = #{record.deferredIncome,jdbcType=DECIMAL},
      deferred_income_tax_liabilities = #{record.deferredIncomeTaxLiabilities,jdbcType=DECIMAL},
      other_non_current_liabilities = #{record.otherNonCurrentLiabilities,jdbcType=DECIMAL},
      other_total_non_current_liabilities = #{record.otherTotalNonCurrentLiabilities,jdbcType=DECIMAL},
      other_non_current_liabilities_total_liabilities = #{record.otherNonCurrentLiabilitiesTotalLiabilities,jdbcType=DECIMAL},
      owners_equity = #{record.ownersEquity,jdbcType=DECIMAL},
      paid_in_capital = #{record.paidInCapital,jdbcType=DECIMAL},
      other_equity_instruments = #{record.otherEquityInstruments,jdbcType=DECIMAL},
      other_preferred_stock = #{record.otherPreferredStock,jdbcType=DECIMAL},
      other_sustainable_debts = #{record.otherSustainableDebts,jdbcType=DECIMAL},
      capital_reserve = #{record.capitalReserve,jdbcType=DECIMAL},
      treasury_stock = #{record.treasuryStock,jdbcType=DECIMAL},
      surplus_reserve = #{record.surplusReserve,jdbcType=DECIMAL},
      other_comprehensive_income = #{record.otherComprehensiveIncome,jdbcType=DECIMAL},
      undistributed_profits = #{record.undistributedProfits,jdbcType=DECIMAL},
      total_owners_equity = #{record.totalOwnersEquity,jdbcType=DECIMAL},
      total_liability_owners_equity = #{record.totalLiabilityOwnersEquity,jdbcType=DECIMAL},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_person = #{record.modifyPerson,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      data_resource = #{record.dataResource,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huizhi.supplier.db.model.TCpyAssetsLiabilities">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_assets_liabilities
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        `year` = #{year,jdbcType=CHAR},
      </if>
      <if test="currentAssets != null">
        current_assets = #{currentAssets,jdbcType=DECIMAL},
      </if>
      <if test="monetaryFunds != null">
        monetary_funds = #{monetaryFunds,jdbcType=DECIMAL},
      </if>
      <if test="transactionalFinancialAssets != null">
        transactional_financial_assets = #{transactionalFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="derivativeFinancialAssets != null">
        derivative_financial_assets = #{derivativeFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="receivableNotesAccounts != null">
        receivable_notes_accounts = #{receivableNotesAccounts,jdbcType=DECIMAL},
      </if>
      <if test="accountsReceivable != null">
        accounts_receivable = #{accountsReceivable,jdbcType=DECIMAL},
      </if>
      <if test="advanceCharge != null">
        advance_charge = #{advanceCharge,jdbcType=DECIMAL},
      </if>
      <if test="otherReceipts != null">
        other_receipts = #{otherReceipts,jdbcType=DECIMAL},
      </if>
      <if test="contractAssets != null">
        contract_assets = #{contractAssets,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=DECIMAL},
      </if>
      <if test="saleAssets != null">
        sale_assets = #{saleAssets,jdbcType=DECIMAL},
      </if>
      <if test="oneYearAssets != null">
        one_year_assets = #{oneYearAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherCurrentAssets != null">
        other_current_assets = #{otherCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalCurrentAssets != null">
        other_total_current_assets = #{otherTotalCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="nonCurrentAssets != null">
        non_current_assets = #{nonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="obligatoryRightInvestment != null">
        obligatory_right_investment = #{obligatoryRightInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherObligatoryRightInvestment != null">
        other_obligatory_right_investment = #{otherObligatoryRightInvestment,jdbcType=DECIMAL},
      </if>
      <if test="longTermReceivables != null">
        long_term_receivables = #{longTermReceivables,jdbcType=DECIMAL},
      </if>
      <if test="longTermInvestment != null">
        long_term_investment = #{longTermInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherEquityInvestment != null">
        other_equity_investment = #{otherEquityInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentFinancialAssets != null">
        other_non_current_financial_assets = #{otherNonCurrentFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="investmentProperty != null">
        investment_property = #{investmentProperty,jdbcType=DECIMAL},
      </if>
      <if test="fixedAssets != null">
        fixed_assets = #{fixedAssets,jdbcType=DECIMAL},
      </if>
      <if test="constructionInProgress != null">
        construction_in_progress = #{constructionInProgress,jdbcType=DECIMAL},
      </if>
      <if test="productiveBiologicalAssets != null">
        productive_biological_assets = #{productiveBiologicalAssets,jdbcType=DECIMAL},
      </if>
      <if test="oilGasAssets != null">
        oil_gas_assets = #{oilGasAssets,jdbcType=DECIMAL},
      </if>
      <if test="fiveStarAssets != null">
        five_star_assets = #{fiveStarAssets,jdbcType=DECIMAL},
      </if>
      <if test="developmentExpenditure != null">
        development_expenditure = #{developmentExpenditure,jdbcType=DECIMAL},
      </if>
      <if test="goodwill != null">
        goodwill = #{goodwill,jdbcType=DECIMAL},
      </if>
      <if test="longExpectedContribution != null">
        long_expected_contribution = #{longExpectedContribution,jdbcType=DECIMAL},
      </if>
      <if test="deferredincomeTaxcharges != null">
        deferredincome_taxcharges = #{deferredincomeTaxcharges,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentAssets != null">
        other_non_current_assets = #{otherNonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalNonCurrentAssets != null">
        other_total_non_current_assets = #{otherTotalNonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentAssetsTotalAssets != null">
        other_non_current_assets_total_assets = #{otherNonCurrentAssetsTotalAssets,jdbcType=DECIMAL},
      </if>
      <if test="currentLiabilities != null">
        current_liabilities = #{currentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="shortTermBorrowing != null">
        short_term_borrowing = #{shortTermBorrowing,jdbcType=DECIMAL},
      </if>
      <if test="transactionalFinancialLiabilities != null">
        transactional_financial_liabilities = #{transactionalFinancialLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="derivativeFinancialLiabilities != null">
        derivative_financial_liabilities = #{derivativeFinancialLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="payableAccountsNotes != null">
        payable_accounts_notes = #{payableAccountsNotes,jdbcType=DECIMAL},
      </if>
      <if test="accountsPayable != null">
        accounts_payable = #{accountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="advanceReceipts != null">
        advance_receipts = #{advanceReceipts,jdbcType=DECIMAL},
      </if>
      <if test="contractLiabilities != null">
        contract_liabilities = #{contractLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="paidWorkersSalary != null">
        paid_workers_salary = #{paidWorkersSalary,jdbcType=DECIMAL},
      </if>
      <if test="taxPayable != null">
        tax_payable = #{taxPayable,jdbcType=DECIMAL},
      </if>
      <if test="otherAccountsPayable != null">
        other_accounts_payable = #{otherAccountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="saleLiabilities != null">
        sale_liabilities = #{saleLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="oneyearNonCurrentLiability != null">
        oneYear_non_current_liability = #{oneyearNonCurrentLiability,jdbcType=DECIMAL},
      </if>
      <if test="otherCurrentLiabilities != null">
        other_current_liabilities = #{otherCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="totalCurrentLiabilities != null">
        total_current_liabilities = #{totalCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="nonCurrentLiabilities != null">
        non_current_liabilities = #{nonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="longTermBorrowing != null">
        long_term_borrowing = #{longTermBorrowing,jdbcType=DECIMAL},
      </if>
      <if test="payBond != null">
        pay_bond = #{payBond,jdbcType=DECIMAL},
      </if>
      <if test="payBondPreferredStock != null">
        pay_bond_preferred_stock = #{payBondPreferredStock,jdbcType=DECIMAL},
      </if>
      <if test="payBondSustainableDebts != null">
        pay_bond_sustainable_debts = #{payBondSustainableDebts,jdbcType=DECIMAL},
      </if>
      <if test="longTermAccountsPayable != null">
        long_term_accounts_payable = #{longTermAccountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="projectedLiabilities != null">
        projected_liabilities = #{projectedLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="deferredIncome != null">
        deferred_income = #{deferredIncome,jdbcType=DECIMAL},
      </if>
      <if test="deferredIncomeTaxLiabilities != null">
        deferred_income_tax_liabilities = #{deferredIncomeTaxLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentLiabilities != null">
        other_non_current_liabilities = #{otherNonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalNonCurrentLiabilities != null">
        other_total_non_current_liabilities = #{otherTotalNonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentLiabilitiesTotalLiabilities != null">
        other_non_current_liabilities_total_liabilities = #{otherNonCurrentLiabilitiesTotalLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="ownersEquity != null">
        owners_equity = #{ownersEquity,jdbcType=DECIMAL},
      </if>
      <if test="paidInCapital != null">
        paid_in_capital = #{paidInCapital,jdbcType=DECIMAL},
      </if>
      <if test="otherEquityInstruments != null">
        other_equity_instruments = #{otherEquityInstruments,jdbcType=DECIMAL},
      </if>
      <if test="otherPreferredStock != null">
        other_preferred_stock = #{otherPreferredStock,jdbcType=DECIMAL},
      </if>
      <if test="otherSustainableDebts != null">
        other_sustainable_debts = #{otherSustainableDebts,jdbcType=DECIMAL},
      </if>
      <if test="capitalReserve != null">
        capital_reserve = #{capitalReserve,jdbcType=DECIMAL},
      </if>
      <if test="treasuryStock != null">
        treasury_stock = #{treasuryStock,jdbcType=DECIMAL},
      </if>
      <if test="surplusReserve != null">
        surplus_reserve = #{surplusReserve,jdbcType=DECIMAL},
      </if>
      <if test="otherComprehensiveIncome != null">
        other_comprehensive_income = #{otherComprehensiveIncome,jdbcType=DECIMAL},
      </if>
      <if test="undistributedProfits != null">
        undistributed_profits = #{undistributedProfits,jdbcType=DECIMAL},
      </if>
      <if test="totalOwnersEquity != null">
        total_owners_equity = #{totalOwnersEquity,jdbcType=DECIMAL},
      </if>
      <if test="totalLiabilityOwnersEquity != null">
        total_liability_owners_equity = #{totalLiabilityOwnersEquity,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null">
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        modify_person = #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        data_resource = #{dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huizhi.supplier.db.model.TCpyAssetsLiabilities">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_assets_liabilities
    set company_id = #{companyId,jdbcType=VARCHAR},
      `year` = #{year,jdbcType=CHAR},
      current_assets = #{currentAssets,jdbcType=DECIMAL},
      monetary_funds = #{monetaryFunds,jdbcType=DECIMAL},
      transactional_financial_assets = #{transactionalFinancialAssets,jdbcType=DECIMAL},
      derivative_financial_assets = #{derivativeFinancialAssets,jdbcType=DECIMAL},
      receivable_notes_accounts = #{receivableNotesAccounts,jdbcType=DECIMAL},
      accounts_receivable = #{accountsReceivable,jdbcType=DECIMAL},
      advance_charge = #{advanceCharge,jdbcType=DECIMAL},
      other_receipts = #{otherReceipts,jdbcType=DECIMAL},
      contract_assets = #{contractAssets,jdbcType=DECIMAL},
      inventory = #{inventory,jdbcType=DECIMAL},
      sale_assets = #{saleAssets,jdbcType=DECIMAL},
      one_year_assets = #{oneYearAssets,jdbcType=DECIMAL},
      other_current_assets = #{otherCurrentAssets,jdbcType=DECIMAL},
      other_total_current_assets = #{otherTotalCurrentAssets,jdbcType=DECIMAL},
      non_current_assets = #{nonCurrentAssets,jdbcType=DECIMAL},
      obligatory_right_investment = #{obligatoryRightInvestment,jdbcType=DECIMAL},
      other_obligatory_right_investment = #{otherObligatoryRightInvestment,jdbcType=DECIMAL},
      long_term_receivables = #{longTermReceivables,jdbcType=DECIMAL},
      long_term_investment = #{longTermInvestment,jdbcType=DECIMAL},
      other_equity_investment = #{otherEquityInvestment,jdbcType=DECIMAL},
      other_non_current_financial_assets = #{otherNonCurrentFinancialAssets,jdbcType=DECIMAL},
      investment_property = #{investmentProperty,jdbcType=DECIMAL},
      fixed_assets = #{fixedAssets,jdbcType=DECIMAL},
      construction_in_progress = #{constructionInProgress,jdbcType=DECIMAL},
      productive_biological_assets = #{productiveBiologicalAssets,jdbcType=DECIMAL},
      oil_gas_assets = #{oilGasAssets,jdbcType=DECIMAL},
      five_star_assets = #{fiveStarAssets,jdbcType=DECIMAL},
      development_expenditure = #{developmentExpenditure,jdbcType=DECIMAL},
      goodwill = #{goodwill,jdbcType=DECIMAL},
      long_expected_contribution = #{longExpectedContribution,jdbcType=DECIMAL},
      deferredincome_taxcharges = #{deferredincomeTaxcharges,jdbcType=DECIMAL},
      other_non_current_assets = #{otherNonCurrentAssets,jdbcType=DECIMAL},
      other_total_non_current_assets = #{otherTotalNonCurrentAssets,jdbcType=DECIMAL},
      other_non_current_assets_total_assets = #{otherNonCurrentAssetsTotalAssets,jdbcType=DECIMAL},
      current_liabilities = #{currentLiabilities,jdbcType=DECIMAL},
      short_term_borrowing = #{shortTermBorrowing,jdbcType=DECIMAL},
      transactional_financial_liabilities = #{transactionalFinancialLiabilities,jdbcType=DECIMAL},
      derivative_financial_liabilities = #{derivativeFinancialLiabilities,jdbcType=DECIMAL},
      payable_accounts_notes = #{payableAccountsNotes,jdbcType=DECIMAL},
      accounts_payable = #{accountsPayable,jdbcType=DECIMAL},
      advance_receipts = #{advanceReceipts,jdbcType=DECIMAL},
      contract_liabilities = #{contractLiabilities,jdbcType=DECIMAL},
      paid_workers_salary = #{paidWorkersSalary,jdbcType=DECIMAL},
      tax_payable = #{taxPayable,jdbcType=DECIMAL},
      other_accounts_payable = #{otherAccountsPayable,jdbcType=DECIMAL},
      sale_liabilities = #{saleLiabilities,jdbcType=DECIMAL},
      oneYear_non_current_liability = #{oneyearNonCurrentLiability,jdbcType=DECIMAL},
      other_current_liabilities = #{otherCurrentLiabilities,jdbcType=DECIMAL},
      total_current_liabilities = #{totalCurrentLiabilities,jdbcType=DECIMAL},
      non_current_liabilities = #{nonCurrentLiabilities,jdbcType=DECIMAL},
      long_term_borrowing = #{longTermBorrowing,jdbcType=DECIMAL},
      pay_bond = #{payBond,jdbcType=DECIMAL},
      pay_bond_preferred_stock = #{payBondPreferredStock,jdbcType=DECIMAL},
      pay_bond_sustainable_debts = #{payBondSustainableDebts,jdbcType=DECIMAL},
      long_term_accounts_payable = #{longTermAccountsPayable,jdbcType=DECIMAL},
      projected_liabilities = #{projectedLiabilities,jdbcType=DECIMAL},
      deferred_income = #{deferredIncome,jdbcType=DECIMAL},
      deferred_income_tax_liabilities = #{deferredIncomeTaxLiabilities,jdbcType=DECIMAL},
      other_non_current_liabilities = #{otherNonCurrentLiabilities,jdbcType=DECIMAL},
      other_total_non_current_liabilities = #{otherTotalNonCurrentLiabilities,jdbcType=DECIMAL},
      other_non_current_liabilities_total_liabilities = #{otherNonCurrentLiabilitiesTotalLiabilities,jdbcType=DECIMAL},
      owners_equity = #{ownersEquity,jdbcType=DECIMAL},
      paid_in_capital = #{paidInCapital,jdbcType=DECIMAL},
      other_equity_instruments = #{otherEquityInstruments,jdbcType=DECIMAL},
      other_preferred_stock = #{otherPreferredStock,jdbcType=DECIMAL},
      other_sustainable_debts = #{otherSustainableDebts,jdbcType=DECIMAL},
      capital_reserve = #{capitalReserve,jdbcType=DECIMAL},
      treasury_stock = #{treasuryStock,jdbcType=DECIMAL},
      surplus_reserve = #{surplusReserve,jdbcType=DECIMAL},
      other_comprehensive_income = #{otherComprehensiveIncome,jdbcType=DECIMAL},
      undistributed_profits = #{undistributedProfits,jdbcType=DECIMAL},
      total_owners_equity = #{totalOwnersEquity,jdbcType=DECIMAL},
      total_liability_owners_equity = #{totalLiabilityOwnersEquity,jdbcType=DECIMAL},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_person = #{modifyPerson,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      data_resource = #{dataResource,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.huizhi.supplier.db.model.TCpyAssetsLiabilitiesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from t_cpy_assets_liabilities
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_assets_liabilities
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>




    <select id="selectByCompanyId" resultMap="BaseResultMap">
      select * from t_cpy_assets_liabilities where company_id = #{companyId,jdbcType=VARCHAR}

    </select>
  <select id="selectByCompanyIdAndYear" resultMap="BaseResultMap">
    select  * from t_cpy_assets_liabilities where

     company_id = #{companyId,jdbcType=VARCHAR}
    AND `year` = #{year,jdbcType=CHAR}

  </select>
  <update id="updateByCompanyIdAndYear">
    update t_cpy_assets_liabilities
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        `year` = #{year,jdbcType=CHAR},
      </if>
      <if test="currentAssets != null">
        current_assets = #{currentAssets,jdbcType=DECIMAL},
      </if>
      <if test="monetaryFunds != null">
        monetary_funds = #{monetaryFunds,jdbcType=DECIMAL},
      </if>
      <if test="transactionalFinancialAssets != null">
        transactional_financial_assets = #{transactionalFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="derivativeFinancialAssets != null">
        derivative_financial_assets = #{derivativeFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="receivableNotesAccounts != null">
        receivable_notes_accounts = #{receivableNotesAccounts,jdbcType=DECIMAL},
      </if>
      <if test="accountsReceivable != null">
        accounts_receivable = #{accountsReceivable,jdbcType=DECIMAL},
      </if>
      <if test="advanceCharge != null">
        advance_charge = #{advanceCharge,jdbcType=DECIMAL},
      </if>
      <if test="otherReceipts != null">
        other_receipts = #{otherReceipts,jdbcType=DECIMAL},
      </if>
      <if test="contractAssets != null">
        contract_assets = #{contractAssets,jdbcType=DECIMAL},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=DECIMAL},
      </if>
      <if test="saleAssets != null">
        sale_assets = #{saleAssets,jdbcType=DECIMAL},
      </if>
      <if test="oneYearAssets != null">
        one_year_assets = #{oneYearAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherCurrentAssets != null">
        other_current_assets = #{otherCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalCurrentAssets != null">
        other_total_current_assets = #{otherTotalCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="nonCurrentAssets != null">
        non_current_assets = #{nonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="obligatoryRightInvestment != null">
        obligatory_right_investment = #{obligatoryRightInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherObligatoryRightInvestment != null">
        other_obligatory_right_investment = #{otherObligatoryRightInvestment,jdbcType=DECIMAL},
      </if>
      <if test="longTermReceivables != null">
        long_term_receivables = #{longTermReceivables,jdbcType=DECIMAL},
      </if>
      <if test="longTermInvestment != null">
        long_term_investment = #{longTermInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherEquityInvestment != null">
        other_equity_investment = #{otherEquityInvestment,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentFinancialAssets != null">
        other_non_current_financial_assets = #{otherNonCurrentFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="investmentProperty != null">
        investment_property = #{investmentProperty,jdbcType=DECIMAL},
      </if>
      <if test="fixedAssets != null">
        fixed_assets = #{fixedAssets,jdbcType=DECIMAL},
      </if>
      <if test="constructionInProgress != null">
        construction_in_progress = #{constructionInProgress,jdbcType=DECIMAL},
      </if>
      <if test="productiveBiologicalAssets != null">
        productive_biological_assets = #{productiveBiologicalAssets,jdbcType=DECIMAL},
      </if>
      <if test="oilGasAssets != null">
        oil_gas_assets = #{oilGasAssets,jdbcType=DECIMAL},
      </if>
      <if test="fiveStarAssets != null">
        five_star_assets = #{fiveStarAssets,jdbcType=DECIMAL},
      </if>
      <if test="developmentExpenditure != null">
        development_expenditure = #{developmentExpenditure,jdbcType=DECIMAL},
      </if>
      <if test="goodwill != null">
        goodwill = #{goodwill,jdbcType=DECIMAL},
      </if>
      <if test="longExpectedContribution != null">
        long_expected_contribution = #{longExpectedContribution,jdbcType=DECIMAL},
      </if>
      <if test="deferredincomeTaxcharges != null">
        deferredincome_taxcharges = #{deferredincomeTaxcharges,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentAssets != null">
        other_non_current_assets = #{otherNonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalNonCurrentAssets != null">
        other_total_non_current_assets = #{otherTotalNonCurrentAssets,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentAssetsTotalAssets != null">
        other_non_current_assets_total_assets = #{otherNonCurrentAssetsTotalAssets,jdbcType=DECIMAL},
      </if>
      <if test="currentLiabilities != null">
        current_liabilities = #{currentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="shortTermBorrowing != null">
        short_term_borrowing = #{shortTermBorrowing,jdbcType=DECIMAL},
      </if>
      <if test="transactionalFinancialLiabilities != null">
        transactional_financial_liabilities = #{transactionalFinancialLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="derivativeFinancialLiabilities != null">
        derivative_financial_liabilities = #{derivativeFinancialLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="payableAccountsNotes != null">
        payable_accounts_notes = #{payableAccountsNotes,jdbcType=DECIMAL},
      </if>
      <if test="accountsPayable != null">
        accounts_payable = #{accountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="advanceReceipts != null">
        advance_receipts = #{advanceReceipts,jdbcType=DECIMAL},
      </if>
      <if test="contractLiabilities != null">
        contract_liabilities = #{contractLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="paidWorkersSalary != null">
        paid_workers_salary = #{paidWorkersSalary,jdbcType=DECIMAL},
      </if>
      <if test="taxPayable != null">
        tax_payable = #{taxPayable,jdbcType=DECIMAL},
      </if>
      <if test="otherAccountsPayable != null">
        other_accounts_payable = #{otherAccountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="saleLiabilities != null">
        sale_liabilities = #{saleLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="oneyearNonCurrentLiability != null">
        oneYear_non_current_liability = #{oneyearNonCurrentLiability,jdbcType=DECIMAL},
      </if>
      <if test="otherCurrentLiabilities != null">
        other_current_liabilities = #{otherCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="totalCurrentLiabilities != null">
        total_current_liabilities = #{totalCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="nonCurrentLiabilities != null">
        non_current_liabilities = #{nonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="longTermBorrowing != null">
        long_term_borrowing = #{longTermBorrowing,jdbcType=DECIMAL},
      </if>
      <if test="payBond != null">
        pay_bond = #{payBond,jdbcType=DECIMAL},
      </if>
      <if test="payBondPreferredStock != null">
        pay_bond_preferred_stock = #{payBondPreferredStock,jdbcType=DECIMAL},
      </if>
      <if test="payBondSustainableDebts != null">
        pay_bond_sustainable_debts = #{payBondSustainableDebts,jdbcType=DECIMAL},
      </if>
      <if test="longTermAccountsPayable != null">
        long_term_accounts_payable = #{longTermAccountsPayable,jdbcType=DECIMAL},
      </if>
      <if test="projectedLiabilities != null">
        projected_liabilities = #{projectedLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="deferredIncome != null">
        deferred_income = #{deferredIncome,jdbcType=DECIMAL},
      </if>
      <if test="deferredIncomeTaxLiabilities != null">
        deferred_income_tax_liabilities = #{deferredIncomeTaxLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentLiabilities != null">
        other_non_current_liabilities = #{otherNonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherTotalNonCurrentLiabilities != null">
        other_total_non_current_liabilities = #{otherTotalNonCurrentLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="otherNonCurrentLiabilitiesTotalLiabilities != null">
        other_non_current_liabilities_total_liabilities = #{otherNonCurrentLiabilitiesTotalLiabilities,jdbcType=DECIMAL},
      </if>
      <if test="ownersEquity != null">
        owners_equity = #{ownersEquity,jdbcType=DECIMAL},
      </if>
      <if test="paidInCapital != null">
        paid_in_capital = #{paidInCapital,jdbcType=DECIMAL},
      </if>
      <if test="otherEquityInstruments != null">
        other_equity_instruments = #{otherEquityInstruments,jdbcType=DECIMAL},
      </if>
      <if test="otherPreferredStock != null">
        other_preferred_stock = #{otherPreferredStock,jdbcType=DECIMAL},
      </if>
      <if test="otherSustainableDebts != null">
        other_sustainable_debts = #{otherSustainableDebts,jdbcType=DECIMAL},
      </if>
      <if test="capitalReserve != null">
        capital_reserve = #{capitalReserve,jdbcType=DECIMAL},
      </if>
      <if test="treasuryStock != null">
        treasury_stock = #{treasuryStock,jdbcType=DECIMAL},
      </if>
      <if test="surplusReserve != null">
        surplus_reserve = #{surplusReserve,jdbcType=DECIMAL},
      </if>
      <if test="otherComprehensiveIncome != null">
        other_comprehensive_income = #{otherComprehensiveIncome,jdbcType=DECIMAL},
      </if>
      <if test="undistributedProfits != null">
        undistributed_profits = #{undistributedProfits,jdbcType=DECIMAL},
      </if>
      <if test="totalOwnersEquity != null">
        total_owners_equity = #{totalOwnersEquity,jdbcType=DECIMAL},
      </if>
      <if test="totalLiabilityOwnersEquity != null">
        total_liability_owners_equity = #{totalLiabilityOwnersEquity,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null">
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        modify_person = #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        data_resource = #{dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=VARCHAR}
    AND `year` = #{year,jdbcType=CHAR}



  </update>
</mapper>