<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huizhi.supplier.db.dao.TCpyProfitLossMapper">
  <resultMap id="BaseResultMap" type="com.huizhi.supplier.db.model.TCpyProfitLoss">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="operating_income" jdbcType="DECIMAL" property="operatingIncome" />
    <result column="operating_cost" jdbcType="DECIMAL" property="operatingCost" />
    <result column="tax_additional" jdbcType="DECIMAL" property="taxAdditional" />
    <result column="sales_costs" jdbcType="DECIMAL" property="salesCosts" />
    <result column="management_costs" jdbcType="DECIMAL" property="managementCosts" />
    <result column="research_costs" jdbcType="DECIMAL" property="researchCosts" />
    <result column="financial_costs" jdbcType="DECIMAL" property="financialCosts" />
    <result column="capital_charges" jdbcType="DECIMAL" property="capitalCharges" />
    <result column="interest_revenue" jdbcType="DECIMAL" property="interestRevenue" />
    <result column="asset_impairment_losses" jdbcType="DECIMAL" property="assetImpairmentLosses" />
    <result column="credit_impairment_losses" jdbcType="DECIMAL" property="creditImpairmentLosses" />
    <result column="other_income" jdbcType="DECIMAL" property="otherIncome" />
    <result column="investment_income" jdbcType="DECIMAL" property="investmentIncome" />
    <result column="joint_ventures_investment" jdbcType="DECIMAL" property="jointVenturesInvestment" />
    <result column="net_exposure_hedging_income" jdbcType="DECIMAL" property="netExposureHedgingIncome" />
    <result column="fairvalue_changegains" jdbcType="DECIMAL" property="fairvalueChangegains" />
    <result column="assets_disposal_income" jdbcType="DECIMAL" property="assetsDisposalIncome" />
    <result column="operating_profit" jdbcType="DECIMAL" property="operatingProfit" />
    <result column="offBusiness_profit" jdbcType="DECIMAL" property="offbusinessProfit" />
    <result column="non_operating_expenses" jdbcType="DECIMAL" property="nonOperatingExpenses" />
    <result column="total_profit" jdbcType="DECIMAL" property="totalProfit" />
    <result column="tax_fees" jdbcType="DECIMAL" property="taxFees" />
    <result column="net_profit" jdbcType="DECIMAL" property="netProfit" />
    <result column="net_continuing_operating_profit" jdbcType="DECIMAL" property="netContinuingOperatingProfit" />
    <result column="net_termination_operating_profit" jdbcType="DECIMAL" property="netTerminationOperatingProfit" />
    <result column="other_after_tax_earnings" jdbcType="DECIMAL" property="otherAfterTaxEarnings" />
    <result column="other_non_reclassified_income" jdbcType="DECIMAL" property="otherNonReclassifiedIncome" />
    <result column="recalculating_changes" jdbcType="DECIMAL" property="recalculatingChanges" />
    <result column="other_non_converted_income2" jdbcType="DECIMAL" property="otherNonConvertedIncome2" />
    <result column="instruments_value_changes" jdbcType="DECIMAL" property="instrumentsValueChanges" />
    <result column="credit_risk_changes" jdbcType="DECIMAL" property="creditRiskChanges" />
    <result column="other_reclassified_income" jdbcType="DECIMAL" property="otherReclassifiedIncome" />
    <result column="other_converted_income" jdbcType="DECIMAL" property="otherConvertedIncome" />
    <result column="other_credit_impairment_provision" jdbcType="DECIMAL" property="otherCreditImpairmentProvision" />
    <result column="reclassified_financial_assets" jdbcType="DECIMAL" property="reclassifiedFinancialAssets" />
    <result column="foreign_currency_translation_difference" jdbcType="DECIMAL" property="foreignCurrencyTranslationDifference" />
    <result column="cash_flow_hedging_reserve" jdbcType="DECIMAL" property="cashFlowHedgingReserve" />
    <result column="total_combined_proceeds" jdbcType="DECIMAL" property="totalCombinedProceeds" />
    <result column="stock_income" jdbcType="DECIMAL" property="stockIncome" />
    <result column="basic_stock_income" jdbcType="DECIMAL" property="basicStockIncome" />
    <result column="dilute_stock_income" jdbcType="DECIMAL" property="diluteStockIncome" />
    <result column="other_obligatory_right_investments" jdbcType="DECIMAL" property="otherObligatoryRightInvestments" />
    <result column="create_person" jdbcType="VARCHAR" property="createPerson" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_person" jdbcType="VARCHAR" property="modifyPerson" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="data_resource" jdbcType="VARCHAR" property="dataResource" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, company_id, `year`, operating_income, operating_cost, tax_additional, sales_costs, 
    management_costs, research_costs, financial_costs, capital_charges, interest_revenue, 
    asset_impairment_losses, credit_impairment_losses, other_income, investment_income, 
    joint_ventures_investment, net_exposure_hedging_income, fairvalue_changegains, assets_disposal_income, 
    operating_profit, offBusiness_profit, non_operating_expenses, total_profit, tax_fees, 
    net_profit, net_continuing_operating_profit, net_termination_operating_profit, other_after_tax_earnings, 
    other_non_reclassified_income, recalculating_changes, other_non_converted_income2, 
    instruments_value_changes, credit_risk_changes, other_reclassified_income, other_converted_income, 
    other_credit_impairment_provision, reclassified_financial_assets, foreign_currency_translation_difference, 
    cash_flow_hedging_reserve, total_combined_proceeds, stock_income, basic_stock_income, 
    dilute_stock_income, other_obligatory_right_investments, create_person, create_time, 
    modify_person, modify_time, data_resource
  </sql>
  <select id="selectByExample" parameterType="com.huizhi.supplier.db.model.TCpyProfitLossExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_cpy_profit_loss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_profit_loss
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_cpy_profit_loss
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_profit_loss
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_cpy_profit_loss
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huizhi.supplier.db.model.TCpyProfitLossExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_cpy_profit_loss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huizhi.supplier.db.model.TCpyProfitLoss">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_cpy_profit_loss (company_id, `year`, operating_income, 
      operating_cost, tax_additional, sales_costs, 
      management_costs, research_costs, financial_costs, 
      capital_charges, interest_revenue, asset_impairment_losses, 
      credit_impairment_losses, other_income, investment_income, 
      joint_ventures_investment, net_exposure_hedging_income, 
      fairvalue_changegains, assets_disposal_income, 
      operating_profit, offBusiness_profit, non_operating_expenses, 
      total_profit, tax_fees, net_profit, 
      net_continuing_operating_profit, net_termination_operating_profit, 
      other_after_tax_earnings, other_non_reclassified_income, 
      recalculating_changes, other_non_converted_income2, 
      instruments_value_changes, credit_risk_changes, 
      other_reclassified_income, other_converted_income, 
      other_credit_impairment_provision, reclassified_financial_assets, 
      foreign_currency_translation_difference, cash_flow_hedging_reserve, 
      total_combined_proceeds, stock_income, basic_stock_income, 
      dilute_stock_income, other_obligatory_right_investments, 
      create_person, create_time, modify_person, 
      modify_time, data_resource)
    values (#{companyId,jdbcType=INTEGER}, #{year,jdbcType=CHAR}, #{operatingIncome,jdbcType=DECIMAL}, 
      #{operatingCost,jdbcType=DECIMAL}, #{taxAdditional,jdbcType=DECIMAL}, #{salesCosts,jdbcType=DECIMAL}, 
      #{managementCosts,jdbcType=DECIMAL}, #{researchCosts,jdbcType=DECIMAL}, #{financialCosts,jdbcType=DECIMAL}, 
      #{capitalCharges,jdbcType=DECIMAL}, #{interestRevenue,jdbcType=DECIMAL}, #{assetImpairmentLosses,jdbcType=DECIMAL}, 
      #{creditImpairmentLosses,jdbcType=DECIMAL}, #{otherIncome,jdbcType=DECIMAL}, #{investmentIncome,jdbcType=DECIMAL}, 
      #{jointVenturesInvestment,jdbcType=DECIMAL}, #{netExposureHedgingIncome,jdbcType=DECIMAL}, 
      #{fairvalueChangegains,jdbcType=DECIMAL}, #{assetsDisposalIncome,jdbcType=DECIMAL}, 
      #{operatingProfit,jdbcType=DECIMAL}, #{offbusinessProfit,jdbcType=DECIMAL}, #{nonOperatingExpenses,jdbcType=DECIMAL}, 
      #{totalProfit,jdbcType=DECIMAL}, #{taxFees,jdbcType=DECIMAL}, #{netProfit,jdbcType=DECIMAL}, 
      #{netContinuingOperatingProfit,jdbcType=DECIMAL}, #{netTerminationOperatingProfit,jdbcType=DECIMAL}, 
      #{otherAfterTaxEarnings,jdbcType=DECIMAL}, #{otherNonReclassifiedIncome,jdbcType=DECIMAL}, 
      #{recalculatingChanges,jdbcType=DECIMAL}, #{otherNonConvertedIncome2,jdbcType=DECIMAL}, 
      #{instrumentsValueChanges,jdbcType=DECIMAL}, #{creditRiskChanges,jdbcType=DECIMAL}, 
      #{otherReclassifiedIncome,jdbcType=DECIMAL}, #{otherConvertedIncome,jdbcType=DECIMAL}, 
      #{otherCreditImpairmentProvision,jdbcType=DECIMAL}, #{reclassifiedFinancialAssets,jdbcType=DECIMAL}, 
      #{foreignCurrencyTranslationDifference,jdbcType=DECIMAL}, #{cashFlowHedgingReserve,jdbcType=DECIMAL}, 
      #{totalCombinedProceeds,jdbcType=DECIMAL}, #{stockIncome,jdbcType=DECIMAL}, #{basicStockIncome,jdbcType=DECIMAL}, 
      #{diluteStockIncome,jdbcType=DECIMAL}, #{otherObligatoryRightInvestments,jdbcType=DECIMAL}, 
      #{createPerson,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyPerson,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{dataResource,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huizhi.supplier.db.model.TCpyProfitLoss">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_cpy_profit_loss
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="year != null">
        `year`,
      </if>
      <if test="operatingIncome != null">
        operating_income,
      </if>
      <if test="operatingCost != null">
        operating_cost,
      </if>
      <if test="taxAdditional != null">
        tax_additional,
      </if>
      <if test="salesCosts != null">
        sales_costs,
      </if>
      <if test="managementCosts != null">
        management_costs,
      </if>
      <if test="researchCosts != null">
        research_costs,
      </if>
      <if test="financialCosts != null">
        financial_costs,
      </if>
      <if test="capitalCharges != null">
        capital_charges,
      </if>
      <if test="interestRevenue != null">
        interest_revenue,
      </if>
      <if test="assetImpairmentLosses != null">
        asset_impairment_losses,
      </if>
      <if test="creditImpairmentLosses != null">
        credit_impairment_losses,
      </if>
      <if test="otherIncome != null">
        other_income,
      </if>
      <if test="investmentIncome != null">
        investment_income,
      </if>
      <if test="jointVenturesInvestment != null">
        joint_ventures_investment,
      </if>
      <if test="netExposureHedgingIncome != null">
        net_exposure_hedging_income,
      </if>
      <if test="fairvalueChangegains != null">
        fairvalue_changegains,
      </if>
      <if test="assetsDisposalIncome != null">
        assets_disposal_income,
      </if>
      <if test="operatingProfit != null">
        operating_profit,
      </if>
      <if test="offbusinessProfit != null">
        offBusiness_profit,
      </if>
      <if test="nonOperatingExpenses != null">
        non_operating_expenses,
      </if>
      <if test="totalProfit != null">
        total_profit,
      </if>
      <if test="taxFees != null">
        tax_fees,
      </if>
      <if test="netProfit != null">
        net_profit,
      </if>
      <if test="netContinuingOperatingProfit != null">
        net_continuing_operating_profit,
      </if>
      <if test="netTerminationOperatingProfit != null">
        net_termination_operating_profit,
      </if>
      <if test="otherAfterTaxEarnings != null">
        other_after_tax_earnings,
      </if>
      <if test="otherNonReclassifiedIncome != null">
        other_non_reclassified_income,
      </if>
      <if test="recalculatingChanges != null">
        recalculating_changes,
      </if>
      <if test="otherNonConvertedIncome2 != null">
        other_non_converted_income2,
      </if>
      <if test="instrumentsValueChanges != null">
        instruments_value_changes,
      </if>
      <if test="creditRiskChanges != null">
        credit_risk_changes,
      </if>
      <if test="otherReclassifiedIncome != null">
        other_reclassified_income,
      </if>
      <if test="otherConvertedIncome != null">
        other_converted_income,
      </if>
      <if test="otherCreditImpairmentProvision != null">
        other_credit_impairment_provision,
      </if>
      <if test="reclassifiedFinancialAssets != null">
        reclassified_financial_assets,
      </if>
      <if test="foreignCurrencyTranslationDifference != null">
        foreign_currency_translation_difference,
      </if>
      <if test="cashFlowHedgingReserve != null">
        cash_flow_hedging_reserve,
      </if>
      <if test="totalCombinedProceeds != null">
        total_combined_proceeds,
      </if>
      <if test="stockIncome != null">
        stock_income,
      </if>
      <if test="basicStockIncome != null">
        basic_stock_income,
      </if>
      <if test="diluteStockIncome != null">
        dilute_stock_income,
      </if>
      <if test="otherObligatoryRightInvestments != null">
        other_obligatory_right_investments,
      </if>
      <if test="createPerson != null">
        create_person,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyPerson != null">
        modify_person,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="dataResource != null">
        data_resource,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="operatingIncome != null">
        #{operatingIncome,jdbcType=DECIMAL},
      </if>
      <if test="operatingCost != null">
        #{operatingCost,jdbcType=DECIMAL},
      </if>
      <if test="taxAdditional != null">
        #{taxAdditional,jdbcType=DECIMAL},
      </if>
      <if test="salesCosts != null">
        #{salesCosts,jdbcType=DECIMAL},
      </if>
      <if test="managementCosts != null">
        #{managementCosts,jdbcType=DECIMAL},
      </if>
      <if test="researchCosts != null">
        #{researchCosts,jdbcType=DECIMAL},
      </if>
      <if test="financialCosts != null">
        #{financialCosts,jdbcType=DECIMAL},
      </if>
      <if test="capitalCharges != null">
        #{capitalCharges,jdbcType=DECIMAL},
      </if>
      <if test="interestRevenue != null">
        #{interestRevenue,jdbcType=DECIMAL},
      </if>
      <if test="assetImpairmentLosses != null">
        #{assetImpairmentLosses,jdbcType=DECIMAL},
      </if>
      <if test="creditImpairmentLosses != null">
        #{creditImpairmentLosses,jdbcType=DECIMAL},
      </if>
      <if test="otherIncome != null">
        #{otherIncome,jdbcType=DECIMAL},
      </if>
      <if test="investmentIncome != null">
        #{investmentIncome,jdbcType=DECIMAL},
      </if>
      <if test="jointVenturesInvestment != null">
        #{jointVenturesInvestment,jdbcType=DECIMAL},
      </if>
      <if test="netExposureHedgingIncome != null">
        #{netExposureHedgingIncome,jdbcType=DECIMAL},
      </if>
      <if test="fairvalueChangegains != null">
        #{fairvalueChangegains,jdbcType=DECIMAL},
      </if>
      <if test="assetsDisposalIncome != null">
        #{assetsDisposalIncome,jdbcType=DECIMAL},
      </if>
      <if test="operatingProfit != null">
        #{operatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="offbusinessProfit != null">
        #{offbusinessProfit,jdbcType=DECIMAL},
      </if>
      <if test="nonOperatingExpenses != null">
        #{nonOperatingExpenses,jdbcType=DECIMAL},
      </if>
      <if test="totalProfit != null">
        #{totalProfit,jdbcType=DECIMAL},
      </if>
      <if test="taxFees != null">
        #{taxFees,jdbcType=DECIMAL},
      </if>
      <if test="netProfit != null">
        #{netProfit,jdbcType=DECIMAL},
      </if>
      <if test="netContinuingOperatingProfit != null">
        #{netContinuingOperatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="netTerminationOperatingProfit != null">
        #{netTerminationOperatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="otherAfterTaxEarnings != null">
        #{otherAfterTaxEarnings,jdbcType=DECIMAL},
      </if>
      <if test="otherNonReclassifiedIncome != null">
        #{otherNonReclassifiedIncome,jdbcType=DECIMAL},
      </if>
      <if test="recalculatingChanges != null">
        #{recalculatingChanges,jdbcType=DECIMAL},
      </if>
      <if test="otherNonConvertedIncome2 != null">
        #{otherNonConvertedIncome2,jdbcType=DECIMAL},
      </if>
      <if test="instrumentsValueChanges != null">
        #{instrumentsValueChanges,jdbcType=DECIMAL},
      </if>
      <if test="creditRiskChanges != null">
        #{creditRiskChanges,jdbcType=DECIMAL},
      </if>
      <if test="otherReclassifiedIncome != null">
        #{otherReclassifiedIncome,jdbcType=DECIMAL},
      </if>
      <if test="otherConvertedIncome != null">
        #{otherConvertedIncome,jdbcType=DECIMAL},
      </if>
      <if test="otherCreditImpairmentProvision != null">
        #{otherCreditImpairmentProvision,jdbcType=DECIMAL},
      </if>
      <if test="reclassifiedFinancialAssets != null">
        #{reclassifiedFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="foreignCurrencyTranslationDifference != null">
        #{foreignCurrencyTranslationDifference,jdbcType=DECIMAL},
      </if>
      <if test="cashFlowHedgingReserve != null">
        #{cashFlowHedgingReserve,jdbcType=DECIMAL},
      </if>
      <if test="totalCombinedProceeds != null">
        #{totalCombinedProceeds,jdbcType=DECIMAL},
      </if>
      <if test="stockIncome != null">
        #{stockIncome,jdbcType=DECIMAL},
      </if>
      <if test="basicStockIncome != null">
        #{basicStockIncome,jdbcType=DECIMAL},
      </if>
      <if test="diluteStockIncome != null">
        #{diluteStockIncome,jdbcType=DECIMAL},
      </if>
      <if test="otherObligatoryRightInvestments != null">
        #{otherObligatoryRightInvestments,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        #{dataResource,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huizhi.supplier.db.model.TCpyProfitLossExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_cpy_profit_loss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_profit_loss
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        `year` = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.operatingIncome != null">
        operating_income = #{record.operatingIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.operatingCost != null">
        operating_cost = #{record.operatingCost,jdbcType=DECIMAL},
      </if>
      <if test="record.taxAdditional != null">
        tax_additional = #{record.taxAdditional,jdbcType=DECIMAL},
      </if>
      <if test="record.salesCosts != null">
        sales_costs = #{record.salesCosts,jdbcType=DECIMAL},
      </if>
      <if test="record.managementCosts != null">
        management_costs = #{record.managementCosts,jdbcType=DECIMAL},
      </if>
      <if test="record.researchCosts != null">
        research_costs = #{record.researchCosts,jdbcType=DECIMAL},
      </if>
      <if test="record.financialCosts != null">
        financial_costs = #{record.financialCosts,jdbcType=DECIMAL},
      </if>
      <if test="record.capitalCharges != null">
        capital_charges = #{record.capitalCharges,jdbcType=DECIMAL},
      </if>
      <if test="record.interestRevenue != null">
        interest_revenue = #{record.interestRevenue,jdbcType=DECIMAL},
      </if>
      <if test="record.assetImpairmentLosses != null">
        asset_impairment_losses = #{record.assetImpairmentLosses,jdbcType=DECIMAL},
      </if>
      <if test="record.creditImpairmentLosses != null">
        credit_impairment_losses = #{record.creditImpairmentLosses,jdbcType=DECIMAL},
      </if>
      <if test="record.otherIncome != null">
        other_income = #{record.otherIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentIncome != null">
        investment_income = #{record.investmentIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.jointVenturesInvestment != null">
        joint_ventures_investment = #{record.jointVenturesInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.netExposureHedgingIncome != null">
        net_exposure_hedging_income = #{record.netExposureHedgingIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.fairvalueChangegains != null">
        fairvalue_changegains = #{record.fairvalueChangegains,jdbcType=DECIMAL},
      </if>
      <if test="record.assetsDisposalIncome != null">
        assets_disposal_income = #{record.assetsDisposalIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.operatingProfit != null">
        operating_profit = #{record.operatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.offbusinessProfit != null">
        offBusiness_profit = #{record.offbusinessProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.nonOperatingExpenses != null">
        non_operating_expenses = #{record.nonOperatingExpenses,jdbcType=DECIMAL},
      </if>
      <if test="record.totalProfit != null">
        total_profit = #{record.totalProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.taxFees != null">
        tax_fees = #{record.taxFees,jdbcType=DECIMAL},
      </if>
      <if test="record.netProfit != null">
        net_profit = #{record.netProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.netContinuingOperatingProfit != null">
        net_continuing_operating_profit = #{record.netContinuingOperatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.netTerminationOperatingProfit != null">
        net_termination_operating_profit = #{record.netTerminationOperatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.otherAfterTaxEarnings != null">
        other_after_tax_earnings = #{record.otherAfterTaxEarnings,jdbcType=DECIMAL},
      </if>
      <if test="record.otherNonReclassifiedIncome != null">
        other_non_reclassified_income = #{record.otherNonReclassifiedIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.recalculatingChanges != null">
        recalculating_changes = #{record.recalculatingChanges,jdbcType=DECIMAL},
      </if>
      <if test="record.otherNonConvertedIncome2 != null">
        other_non_converted_income2 = #{record.otherNonConvertedIncome2,jdbcType=DECIMAL},
      </if>
      <if test="record.instrumentsValueChanges != null">
        instruments_value_changes = #{record.instrumentsValueChanges,jdbcType=DECIMAL},
      </if>
      <if test="record.creditRiskChanges != null">
        credit_risk_changes = #{record.creditRiskChanges,jdbcType=DECIMAL},
      </if>
      <if test="record.otherReclassifiedIncome != null">
        other_reclassified_income = #{record.otherReclassifiedIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.otherConvertedIncome != null">
        other_converted_income = #{record.otherConvertedIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.otherCreditImpairmentProvision != null">
        other_credit_impairment_provision = #{record.otherCreditImpairmentProvision,jdbcType=DECIMAL},
      </if>
      <if test="record.reclassifiedFinancialAssets != null">
        reclassified_financial_assets = #{record.reclassifiedFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.foreignCurrencyTranslationDifference != null">
        foreign_currency_translation_difference = #{record.foreignCurrencyTranslationDifference,jdbcType=DECIMAL},
      </if>
      <if test="record.cashFlowHedgingReserve != null">
        cash_flow_hedging_reserve = #{record.cashFlowHedgingReserve,jdbcType=DECIMAL},
      </if>
      <if test="record.totalCombinedProceeds != null">
        total_combined_proceeds = #{record.totalCombinedProceeds,jdbcType=DECIMAL},
      </if>
      <if test="record.stockIncome != null">
        stock_income = #{record.stockIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.basicStockIncome != null">
        basic_stock_income = #{record.basicStockIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.diluteStockIncome != null">
        dilute_stock_income = #{record.diluteStockIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.otherObligatoryRightInvestments != null">
        other_obligatory_right_investments = #{record.otherObligatoryRightInvestments,jdbcType=DECIMAL},
      </if>
      <if test="record.createPerson != null">
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyPerson != null">
        modify_person = #{record.modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataResource != null">
        data_resource = #{record.dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_profit_loss
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      `year` = #{record.year,jdbcType=CHAR},
      operating_income = #{record.operatingIncome,jdbcType=DECIMAL},
      operating_cost = #{record.operatingCost,jdbcType=DECIMAL},
      tax_additional = #{record.taxAdditional,jdbcType=DECIMAL},
      sales_costs = #{record.salesCosts,jdbcType=DECIMAL},
      management_costs = #{record.managementCosts,jdbcType=DECIMAL},
      research_costs = #{record.researchCosts,jdbcType=DECIMAL},
      financial_costs = #{record.financialCosts,jdbcType=DECIMAL},
      capital_charges = #{record.capitalCharges,jdbcType=DECIMAL},
      interest_revenue = #{record.interestRevenue,jdbcType=DECIMAL},
      asset_impairment_losses = #{record.assetImpairmentLosses,jdbcType=DECIMAL},
      credit_impairment_losses = #{record.creditImpairmentLosses,jdbcType=DECIMAL},
      other_income = #{record.otherIncome,jdbcType=DECIMAL},
      investment_income = #{record.investmentIncome,jdbcType=DECIMAL},
      joint_ventures_investment = #{record.jointVenturesInvestment,jdbcType=DECIMAL},
      net_exposure_hedging_income = #{record.netExposureHedgingIncome,jdbcType=DECIMAL},
      fairvalue_changegains = #{record.fairvalueChangegains,jdbcType=DECIMAL},
      assets_disposal_income = #{record.assetsDisposalIncome,jdbcType=DECIMAL},
      operating_profit = #{record.operatingProfit,jdbcType=DECIMAL},
      offBusiness_profit = #{record.offbusinessProfit,jdbcType=DECIMAL},
      non_operating_expenses = #{record.nonOperatingExpenses,jdbcType=DECIMAL},
      total_profit = #{record.totalProfit,jdbcType=DECIMAL},
      tax_fees = #{record.taxFees,jdbcType=DECIMAL},
      net_profit = #{record.netProfit,jdbcType=DECIMAL},
      net_continuing_operating_profit = #{record.netContinuingOperatingProfit,jdbcType=DECIMAL},
      net_termination_operating_profit = #{record.netTerminationOperatingProfit,jdbcType=DECIMAL},
      other_after_tax_earnings = #{record.otherAfterTaxEarnings,jdbcType=DECIMAL},
      other_non_reclassified_income = #{record.otherNonReclassifiedIncome,jdbcType=DECIMAL},
      recalculating_changes = #{record.recalculatingChanges,jdbcType=DECIMAL},
      other_non_converted_income2 = #{record.otherNonConvertedIncome2,jdbcType=DECIMAL},
      instruments_value_changes = #{record.instrumentsValueChanges,jdbcType=DECIMAL},
      credit_risk_changes = #{record.creditRiskChanges,jdbcType=DECIMAL},
      other_reclassified_income = #{record.otherReclassifiedIncome,jdbcType=DECIMAL},
      other_converted_income = #{record.otherConvertedIncome,jdbcType=DECIMAL},
      other_credit_impairment_provision = #{record.otherCreditImpairmentProvision,jdbcType=DECIMAL},
      reclassified_financial_assets = #{record.reclassifiedFinancialAssets,jdbcType=DECIMAL},
      foreign_currency_translation_difference = #{record.foreignCurrencyTranslationDifference,jdbcType=DECIMAL},
      cash_flow_hedging_reserve = #{record.cashFlowHedgingReserve,jdbcType=DECIMAL},
      total_combined_proceeds = #{record.totalCombinedProceeds,jdbcType=DECIMAL},
      stock_income = #{record.stockIncome,jdbcType=DECIMAL},
      basic_stock_income = #{record.basicStockIncome,jdbcType=DECIMAL},
      dilute_stock_income = #{record.diluteStockIncome,jdbcType=DECIMAL},
      other_obligatory_right_investments = #{record.otherObligatoryRightInvestments,jdbcType=DECIMAL},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_person = #{record.modifyPerson,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      data_resource = #{record.dataResource,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huizhi.supplier.db.model.TCpyProfitLoss">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_profit_loss
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        `year` = #{year,jdbcType=CHAR},
      </if>
      <if test="operatingIncome != null">
        operating_income = #{operatingIncome,jdbcType=DECIMAL},
      </if>
      <if test="operatingCost != null">
        operating_cost = #{operatingCost,jdbcType=DECIMAL},
      </if>
      <if test="taxAdditional != null">
        tax_additional = #{taxAdditional,jdbcType=DECIMAL},
      </if>
      <if test="salesCosts != null">
        sales_costs = #{salesCosts,jdbcType=DECIMAL},
      </if>
      <if test="managementCosts != null">
        management_costs = #{managementCosts,jdbcType=DECIMAL},
      </if>
      <if test="researchCosts != null">
        research_costs = #{researchCosts,jdbcType=DECIMAL},
      </if>
      <if test="financialCosts != null">
        financial_costs = #{financialCosts,jdbcType=DECIMAL},
      </if>
      <if test="capitalCharges != null">
        capital_charges = #{capitalCharges,jdbcType=DECIMAL},
      </if>
      <if test="interestRevenue != null">
        interest_revenue = #{interestRevenue,jdbcType=DECIMAL},
      </if>
      <if test="assetImpairmentLosses != null">
        asset_impairment_losses = #{assetImpairmentLosses,jdbcType=DECIMAL},
      </if>
      <if test="creditImpairmentLosses != null">
        credit_impairment_losses = #{creditImpairmentLosses,jdbcType=DECIMAL},
      </if>
      <if test="otherIncome != null">
        other_income = #{otherIncome,jdbcType=DECIMAL},
      </if>
      <if test="investmentIncome != null">
        investment_income = #{investmentIncome,jdbcType=DECIMAL},
      </if>
      <if test="jointVenturesInvestment != null">
        joint_ventures_investment = #{jointVenturesInvestment,jdbcType=DECIMAL},
      </if>
      <if test="netExposureHedgingIncome != null">
        net_exposure_hedging_income = #{netExposureHedgingIncome,jdbcType=DECIMAL},
      </if>
      <if test="fairvalueChangegains != null">
        fairvalue_changegains = #{fairvalueChangegains,jdbcType=DECIMAL},
      </if>
      <if test="assetsDisposalIncome != null">
        assets_disposal_income = #{assetsDisposalIncome,jdbcType=DECIMAL},
      </if>
      <if test="operatingProfit != null">
        operating_profit = #{operatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="offbusinessProfit != null">
        offBusiness_profit = #{offbusinessProfit,jdbcType=DECIMAL},
      </if>
      <if test="nonOperatingExpenses != null">
        non_operating_expenses = #{nonOperatingExpenses,jdbcType=DECIMAL},
      </if>
      <if test="totalProfit != null">
        total_profit = #{totalProfit,jdbcType=DECIMAL},
      </if>
      <if test="taxFees != null">
        tax_fees = #{taxFees,jdbcType=DECIMAL},
      </if>
      <if test="netProfit != null">
        net_profit = #{netProfit,jdbcType=DECIMAL},
      </if>
      <if test="netContinuingOperatingProfit != null">
        net_continuing_operating_profit = #{netContinuingOperatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="netTerminationOperatingProfit != null">
        net_termination_operating_profit = #{netTerminationOperatingProfit,jdbcType=DECIMAL},
      </if>
      <if test="otherAfterTaxEarnings != null">
        other_after_tax_earnings = #{otherAfterTaxEarnings,jdbcType=DECIMAL},
      </if>
      <if test="otherNonReclassifiedIncome != null">
        other_non_reclassified_income = #{otherNonReclassifiedIncome,jdbcType=DECIMAL},
      </if>
      <if test="recalculatingChanges != null">
        recalculating_changes = #{recalculatingChanges,jdbcType=DECIMAL},
      </if>
      <if test="otherNonConvertedIncome2 != null">
        other_non_converted_income2 = #{otherNonConvertedIncome2,jdbcType=DECIMAL},
      </if>
      <if test="instrumentsValueChanges != null">
        instruments_value_changes = #{instrumentsValueChanges,jdbcType=DECIMAL},
      </if>
      <if test="creditRiskChanges != null">
        credit_risk_changes = #{creditRiskChanges,jdbcType=DECIMAL},
      </if>
      <if test="otherReclassifiedIncome != null">
        other_reclassified_income = #{otherReclassifiedIncome,jdbcType=DECIMAL},
      </if>
      <if test="otherConvertedIncome != null">
        other_converted_income = #{otherConvertedIncome,jdbcType=DECIMAL},
      </if>
      <if test="otherCreditImpairmentProvision != null">
        other_credit_impairment_provision = #{otherCreditImpairmentProvision,jdbcType=DECIMAL},
      </if>
      <if test="reclassifiedFinancialAssets != null">
        reclassified_financial_assets = #{reclassifiedFinancialAssets,jdbcType=DECIMAL},
      </if>
      <if test="foreignCurrencyTranslationDifference != null">
        foreign_currency_translation_difference = #{foreignCurrencyTranslationDifference,jdbcType=DECIMAL},
      </if>
      <if test="cashFlowHedgingReserve != null">
        cash_flow_hedging_reserve = #{cashFlowHedgingReserve,jdbcType=DECIMAL},
      </if>
      <if test="totalCombinedProceeds != null">
        total_combined_proceeds = #{totalCombinedProceeds,jdbcType=DECIMAL},
      </if>
      <if test="stockIncome != null">
        stock_income = #{stockIncome,jdbcType=DECIMAL},
      </if>
      <if test="basicStockIncome != null">
        basic_stock_income = #{basicStockIncome,jdbcType=DECIMAL},
      </if>
      <if test="diluteStockIncome != null">
        dilute_stock_income = #{diluteStockIncome,jdbcType=DECIMAL},
      </if>
      <if test="otherObligatoryRightInvestments != null">
        other_obligatory_right_investments = #{otherObligatoryRightInvestments,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null">
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        modify_person = #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        data_resource = #{dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huizhi.supplier.db.model.TCpyProfitLoss">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_profit_loss
    set company_id = #{companyId,jdbcType=INTEGER},
      `year` = #{year,jdbcType=CHAR},
      operating_income = #{operatingIncome,jdbcType=DECIMAL},
      operating_cost = #{operatingCost,jdbcType=DECIMAL},
      tax_additional = #{taxAdditional,jdbcType=DECIMAL},
      sales_costs = #{salesCosts,jdbcType=DECIMAL},
      management_costs = #{managementCosts,jdbcType=DECIMAL},
      research_costs = #{researchCosts,jdbcType=DECIMAL},
      financial_costs = #{financialCosts,jdbcType=DECIMAL},
      capital_charges = #{capitalCharges,jdbcType=DECIMAL},
      interest_revenue = #{interestRevenue,jdbcType=DECIMAL},
      asset_impairment_losses = #{assetImpairmentLosses,jdbcType=DECIMAL},
      credit_impairment_losses = #{creditImpairmentLosses,jdbcType=DECIMAL},
      other_income = #{otherIncome,jdbcType=DECIMAL},
      investment_income = #{investmentIncome,jdbcType=DECIMAL},
      joint_ventures_investment = #{jointVenturesInvestment,jdbcType=DECIMAL},
      net_exposure_hedging_income = #{netExposureHedgingIncome,jdbcType=DECIMAL},
      fairvalue_changegains = #{fairvalueChangegains,jdbcType=DECIMAL},
      assets_disposal_income = #{assetsDisposalIncome,jdbcType=DECIMAL},
      operating_profit = #{operatingProfit,jdbcType=DECIMAL},
      offBusiness_profit = #{offbusinessProfit,jdbcType=DECIMAL},
      non_operating_expenses = #{nonOperatingExpenses,jdbcType=DECIMAL},
      total_profit = #{totalProfit,jdbcType=DECIMAL},
      tax_fees = #{taxFees,jdbcType=DECIMAL},
      net_profit = #{netProfit,jdbcType=DECIMAL},
      net_continuing_operating_profit = #{netContinuingOperatingProfit,jdbcType=DECIMAL},
      net_termination_operating_profit = #{netTerminationOperatingProfit,jdbcType=DECIMAL},
      other_after_tax_earnings = #{otherAfterTaxEarnings,jdbcType=DECIMAL},
      other_non_reclassified_income = #{otherNonReclassifiedIncome,jdbcType=DECIMAL},
      recalculating_changes = #{recalculatingChanges,jdbcType=DECIMAL},
      other_non_converted_income2 = #{otherNonConvertedIncome2,jdbcType=DECIMAL},
      instruments_value_changes = #{instrumentsValueChanges,jdbcType=DECIMAL},
      credit_risk_changes = #{creditRiskChanges,jdbcType=DECIMAL},
      other_reclassified_income = #{otherReclassifiedIncome,jdbcType=DECIMAL},
      other_converted_income = #{otherConvertedIncome,jdbcType=DECIMAL},
      other_credit_impairment_provision = #{otherCreditImpairmentProvision,jdbcType=DECIMAL},
      reclassified_financial_assets = #{reclassifiedFinancialAssets,jdbcType=DECIMAL},
      foreign_currency_translation_difference = #{foreignCurrencyTranslationDifference,jdbcType=DECIMAL},
      cash_flow_hedging_reserve = #{cashFlowHedgingReserve,jdbcType=DECIMAL},
      total_combined_proceeds = #{totalCombinedProceeds,jdbcType=DECIMAL},
      stock_income = #{stockIncome,jdbcType=DECIMAL},
      basic_stock_income = #{basicStockIncome,jdbcType=DECIMAL},
      dilute_stock_income = #{diluteStockIncome,jdbcType=DECIMAL},
      other_obligatory_right_investments = #{otherObligatoryRightInvestments,jdbcType=DECIMAL},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_person = #{modifyPerson,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      data_resource = #{dataResource,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.huizhi.supplier.db.model.TCpyProfitLossExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from t_cpy_profit_loss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_profit_loss
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>