<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huizhi.supplier.db.dao.TCpyEmployeesStatisticsMapper">
  <resultMap id="BaseResultMap" type="com.huizhi.supplier.db.model.TCpyEmployeesStatistics">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="employees_total" jdbcType="INTEGER" property="employeesTotal" />
    <result column="doctor_above_number" jdbcType="INTEGER" property="doctorAboveNumber" />
    <result column="master_number" jdbcType="INTEGER" property="masterNumber" />
    <result column="undergraduate_course_number" jdbcType="INTEGER" property="undergraduateCourseNumber" />
    <result column="college_number" jdbcType="INTEGER" property="collegeNumber" />
    <result column="high_school_below_number" jdbcType="INTEGER" property="highSchoolBelowNumber" />
    <result column="marketer_number" jdbcType="INTEGER" property="marketerNumber" />
    <result column="quality_managers_count" jdbcType="INTEGER" property="qualityManagersCount" />
    <result column="technical_staff_number" jdbcType="INTEGER" property="technicalStaffNumber" />
    <result column="functional_staff_number" jdbcType="INTEGER" property="functionalStaffNumber" />
    <result column="primary_title_numiber" jdbcType="INTEGER" property="primaryTitleNumiber" />
    <result column="intermediate_title_number" jdbcType="INTEGER" property="intermediateTitleNumber" />
    <result column="senior_title_above_number" jdbcType="INTEGER" property="seniorTitleAboveNumber" />
    <result column="related_certificates_ratio" jdbcType="DOUBLE" property="relatedCertificatesRatio" />
    <result column="five_year_up" jdbcType="INTEGER" property="fiveYearUp" />
    <result column="three_to_five" jdbcType="INTEGER" property="threeToFive" />
    <result column="one_to_three" jdbcType="INTEGER" property="oneToThree" />
    <result column="one_low" jdbcType="INTEGER" property="oneLow" />
    <result column="insured" jdbcType="INTEGER" property="insured" />
    <result column="is_haveCIO" jdbcType="CHAR" property="isHavecio" />
    <result column="security_managers_count" jdbcType="INTEGER" property="securityManagersCount" />
    <result column="staff_size" jdbcType="INTEGER" property="staffSize" />
    <result column="is_have_insurance" jdbcType="CHAR" property="isHaveInsurance" />
    <result column="pay_social_security" jdbcType="INTEGER" property="paySocialSecurity" />
    <result column="create_person" jdbcType="VARCHAR" property="createPerson" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_person" jdbcType="VARCHAR" property="modifyPerson" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="data_resource" jdbcType="VARCHAR" property="dataResource" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, company_id, employees_total, doctor_above_number, master_number, undergraduate_course_number, 
    college_number, high_school_below_number, marketer_number, quality_managers_count, 
    technical_staff_number, functional_staff_number, primary_title_numiber, intermediate_title_number, 
    senior_title_above_number, related_certificates_ratio, five_year_up, three_to_five, 
    one_to_three, one_low, insured, is_haveCIO, security_managers_count, staff_size, 
    is_have_insurance, pay_social_security, create_person, create_time, modify_person, 
    modify_time, data_resource
  </sql>
  <select id="selectByExample" parameterType="com.huizhi.supplier.db.model.TCpyEmployeesStatisticsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_cpy_employees_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_employees_statistics
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_cpy_employees_statistics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_employees_statistics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_cpy_employees_statistics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huizhi.supplier.db.model.TCpyEmployeesStatisticsExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_cpy_employees_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huizhi.supplier.db.model.TCpyEmployeesStatistics">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_cpy_employees_statistics (company_id, employees_total, doctor_above_number, 
      master_number, undergraduate_course_number, 
      college_number, high_school_below_number, marketer_number, 
      quality_managers_count, technical_staff_number, 
      functional_staff_number, primary_title_numiber, 
      intermediate_title_number, senior_title_above_number, 
      related_certificates_ratio, five_year_up, three_to_five, 
      one_to_three, one_low, insured, 
      is_haveCIO, security_managers_count, staff_size, 
      is_have_insurance, pay_social_security, create_person, 
      create_time, modify_person, modify_time, 
      data_resource)
    values (#{companyId,jdbcType=INTEGER}, #{employeesTotal,jdbcType=INTEGER}, #{doctorAboveNumber,jdbcType=INTEGER}, 
      #{masterNumber,jdbcType=INTEGER}, #{undergraduateCourseNumber,jdbcType=INTEGER}, 
      #{collegeNumber,jdbcType=INTEGER}, #{highSchoolBelowNumber,jdbcType=INTEGER}, #{marketerNumber,jdbcType=INTEGER}, 
      #{qualityManagersCount,jdbcType=INTEGER}, #{technicalStaffNumber,jdbcType=INTEGER}, 
      #{functionalStaffNumber,jdbcType=INTEGER}, #{primaryTitleNumiber,jdbcType=INTEGER}, 
      #{intermediateTitleNumber,jdbcType=INTEGER}, #{seniorTitleAboveNumber,jdbcType=INTEGER}, 
      #{relatedCertificatesRatio,jdbcType=DOUBLE}, #{fiveYearUp,jdbcType=INTEGER}, #{threeToFive,jdbcType=INTEGER}, 
      #{oneToThree,jdbcType=INTEGER}, #{oneLow,jdbcType=INTEGER}, #{insured,jdbcType=INTEGER}, 
      #{isHavecio,jdbcType=CHAR}, #{securityManagersCount,jdbcType=INTEGER}, #{staffSize,jdbcType=INTEGER}, 
      #{isHaveInsurance,jdbcType=CHAR}, #{paySocialSecurity,jdbcType=INTEGER}, #{createPerson,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyPerson,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{dataResource,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huizhi.supplier.db.model.TCpyEmployeesStatistics">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_cpy_employees_statistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="employeesTotal != null">
        employees_total,
      </if>
      <if test="doctorAboveNumber != null">
        doctor_above_number,
      </if>
      <if test="masterNumber != null">
        master_number,
      </if>
      <if test="undergraduateCourseNumber != null">
        undergraduate_course_number,
      </if>
      <if test="collegeNumber != null">
        college_number,
      </if>
      <if test="highSchoolBelowNumber != null">
        high_school_below_number,
      </if>
      <if test="marketerNumber != null">
        marketer_number,
      </if>
      <if test="qualityManagersCount != null">
        quality_managers_count,
      </if>
      <if test="technicalStaffNumber != null">
        technical_staff_number,
      </if>
      <if test="functionalStaffNumber != null">
        functional_staff_number,
      </if>
      <if test="primaryTitleNumiber != null">
        primary_title_numiber,
      </if>
      <if test="intermediateTitleNumber != null">
        intermediate_title_number,
      </if>
      <if test="seniorTitleAboveNumber != null">
        senior_title_above_number,
      </if>
      <if test="relatedCertificatesRatio != null">
        related_certificates_ratio,
      </if>
      <if test="fiveYearUp != null">
        five_year_up,
      </if>
      <if test="threeToFive != null">
        three_to_five,
      </if>
      <if test="oneToThree != null">
        one_to_three,
      </if>
      <if test="oneLow != null">
        one_low,
      </if>
      <if test="insured != null">
        insured,
      </if>
      <if test="isHavecio != null">
        is_haveCIO,
      </if>
      <if test="securityManagersCount != null">
        security_managers_count,
      </if>
      <if test="staffSize != null">
        staff_size,
      </if>
      <if test="isHaveInsurance != null">
        is_have_insurance,
      </if>
      <if test="paySocialSecurity != null">
        pay_social_security,
      </if>
      <if test="createPerson != null">
        create_person,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyPerson != null">
        modify_person,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="dataResource != null">
        data_resource,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="employeesTotal != null">
        #{employeesTotal,jdbcType=INTEGER},
      </if>
      <if test="doctorAboveNumber != null">
        #{doctorAboveNumber,jdbcType=INTEGER},
      </if>
      <if test="masterNumber != null">
        #{masterNumber,jdbcType=INTEGER},
      </if>
      <if test="undergraduateCourseNumber != null">
        #{undergraduateCourseNumber,jdbcType=INTEGER},
      </if>
      <if test="collegeNumber != null">
        #{collegeNumber,jdbcType=INTEGER},
      </if>
      <if test="highSchoolBelowNumber != null">
        #{highSchoolBelowNumber,jdbcType=INTEGER},
      </if>
      <if test="marketerNumber != null">
        #{marketerNumber,jdbcType=INTEGER},
      </if>
      <if test="qualityManagersCount != null">
        #{qualityManagersCount,jdbcType=INTEGER},
      </if>
      <if test="technicalStaffNumber != null">
        #{technicalStaffNumber,jdbcType=INTEGER},
      </if>
      <if test="functionalStaffNumber != null">
        #{functionalStaffNumber,jdbcType=INTEGER},
      </if>
      <if test="primaryTitleNumiber != null">
        #{primaryTitleNumiber,jdbcType=INTEGER},
      </if>
      <if test="intermediateTitleNumber != null">
        #{intermediateTitleNumber,jdbcType=INTEGER},
      </if>
      <if test="seniorTitleAboveNumber != null">
        #{seniorTitleAboveNumber,jdbcType=INTEGER},
      </if>
      <if test="relatedCertificatesRatio != null">
        #{relatedCertificatesRatio,jdbcType=DOUBLE},
      </if>
      <if test="fiveYearUp != null">
        #{fiveYearUp,jdbcType=INTEGER},
      </if>
      <if test="threeToFive != null">
        #{threeToFive,jdbcType=INTEGER},
      </if>
      <if test="oneToThree != null">
        #{oneToThree,jdbcType=INTEGER},
      </if>
      <if test="oneLow != null">
        #{oneLow,jdbcType=INTEGER},
      </if>
      <if test="insured != null">
        #{insured,jdbcType=INTEGER},
      </if>
      <if test="isHavecio != null">
        #{isHavecio,jdbcType=CHAR},
      </if>
      <if test="securityManagersCount != null">
        #{securityManagersCount,jdbcType=INTEGER},
      </if>
      <if test="staffSize != null">
        #{staffSize,jdbcType=INTEGER},
      </if>
      <if test="isHaveInsurance != null">
        #{isHaveInsurance,jdbcType=CHAR},
      </if>
      <if test="paySocialSecurity != null">
        #{paySocialSecurity,jdbcType=INTEGER},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        #{dataResource,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huizhi.supplier.db.model.TCpyEmployeesStatisticsExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_cpy_employees_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_employees_statistics
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.employeesTotal != null">
        employees_total = #{record.employeesTotal,jdbcType=INTEGER},
      </if>
      <if test="record.doctorAboveNumber != null">
        doctor_above_number = #{record.doctorAboveNumber,jdbcType=INTEGER},
      </if>
      <if test="record.masterNumber != null">
        master_number = #{record.masterNumber,jdbcType=INTEGER},
      </if>
      <if test="record.undergraduateCourseNumber != null">
        undergraduate_course_number = #{record.undergraduateCourseNumber,jdbcType=INTEGER},
      </if>
      <if test="record.collegeNumber != null">
        college_number = #{record.collegeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.highSchoolBelowNumber != null">
        high_school_below_number = #{record.highSchoolBelowNumber,jdbcType=INTEGER},
      </if>
      <if test="record.marketerNumber != null">
        marketer_number = #{record.marketerNumber,jdbcType=INTEGER},
      </if>
      <if test="record.qualityManagersCount != null">
        quality_managers_count = #{record.qualityManagersCount,jdbcType=INTEGER},
      </if>
      <if test="record.technicalStaffNumber != null">
        technical_staff_number = #{record.technicalStaffNumber,jdbcType=INTEGER},
      </if>
      <if test="record.functionalStaffNumber != null">
        functional_staff_number = #{record.functionalStaffNumber,jdbcType=INTEGER},
      </if>
      <if test="record.primaryTitleNumiber != null">
        primary_title_numiber = #{record.primaryTitleNumiber,jdbcType=INTEGER},
      </if>
      <if test="record.intermediateTitleNumber != null">
        intermediate_title_number = #{record.intermediateTitleNumber,jdbcType=INTEGER},
      </if>
      <if test="record.seniorTitleAboveNumber != null">
        senior_title_above_number = #{record.seniorTitleAboveNumber,jdbcType=INTEGER},
      </if>
      <if test="record.relatedCertificatesRatio != null">
        related_certificates_ratio = #{record.relatedCertificatesRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.fiveYearUp != null">
        five_year_up = #{record.fiveYearUp,jdbcType=INTEGER},
      </if>
      <if test="record.threeToFive != null">
        three_to_five = #{record.threeToFive,jdbcType=INTEGER},
      </if>
      <if test="record.oneToThree != null">
        one_to_three = #{record.oneToThree,jdbcType=INTEGER},
      </if>
      <if test="record.oneLow != null">
        one_low = #{record.oneLow,jdbcType=INTEGER},
      </if>
      <if test="record.insured != null">
        insured = #{record.insured,jdbcType=INTEGER},
      </if>
      <if test="record.isHavecio != null">
        is_haveCIO = #{record.isHavecio,jdbcType=CHAR},
      </if>
      <if test="record.securityManagersCount != null">
        security_managers_count = #{record.securityManagersCount,jdbcType=INTEGER},
      </if>
      <if test="record.staffSize != null">
        staff_size = #{record.staffSize,jdbcType=INTEGER},
      </if>
      <if test="record.isHaveInsurance != null">
        is_have_insurance = #{record.isHaveInsurance,jdbcType=CHAR},
      </if>
      <if test="record.paySocialSecurity != null">
        pay_social_security = #{record.paySocialSecurity,jdbcType=INTEGER},
      </if>
      <if test="record.createPerson != null">
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyPerson != null">
        modify_person = #{record.modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataResource != null">
        data_resource = #{record.dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_employees_statistics
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      employees_total = #{record.employeesTotal,jdbcType=INTEGER},
      doctor_above_number = #{record.doctorAboveNumber,jdbcType=INTEGER},
      master_number = #{record.masterNumber,jdbcType=INTEGER},
      undergraduate_course_number = #{record.undergraduateCourseNumber,jdbcType=INTEGER},
      college_number = #{record.collegeNumber,jdbcType=INTEGER},
      high_school_below_number = #{record.highSchoolBelowNumber,jdbcType=INTEGER},
      marketer_number = #{record.marketerNumber,jdbcType=INTEGER},
      quality_managers_count = #{record.qualityManagersCount,jdbcType=INTEGER},
      technical_staff_number = #{record.technicalStaffNumber,jdbcType=INTEGER},
      functional_staff_number = #{record.functionalStaffNumber,jdbcType=INTEGER},
      primary_title_numiber = #{record.primaryTitleNumiber,jdbcType=INTEGER},
      intermediate_title_number = #{record.intermediateTitleNumber,jdbcType=INTEGER},
      senior_title_above_number = #{record.seniorTitleAboveNumber,jdbcType=INTEGER},
      related_certificates_ratio = #{record.relatedCertificatesRatio,jdbcType=DOUBLE},
      five_year_up = #{record.fiveYearUp,jdbcType=INTEGER},
      three_to_five = #{record.threeToFive,jdbcType=INTEGER},
      one_to_three = #{record.oneToThree,jdbcType=INTEGER},
      one_low = #{record.oneLow,jdbcType=INTEGER},
      insured = #{record.insured,jdbcType=INTEGER},
      is_haveCIO = #{record.isHavecio,jdbcType=CHAR},
      security_managers_count = #{record.securityManagersCount,jdbcType=INTEGER},
      staff_size = #{record.staffSize,jdbcType=INTEGER},
      is_have_insurance = #{record.isHaveInsurance,jdbcType=CHAR},
      pay_social_security = #{record.paySocialSecurity,jdbcType=INTEGER},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_person = #{record.modifyPerson,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      data_resource = #{record.dataResource,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huizhi.supplier.db.model.TCpyEmployeesStatistics">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_employees_statistics
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="employeesTotal != null">
        employees_total = #{employeesTotal,jdbcType=INTEGER},
      </if>
      <if test="doctorAboveNumber != null">
        doctor_above_number = #{doctorAboveNumber,jdbcType=INTEGER},
      </if>
      <if test="masterNumber != null">
        master_number = #{masterNumber,jdbcType=INTEGER},
      </if>
      <if test="undergraduateCourseNumber != null">
        undergraduate_course_number = #{undergraduateCourseNumber,jdbcType=INTEGER},
      </if>
      <if test="collegeNumber != null">
        college_number = #{collegeNumber,jdbcType=INTEGER},
      </if>
      <if test="highSchoolBelowNumber != null">
        high_school_below_number = #{highSchoolBelowNumber,jdbcType=INTEGER},
      </if>
      <if test="marketerNumber != null">
        marketer_number = #{marketerNumber,jdbcType=INTEGER},
      </if>
      <if test="qualityManagersCount != null">
        quality_managers_count = #{qualityManagersCount,jdbcType=INTEGER},
      </if>
      <if test="technicalStaffNumber != null">
        technical_staff_number = #{technicalStaffNumber,jdbcType=INTEGER},
      </if>
      <if test="functionalStaffNumber != null">
        functional_staff_number = #{functionalStaffNumber,jdbcType=INTEGER},
      </if>
      <if test="primaryTitleNumiber != null">
        primary_title_numiber = #{primaryTitleNumiber,jdbcType=INTEGER},
      </if>
      <if test="intermediateTitleNumber != null">
        intermediate_title_number = #{intermediateTitleNumber,jdbcType=INTEGER},
      </if>
      <if test="seniorTitleAboveNumber != null">
        senior_title_above_number = #{seniorTitleAboveNumber,jdbcType=INTEGER},
      </if>
      <if test="relatedCertificatesRatio != null">
        related_certificates_ratio = #{relatedCertificatesRatio,jdbcType=DOUBLE},
      </if>
      <if test="fiveYearUp != null">
        five_year_up = #{fiveYearUp,jdbcType=INTEGER},
      </if>
      <if test="threeToFive != null">
        three_to_five = #{threeToFive,jdbcType=INTEGER},
      </if>
      <if test="oneToThree != null">
        one_to_three = #{oneToThree,jdbcType=INTEGER},
      </if>
      <if test="oneLow != null">
        one_low = #{oneLow,jdbcType=INTEGER},
      </if>
      <if test="insured != null">
        insured = #{insured,jdbcType=INTEGER},
      </if>
      <if test="isHavecio != null">
        is_haveCIO = #{isHavecio,jdbcType=CHAR},
      </if>
      <if test="securityManagersCount != null">
        security_managers_count = #{securityManagersCount,jdbcType=INTEGER},
      </if>
      <if test="staffSize != null">
        staff_size = #{staffSize,jdbcType=INTEGER},
      </if>
      <if test="isHaveInsurance != null">
        is_have_insurance = #{isHaveInsurance,jdbcType=CHAR},
      </if>
      <if test="paySocialSecurity != null">
        pay_social_security = #{paySocialSecurity,jdbcType=INTEGER},
      </if>
      <if test="createPerson != null">
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        modify_person = #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        data_resource = #{dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huizhi.supplier.db.model.TCpyEmployeesStatistics">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_employees_statistics
    set company_id = #{companyId,jdbcType=INTEGER},
      employees_total = #{employeesTotal,jdbcType=INTEGER},
      doctor_above_number = #{doctorAboveNumber,jdbcType=INTEGER},
      master_number = #{masterNumber,jdbcType=INTEGER},
      undergraduate_course_number = #{undergraduateCourseNumber,jdbcType=INTEGER},
      college_number = #{collegeNumber,jdbcType=INTEGER},
      high_school_below_number = #{highSchoolBelowNumber,jdbcType=INTEGER},
      marketer_number = #{marketerNumber,jdbcType=INTEGER},
      quality_managers_count = #{qualityManagersCount,jdbcType=INTEGER},
      technical_staff_number = #{technicalStaffNumber,jdbcType=INTEGER},
      functional_staff_number = #{functionalStaffNumber,jdbcType=INTEGER},
      primary_title_numiber = #{primaryTitleNumiber,jdbcType=INTEGER},
      intermediate_title_number = #{intermediateTitleNumber,jdbcType=INTEGER},
      senior_title_above_number = #{seniorTitleAboveNumber,jdbcType=INTEGER},
      related_certificates_ratio = #{relatedCertificatesRatio,jdbcType=DOUBLE},
      five_year_up = #{fiveYearUp,jdbcType=INTEGER},
      three_to_five = #{threeToFive,jdbcType=INTEGER},
      one_to_three = #{oneToThree,jdbcType=INTEGER},
      one_low = #{oneLow,jdbcType=INTEGER},
      insured = #{insured,jdbcType=INTEGER},
      is_haveCIO = #{isHavecio,jdbcType=CHAR},
      security_managers_count = #{securityManagersCount,jdbcType=INTEGER},
      staff_size = #{staffSize,jdbcType=INTEGER},
      is_have_insurance = #{isHaveInsurance,jdbcType=CHAR},
      pay_social_security = #{paySocialSecurity,jdbcType=INTEGER},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_person = #{modifyPerson,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      data_resource = #{dataResource,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.huizhi.supplier.db.model.TCpyEmployeesStatisticsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from t_cpy_employees_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_employees_statistics
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>