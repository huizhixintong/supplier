<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huizhi.supplier.db.dao.TCpyCashFlowMapper">
  <resultMap id="BaseResultMap" type="com.huizhi.supplier.db.model.TCpyCashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="business_activities_cash" jdbcType="DECIMAL" property="businessActivitiesCash" />
    <result column="cash_received_sales" jdbcType="DECIMAL" property="cashReceivedSales" />
    <result column="tax_refunds_received" jdbcType="DECIMAL" property="taxRefundsReceived" />
    <result column="other_related_cash" jdbcType="DECIMAL" property="otherRelatedCash" />
    <result column="cash_inflows" jdbcType="DECIMAL" property="cashInflows" />
    <result column="cash_paid_goods" jdbcType="DECIMAL" property="cashPaidGoods" />
    <result column="cash_paid_employees" jdbcType="DECIMAL" property="cashPaidEmployees" />
    <result column="pay_various_taxes" jdbcType="DECIMAL" property="payVariousTaxes" />
    <result column="pay_operating_cash" jdbcType="DECIMAL" property="payOperatingCash" />
    <result column="cash_outflows_subtotal" jdbcType="DECIMAL" property="cashOutflowsSubtotal" />
    <result column="operating_cash" jdbcType="DECIMAL" property="operatingCash" />
    <result column="investment_activities_produce_cash" jdbcType="DECIMAL" property="investmentActivitiesProduceCash" />
    <result column="collect_cash_received" jdbcType="DECIMAL" property="collectCashReceived" />
    <result column="cash_from_investment_income" jdbcType="DECIMAL" property="cashFromInvestmentIncome" />
    <result column="net_recovered_cash" jdbcType="DECIMAL" property="netRecoveredCash" />
    <result column="other_units_net_cash_received" jdbcType="DECIMAL" property="otherUnitsNetCashReceived" />
    <result column="cash_investment_activities" jdbcType="DECIMAL" property="cashInvestmentActivities" />
    <result column="subtotal_investment_activities" jdbcType="DECIMAL" property="subtotalInvestmentActivities" />
    <result column="cash_paid_fixed_assets" jdbcType="DECIMAL" property="cashPaidFixedAssets" />
    <result column="cash_paid_investment" jdbcType="DECIMAL" property="cashPaidInvestment" />
    <result column="net_cash_paid_unit" jdbcType="DECIMAL" property="netCashPaidUnit" />
    <result column="cash_related_investment_activities" jdbcType="DECIMAL" property="cashRelatedInvestmentActivities" />
    <result column="investment_activities_subtotal" jdbcType="DECIMAL" property="investmentActivitiesSubtotal" />
    <result column="Investment_activities_cash" jdbcType="DECIMAL" property="investmentActivitiesCash" />
    <result column="financing_activities_cash" jdbcType="DECIMAL" property="financingActivitiesCash" />
    <result column="receive_cash_investments" jdbcType="DECIMAL" property="receiveCashInvestments" />
    <result column="cash_received_from_loan" jdbcType="DECIMAL" property="cashReceivedFromLoan" />
    <result column="cash_financing_activities" jdbcType="DECIMAL" property="cashFinancingActivities" />
    <result column="financing_activities_subtotal" jdbcType="DECIMAL" property="financingActivitiesSubtotal" />
    <result column="payment_for_debt" jdbcType="DECIMAL" property="paymentForDebt" />
    <result column="for_interest_payments" jdbcType="DECIMAL" property="forInterestPayments" />
    <result column="pay_other_related_cash" jdbcType="DECIMAL" property="payOtherRelatedCash" />
    <result column="outflow_financing_activities" jdbcType="DECIMAL" property="outflowFinancingActivities" />
    <result column="mobilization_activities_cash" jdbcType="DECIMAL" property="mobilizationActivitiesCash" />
    <result column="effect_cash_equivalents" jdbcType="DECIMAL" property="effectCashEquivalents" />
    <result column="net_increase_in_cash_equivalents" jdbcType="DECIMAL" property="netIncreaseInCashEquivalents" />
    <result column="cash_equivalent_balance" jdbcType="DECIMAL" property="cashEquivalentBalance" />
    <result column="closing_cash_balance" jdbcType="DECIMAL" property="closingCashBalance" />
    <result column="create_person" jdbcType="VARCHAR" property="createPerson" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_person" jdbcType="VARCHAR" property="modifyPerson" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="data_resource" jdbcType="VARCHAR" property="dataResource" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, company_id, `year`, business_activities_cash, cash_received_sales, tax_refunds_received, 
    other_related_cash, cash_inflows, cash_paid_goods, cash_paid_employees, pay_various_taxes, 
    pay_operating_cash, cash_outflows_subtotal, operating_cash, investment_activities_produce_cash, 
    collect_cash_received, cash_from_investment_income, net_recovered_cash, other_units_net_cash_received, 
    cash_investment_activities, subtotal_investment_activities, cash_paid_fixed_assets, 
    cash_paid_investment, net_cash_paid_unit, cash_related_investment_activities, investment_activities_subtotal, 
    Investment_activities_cash, financing_activities_cash, receive_cash_investments, 
    cash_received_from_loan, cash_financing_activities, financing_activities_subtotal, 
    payment_for_debt, for_interest_payments, pay_other_related_cash, outflow_financing_activities, 
    mobilization_activities_cash, effect_cash_equivalents, net_increase_in_cash_equivalents, 
    cash_equivalent_balance, closing_cash_balance, create_person, create_time, modify_person, 
    modify_time, data_resource
  </sql>
  <select id="selectByExample" parameterType="com.huizhi.supplier.db.model.TCpyCashFlowExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_cpy_cash_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_cash_flow
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_cpy_cash_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_cash_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_cpy_cash_flow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huizhi.supplier.db.model.TCpyCashFlowExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_cpy_cash_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huizhi.supplier.db.model.TCpyCashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_cpy_cash_flow (company_id, `year`, business_activities_cash, 
      cash_received_sales, tax_refunds_received, 
      other_related_cash, cash_inflows, cash_paid_goods, 
      cash_paid_employees, pay_various_taxes, pay_operating_cash, 
      cash_outflows_subtotal, operating_cash, investment_activities_produce_cash, 
      collect_cash_received, cash_from_investment_income, 
      net_recovered_cash, other_units_net_cash_received, 
      cash_investment_activities, subtotal_investment_activities, 
      cash_paid_fixed_assets, cash_paid_investment, 
      net_cash_paid_unit, cash_related_investment_activities, 
      investment_activities_subtotal, Investment_activities_cash, 
      financing_activities_cash, receive_cash_investments, 
      cash_received_from_loan, cash_financing_activities, 
      financing_activities_subtotal, payment_for_debt, 
      for_interest_payments, pay_other_related_cash, 
      outflow_financing_activities, mobilization_activities_cash, 
      effect_cash_equivalents, net_increase_in_cash_equivalents, 
      cash_equivalent_balance, closing_cash_balance, 
      create_person, create_time, modify_person, 
      modify_time, data_resource)
    values (#{companyId,jdbcType=VARCHAR}, #{year,jdbcType=CHAR}, #{businessActivitiesCash,jdbcType=DECIMAL}, 
      #{cashReceivedSales,jdbcType=DECIMAL}, #{taxRefundsReceived,jdbcType=DECIMAL}, 
      #{otherRelatedCash,jdbcType=DECIMAL}, #{cashInflows,jdbcType=DECIMAL}, #{cashPaidGoods,jdbcType=DECIMAL}, 
      #{cashPaidEmployees,jdbcType=DECIMAL}, #{payVariousTaxes,jdbcType=DECIMAL}, #{payOperatingCash,jdbcType=DECIMAL}, 
      #{cashOutflowsSubtotal,jdbcType=DECIMAL}, #{operatingCash,jdbcType=DECIMAL}, #{investmentActivitiesProduceCash,jdbcType=DECIMAL}, 
      #{collectCashReceived,jdbcType=DECIMAL}, #{cashFromInvestmentIncome,jdbcType=DECIMAL}, 
      #{netRecoveredCash,jdbcType=DECIMAL}, #{otherUnitsNetCashReceived,jdbcType=DECIMAL}, 
      #{cashInvestmentActivities,jdbcType=DECIMAL}, #{subtotalInvestmentActivities,jdbcType=DECIMAL}, 
      #{cashPaidFixedAssets,jdbcType=DECIMAL}, #{cashPaidInvestment,jdbcType=DECIMAL}, 
      #{netCashPaidUnit,jdbcType=DECIMAL}, #{cashRelatedInvestmentActivities,jdbcType=DECIMAL}, 
      #{investmentActivitiesSubtotal,jdbcType=DECIMAL}, #{investmentActivitiesCash,jdbcType=DECIMAL}, 
      #{financingActivitiesCash,jdbcType=DECIMAL}, #{receiveCashInvestments,jdbcType=DECIMAL}, 
      #{cashReceivedFromLoan,jdbcType=DECIMAL}, #{cashFinancingActivities,jdbcType=DECIMAL}, 
      #{financingActivitiesSubtotal,jdbcType=DECIMAL}, #{paymentForDebt,jdbcType=DECIMAL}, 
      #{forInterestPayments,jdbcType=DECIMAL}, #{payOtherRelatedCash,jdbcType=DECIMAL}, 
      #{outflowFinancingActivities,jdbcType=DECIMAL}, #{mobilizationActivitiesCash,jdbcType=DECIMAL}, 
      #{effectCashEquivalents,jdbcType=DECIMAL}, #{netIncreaseInCashEquivalents,jdbcType=DECIMAL}, 
      #{cashEquivalentBalance,jdbcType=DECIMAL}, #{closingCashBalance,jdbcType=DECIMAL}, 
      #{createPerson,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyPerson,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{dataResource,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huizhi.supplier.db.model.TCpyCashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_cpy_cash_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="year != null">
        `year`,
      </if>
      <if test="businessActivitiesCash != null">
        business_activities_cash,
      </if>
      <if test="cashReceivedSales != null">
        cash_received_sales,
      </if>
      <if test="taxRefundsReceived != null">
        tax_refunds_received,
      </if>
      <if test="otherRelatedCash != null">
        other_related_cash,
      </if>
      <if test="cashInflows != null">
        cash_inflows,
      </if>
      <if test="cashPaidGoods != null">
        cash_paid_goods,
      </if>
      <if test="cashPaidEmployees != null">
        cash_paid_employees,
      </if>
      <if test="payVariousTaxes != null">
        pay_various_taxes,
      </if>
      <if test="payOperatingCash != null">
        pay_operating_cash,
      </if>
      <if test="cashOutflowsSubtotal != null">
        cash_outflows_subtotal,
      </if>
      <if test="operatingCash != null">
        operating_cash,
      </if>
      <if test="investmentActivitiesProduceCash != null">
        investment_activities_produce_cash,
      </if>
      <if test="collectCashReceived != null">
        collect_cash_received,
      </if>
      <if test="cashFromInvestmentIncome != null">
        cash_from_investment_income,
      </if>
      <if test="netRecoveredCash != null">
        net_recovered_cash,
      </if>
      <if test="otherUnitsNetCashReceived != null">
        other_units_net_cash_received,
      </if>
      <if test="cashInvestmentActivities != null">
        cash_investment_activities,
      </if>
      <if test="subtotalInvestmentActivities != null">
        subtotal_investment_activities,
      </if>
      <if test="cashPaidFixedAssets != null">
        cash_paid_fixed_assets,
      </if>
      <if test="cashPaidInvestment != null">
        cash_paid_investment,
      </if>
      <if test="netCashPaidUnit != null">
        net_cash_paid_unit,
      </if>
      <if test="cashRelatedInvestmentActivities != null">
        cash_related_investment_activities,
      </if>
      <if test="investmentActivitiesSubtotal != null">
        investment_activities_subtotal,
      </if>
      <if test="investmentActivitiesCash != null">
        Investment_activities_cash,
      </if>
      <if test="financingActivitiesCash != null">
        financing_activities_cash,
      </if>
      <if test="receiveCashInvestments != null">
        receive_cash_investments,
      </if>
      <if test="cashReceivedFromLoan != null">
        cash_received_from_loan,
      </if>
      <if test="cashFinancingActivities != null">
        cash_financing_activities,
      </if>
      <if test="financingActivitiesSubtotal != null">
        financing_activities_subtotal,
      </if>
      <if test="paymentForDebt != null">
        payment_for_debt,
      </if>
      <if test="forInterestPayments != null">
        for_interest_payments,
      </if>
      <if test="payOtherRelatedCash != null">
        pay_other_related_cash,
      </if>
      <if test="outflowFinancingActivities != null">
        outflow_financing_activities,
      </if>
      <if test="mobilizationActivitiesCash != null">
        mobilization_activities_cash,
      </if>
      <if test="effectCashEquivalents != null">
        effect_cash_equivalents,
      </if>
      <if test="netIncreaseInCashEquivalents != null">
        net_increase_in_cash_equivalents,
      </if>
      <if test="cashEquivalentBalance != null">
        cash_equivalent_balance,
      </if>
      <if test="closingCashBalance != null">
        closing_cash_balance,
      </if>
      <if test="createPerson != null">
        create_person,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyPerson != null">
        modify_person,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="dataResource != null">
        data_resource,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="businessActivitiesCash != null">
        #{businessActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="cashReceivedSales != null">
        #{cashReceivedSales,jdbcType=DECIMAL},
      </if>
      <if test="taxRefundsReceived != null">
        #{taxRefundsReceived,jdbcType=DECIMAL},
      </if>
      <if test="otherRelatedCash != null">
        #{otherRelatedCash,jdbcType=DECIMAL},
      </if>
      <if test="cashInflows != null">
        #{cashInflows,jdbcType=DECIMAL},
      </if>
      <if test="cashPaidGoods != null">
        #{cashPaidGoods,jdbcType=DECIMAL},
      </if>
      <if test="cashPaidEmployees != null">
        #{cashPaidEmployees,jdbcType=DECIMAL},
      </if>
      <if test="payVariousTaxes != null">
        #{payVariousTaxes,jdbcType=DECIMAL},
      </if>
      <if test="payOperatingCash != null">
        #{payOperatingCash,jdbcType=DECIMAL},
      </if>
      <if test="cashOutflowsSubtotal != null">
        #{cashOutflowsSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="operatingCash != null">
        #{operatingCash,jdbcType=DECIMAL},
      </if>
      <if test="investmentActivitiesProduceCash != null">
        #{investmentActivitiesProduceCash,jdbcType=DECIMAL},
      </if>
      <if test="collectCashReceived != null">
        #{collectCashReceived,jdbcType=DECIMAL},
      </if>
      <if test="cashFromInvestmentIncome != null">
        #{cashFromInvestmentIncome,jdbcType=DECIMAL},
      </if>
      <if test="netRecoveredCash != null">
        #{netRecoveredCash,jdbcType=DECIMAL},
      </if>
      <if test="otherUnitsNetCashReceived != null">
        #{otherUnitsNetCashReceived,jdbcType=DECIMAL},
      </if>
      <if test="cashInvestmentActivities != null">
        #{cashInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="subtotalInvestmentActivities != null">
        #{subtotalInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="cashPaidFixedAssets != null">
        #{cashPaidFixedAssets,jdbcType=DECIMAL},
      </if>
      <if test="cashPaidInvestment != null">
        #{cashPaidInvestment,jdbcType=DECIMAL},
      </if>
      <if test="netCashPaidUnit != null">
        #{netCashPaidUnit,jdbcType=DECIMAL},
      </if>
      <if test="cashRelatedInvestmentActivities != null">
        #{cashRelatedInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="investmentActivitiesSubtotal != null">
        #{investmentActivitiesSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="investmentActivitiesCash != null">
        #{investmentActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="financingActivitiesCash != null">
        #{financingActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="receiveCashInvestments != null">
        #{receiveCashInvestments,jdbcType=DECIMAL},
      </if>
      <if test="cashReceivedFromLoan != null">
        #{cashReceivedFromLoan,jdbcType=DECIMAL},
      </if>
      <if test="cashFinancingActivities != null">
        #{cashFinancingActivities,jdbcType=DECIMAL},
      </if>
      <if test="financingActivitiesSubtotal != null">
        #{financingActivitiesSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="paymentForDebt != null">
        #{paymentForDebt,jdbcType=DECIMAL},
      </if>
      <if test="forInterestPayments != null">
        #{forInterestPayments,jdbcType=DECIMAL},
      </if>
      <if test="payOtherRelatedCash != null">
        #{payOtherRelatedCash,jdbcType=DECIMAL},
      </if>
      <if test="outflowFinancingActivities != null">
        #{outflowFinancingActivities,jdbcType=DECIMAL},
      </if>
      <if test="mobilizationActivitiesCash != null">
        #{mobilizationActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="effectCashEquivalents != null">
        #{effectCashEquivalents,jdbcType=DECIMAL},
      </if>
      <if test="netIncreaseInCashEquivalents != null">
        #{netIncreaseInCashEquivalents,jdbcType=DECIMAL},
      </if>
      <if test="cashEquivalentBalance != null">
        #{cashEquivalentBalance,jdbcType=DECIMAL},
      </if>
      <if test="closingCashBalance != null">
        #{closingCashBalance,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        #{dataResource,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huizhi.supplier.db.model.TCpyCashFlowExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_cpy_cash_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_cash_flow
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        `year` = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.businessActivitiesCash != null">
        business_activities_cash = #{record.businessActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="record.cashReceivedSales != null">
        cash_received_sales = #{record.cashReceivedSales,jdbcType=DECIMAL},
      </if>
      <if test="record.taxRefundsReceived != null">
        tax_refunds_received = #{record.taxRefundsReceived,jdbcType=DECIMAL},
      </if>
      <if test="record.otherRelatedCash != null">
        other_related_cash = #{record.otherRelatedCash,jdbcType=DECIMAL},
      </if>
      <if test="record.cashInflows != null">
        cash_inflows = #{record.cashInflows,jdbcType=DECIMAL},
      </if>
      <if test="record.cashPaidGoods != null">
        cash_paid_goods = #{record.cashPaidGoods,jdbcType=DECIMAL},
      </if>
      <if test="record.cashPaidEmployees != null">
        cash_paid_employees = #{record.cashPaidEmployees,jdbcType=DECIMAL},
      </if>
      <if test="record.payVariousTaxes != null">
        pay_various_taxes = #{record.payVariousTaxes,jdbcType=DECIMAL},
      </if>
      <if test="record.payOperatingCash != null">
        pay_operating_cash = #{record.payOperatingCash,jdbcType=DECIMAL},
      </if>
      <if test="record.cashOutflowsSubtotal != null">
        cash_outflows_subtotal = #{record.cashOutflowsSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.operatingCash != null">
        operating_cash = #{record.operatingCash,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentActivitiesProduceCash != null">
        investment_activities_produce_cash = #{record.investmentActivitiesProduceCash,jdbcType=DECIMAL},
      </if>
      <if test="record.collectCashReceived != null">
        collect_cash_received = #{record.collectCashReceived,jdbcType=DECIMAL},
      </if>
      <if test="record.cashFromInvestmentIncome != null">
        cash_from_investment_income = #{record.cashFromInvestmentIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.netRecoveredCash != null">
        net_recovered_cash = #{record.netRecoveredCash,jdbcType=DECIMAL},
      </if>
      <if test="record.otherUnitsNetCashReceived != null">
        other_units_net_cash_received = #{record.otherUnitsNetCashReceived,jdbcType=DECIMAL},
      </if>
      <if test="record.cashInvestmentActivities != null">
        cash_investment_activities = #{record.cashInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="record.subtotalInvestmentActivities != null">
        subtotal_investment_activities = #{record.subtotalInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="record.cashPaidFixedAssets != null">
        cash_paid_fixed_assets = #{record.cashPaidFixedAssets,jdbcType=DECIMAL},
      </if>
      <if test="record.cashPaidInvestment != null">
        cash_paid_investment = #{record.cashPaidInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.netCashPaidUnit != null">
        net_cash_paid_unit = #{record.netCashPaidUnit,jdbcType=DECIMAL},
      </if>
      <if test="record.cashRelatedInvestmentActivities != null">
        cash_related_investment_activities = #{record.cashRelatedInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentActivitiesSubtotal != null">
        investment_activities_subtotal = #{record.investmentActivitiesSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentActivitiesCash != null">
        Investment_activities_cash = #{record.investmentActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="record.financingActivitiesCash != null">
        financing_activities_cash = #{record.financingActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveCashInvestments != null">
        receive_cash_investments = #{record.receiveCashInvestments,jdbcType=DECIMAL},
      </if>
      <if test="record.cashReceivedFromLoan != null">
        cash_received_from_loan = #{record.cashReceivedFromLoan,jdbcType=DECIMAL},
      </if>
      <if test="record.cashFinancingActivities != null">
        cash_financing_activities = #{record.cashFinancingActivities,jdbcType=DECIMAL},
      </if>
      <if test="record.financingActivitiesSubtotal != null">
        financing_activities_subtotal = #{record.financingActivitiesSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentForDebt != null">
        payment_for_debt = #{record.paymentForDebt,jdbcType=DECIMAL},
      </if>
      <if test="record.forInterestPayments != null">
        for_interest_payments = #{record.forInterestPayments,jdbcType=DECIMAL},
      </if>
      <if test="record.payOtherRelatedCash != null">
        pay_other_related_cash = #{record.payOtherRelatedCash,jdbcType=DECIMAL},
      </if>
      <if test="record.outflowFinancingActivities != null">
        outflow_financing_activities = #{record.outflowFinancingActivities,jdbcType=DECIMAL},
      </if>
      <if test="record.mobilizationActivitiesCash != null">
        mobilization_activities_cash = #{record.mobilizationActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="record.effectCashEquivalents != null">
        effect_cash_equivalents = #{record.effectCashEquivalents,jdbcType=DECIMAL},
      </if>
      <if test="record.netIncreaseInCashEquivalents != null">
        net_increase_in_cash_equivalents = #{record.netIncreaseInCashEquivalents,jdbcType=DECIMAL},
      </if>
      <if test="record.cashEquivalentBalance != null">
        cash_equivalent_balance = #{record.cashEquivalentBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.closingCashBalance != null">
        closing_cash_balance = #{record.closingCashBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.createPerson != null">
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyPerson != null">
        modify_person = #{record.modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataResource != null">
        data_resource = #{record.dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_cash_flow
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      `year` = #{record.year,jdbcType=CHAR},
      business_activities_cash = #{record.businessActivitiesCash,jdbcType=DECIMAL},
      cash_received_sales = #{record.cashReceivedSales,jdbcType=DECIMAL},
      tax_refunds_received = #{record.taxRefundsReceived,jdbcType=DECIMAL},
      other_related_cash = #{record.otherRelatedCash,jdbcType=DECIMAL},
      cash_inflows = #{record.cashInflows,jdbcType=DECIMAL},
      cash_paid_goods = #{record.cashPaidGoods,jdbcType=DECIMAL},
      cash_paid_employees = #{record.cashPaidEmployees,jdbcType=DECIMAL},
      pay_various_taxes = #{record.payVariousTaxes,jdbcType=DECIMAL},
      pay_operating_cash = #{record.payOperatingCash,jdbcType=DECIMAL},
      cash_outflows_subtotal = #{record.cashOutflowsSubtotal,jdbcType=DECIMAL},
      operating_cash = #{record.operatingCash,jdbcType=DECIMAL},
      investment_activities_produce_cash = #{record.investmentActivitiesProduceCash,jdbcType=DECIMAL},
      collect_cash_received = #{record.collectCashReceived,jdbcType=DECIMAL},
      cash_from_investment_income = #{record.cashFromInvestmentIncome,jdbcType=DECIMAL},
      net_recovered_cash = #{record.netRecoveredCash,jdbcType=DECIMAL},
      other_units_net_cash_received = #{record.otherUnitsNetCashReceived,jdbcType=DECIMAL},
      cash_investment_activities = #{record.cashInvestmentActivities,jdbcType=DECIMAL},
      subtotal_investment_activities = #{record.subtotalInvestmentActivities,jdbcType=DECIMAL},
      cash_paid_fixed_assets = #{record.cashPaidFixedAssets,jdbcType=DECIMAL},
      cash_paid_investment = #{record.cashPaidInvestment,jdbcType=DECIMAL},
      net_cash_paid_unit = #{record.netCashPaidUnit,jdbcType=DECIMAL},
      cash_related_investment_activities = #{record.cashRelatedInvestmentActivities,jdbcType=DECIMAL},
      investment_activities_subtotal = #{record.investmentActivitiesSubtotal,jdbcType=DECIMAL},
      Investment_activities_cash = #{record.investmentActivitiesCash,jdbcType=DECIMAL},
      financing_activities_cash = #{record.financingActivitiesCash,jdbcType=DECIMAL},
      receive_cash_investments = #{record.receiveCashInvestments,jdbcType=DECIMAL},
      cash_received_from_loan = #{record.cashReceivedFromLoan,jdbcType=DECIMAL},
      cash_financing_activities = #{record.cashFinancingActivities,jdbcType=DECIMAL},
      financing_activities_subtotal = #{record.financingActivitiesSubtotal,jdbcType=DECIMAL},
      payment_for_debt = #{record.paymentForDebt,jdbcType=DECIMAL},
      for_interest_payments = #{record.forInterestPayments,jdbcType=DECIMAL},
      pay_other_related_cash = #{record.payOtherRelatedCash,jdbcType=DECIMAL},
      outflow_financing_activities = #{record.outflowFinancingActivities,jdbcType=DECIMAL},
      mobilization_activities_cash = #{record.mobilizationActivitiesCash,jdbcType=DECIMAL},
      effect_cash_equivalents = #{record.effectCashEquivalents,jdbcType=DECIMAL},
      net_increase_in_cash_equivalents = #{record.netIncreaseInCashEquivalents,jdbcType=DECIMAL},
      cash_equivalent_balance = #{record.cashEquivalentBalance,jdbcType=DECIMAL},
      closing_cash_balance = #{record.closingCashBalance,jdbcType=DECIMAL},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_person = #{record.modifyPerson,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      data_resource = #{record.dataResource,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huizhi.supplier.db.model.TCpyCashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_cash_flow
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        `year` = #{year,jdbcType=CHAR},
      </if>
      <if test="businessActivitiesCash != null">
        business_activities_cash = #{businessActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="cashReceivedSales != null">
        cash_received_sales = #{cashReceivedSales,jdbcType=DECIMAL},
      </if>
      <if test="taxRefundsReceived != null">
        tax_refunds_received = #{taxRefundsReceived,jdbcType=DECIMAL},
      </if>
      <if test="otherRelatedCash != null">
        other_related_cash = #{otherRelatedCash,jdbcType=DECIMAL},
      </if>
      <if test="cashInflows != null">
        cash_inflows = #{cashInflows,jdbcType=DECIMAL},
      </if>
      <if test="cashPaidGoods != null">
        cash_paid_goods = #{cashPaidGoods,jdbcType=DECIMAL},
      </if>
      <if test="cashPaidEmployees != null">
        cash_paid_employees = #{cashPaidEmployees,jdbcType=DECIMAL},
      </if>
      <if test="payVariousTaxes != null">
        pay_various_taxes = #{payVariousTaxes,jdbcType=DECIMAL},
      </if>
      <if test="payOperatingCash != null">
        pay_operating_cash = #{payOperatingCash,jdbcType=DECIMAL},
      </if>
      <if test="cashOutflowsSubtotal != null">
        cash_outflows_subtotal = #{cashOutflowsSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="operatingCash != null">
        operating_cash = #{operatingCash,jdbcType=DECIMAL},
      </if>
      <if test="investmentActivitiesProduceCash != null">
        investment_activities_produce_cash = #{investmentActivitiesProduceCash,jdbcType=DECIMAL},
      </if>
      <if test="collectCashReceived != null">
        collect_cash_received = #{collectCashReceived,jdbcType=DECIMAL},
      </if>
      <if test="cashFromInvestmentIncome != null">
        cash_from_investment_income = #{cashFromInvestmentIncome,jdbcType=DECIMAL},
      </if>
      <if test="netRecoveredCash != null">
        net_recovered_cash = #{netRecoveredCash,jdbcType=DECIMAL},
      </if>
      <if test="otherUnitsNetCashReceived != null">
        other_units_net_cash_received = #{otherUnitsNetCashReceived,jdbcType=DECIMAL},
      </if>
      <if test="cashInvestmentActivities != null">
        cash_investment_activities = #{cashInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="subtotalInvestmentActivities != null">
        subtotal_investment_activities = #{subtotalInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="cashPaidFixedAssets != null">
        cash_paid_fixed_assets = #{cashPaidFixedAssets,jdbcType=DECIMAL},
      </if>
      <if test="cashPaidInvestment != null">
        cash_paid_investment = #{cashPaidInvestment,jdbcType=DECIMAL},
      </if>
      <if test="netCashPaidUnit != null">
        net_cash_paid_unit = #{netCashPaidUnit,jdbcType=DECIMAL},
      </if>
      <if test="cashRelatedInvestmentActivities != null">
        cash_related_investment_activities = #{cashRelatedInvestmentActivities,jdbcType=DECIMAL},
      </if>
      <if test="investmentActivitiesSubtotal != null">
        investment_activities_subtotal = #{investmentActivitiesSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="investmentActivitiesCash != null">
        Investment_activities_cash = #{investmentActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="financingActivitiesCash != null">
        financing_activities_cash = #{financingActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="receiveCashInvestments != null">
        receive_cash_investments = #{receiveCashInvestments,jdbcType=DECIMAL},
      </if>
      <if test="cashReceivedFromLoan != null">
        cash_received_from_loan = #{cashReceivedFromLoan,jdbcType=DECIMAL},
      </if>
      <if test="cashFinancingActivities != null">
        cash_financing_activities = #{cashFinancingActivities,jdbcType=DECIMAL},
      </if>
      <if test="financingActivitiesSubtotal != null">
        financing_activities_subtotal = #{financingActivitiesSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="paymentForDebt != null">
        payment_for_debt = #{paymentForDebt,jdbcType=DECIMAL},
      </if>
      <if test="forInterestPayments != null">
        for_interest_payments = #{forInterestPayments,jdbcType=DECIMAL},
      </if>
      <if test="payOtherRelatedCash != null">
        pay_other_related_cash = #{payOtherRelatedCash,jdbcType=DECIMAL},
      </if>
      <if test="outflowFinancingActivities != null">
        outflow_financing_activities = #{outflowFinancingActivities,jdbcType=DECIMAL},
      </if>
      <if test="mobilizationActivitiesCash != null">
        mobilization_activities_cash = #{mobilizationActivitiesCash,jdbcType=DECIMAL},
      </if>
      <if test="effectCashEquivalents != null">
        effect_cash_equivalents = #{effectCashEquivalents,jdbcType=DECIMAL},
      </if>
      <if test="netIncreaseInCashEquivalents != null">
        net_increase_in_cash_equivalents = #{netIncreaseInCashEquivalents,jdbcType=DECIMAL},
      </if>
      <if test="cashEquivalentBalance != null">
        cash_equivalent_balance = #{cashEquivalentBalance,jdbcType=DECIMAL},
      </if>
      <if test="closingCashBalance != null">
        closing_cash_balance = #{closingCashBalance,jdbcType=DECIMAL},
      </if>
      <if test="createPerson != null">
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyPerson != null">
        modify_person = #{modifyPerson,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataResource != null">
        data_resource = #{dataResource,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huizhi.supplier.db.model.TCpyCashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_cpy_cash_flow
    set company_id = #{companyId,jdbcType=VARCHAR},
      `year` = #{year,jdbcType=CHAR},
      business_activities_cash = #{businessActivitiesCash,jdbcType=DECIMAL},
      cash_received_sales = #{cashReceivedSales,jdbcType=DECIMAL},
      tax_refunds_received = #{taxRefundsReceived,jdbcType=DECIMAL},
      other_related_cash = #{otherRelatedCash,jdbcType=DECIMAL},
      cash_inflows = #{cashInflows,jdbcType=DECIMAL},
      cash_paid_goods = #{cashPaidGoods,jdbcType=DECIMAL},
      cash_paid_employees = #{cashPaidEmployees,jdbcType=DECIMAL},
      pay_various_taxes = #{payVariousTaxes,jdbcType=DECIMAL},
      pay_operating_cash = #{payOperatingCash,jdbcType=DECIMAL},
      cash_outflows_subtotal = #{cashOutflowsSubtotal,jdbcType=DECIMAL},
      operating_cash = #{operatingCash,jdbcType=DECIMAL},
      investment_activities_produce_cash = #{investmentActivitiesProduceCash,jdbcType=DECIMAL},
      collect_cash_received = #{collectCashReceived,jdbcType=DECIMAL},
      cash_from_investment_income = #{cashFromInvestmentIncome,jdbcType=DECIMAL},
      net_recovered_cash = #{netRecoveredCash,jdbcType=DECIMAL},
      other_units_net_cash_received = #{otherUnitsNetCashReceived,jdbcType=DECIMAL},
      cash_investment_activities = #{cashInvestmentActivities,jdbcType=DECIMAL},
      subtotal_investment_activities = #{subtotalInvestmentActivities,jdbcType=DECIMAL},
      cash_paid_fixed_assets = #{cashPaidFixedAssets,jdbcType=DECIMAL},
      cash_paid_investment = #{cashPaidInvestment,jdbcType=DECIMAL},
      net_cash_paid_unit = #{netCashPaidUnit,jdbcType=DECIMAL},
      cash_related_investment_activities = #{cashRelatedInvestmentActivities,jdbcType=DECIMAL},
      investment_activities_subtotal = #{investmentActivitiesSubtotal,jdbcType=DECIMAL},
      Investment_activities_cash = #{investmentActivitiesCash,jdbcType=DECIMAL},
      financing_activities_cash = #{financingActivitiesCash,jdbcType=DECIMAL},
      receive_cash_investments = #{receiveCashInvestments,jdbcType=DECIMAL},
      cash_received_from_loan = #{cashReceivedFromLoan,jdbcType=DECIMAL},
      cash_financing_activities = #{cashFinancingActivities,jdbcType=DECIMAL},
      financing_activities_subtotal = #{financingActivitiesSubtotal,jdbcType=DECIMAL},
      payment_for_debt = #{paymentForDebt,jdbcType=DECIMAL},
      for_interest_payments = #{forInterestPayments,jdbcType=DECIMAL},
      pay_other_related_cash = #{payOtherRelatedCash,jdbcType=DECIMAL},
      outflow_financing_activities = #{outflowFinancingActivities,jdbcType=DECIMAL},
      mobilization_activities_cash = #{mobilizationActivitiesCash,jdbcType=DECIMAL},
      effect_cash_equivalents = #{effectCashEquivalents,jdbcType=DECIMAL},
      net_increase_in_cash_equivalents = #{netIncreaseInCashEquivalents,jdbcType=DECIMAL},
      cash_equivalent_balance = #{cashEquivalentBalance,jdbcType=DECIMAL},
      closing_cash_balance = #{closingCashBalance,jdbcType=DECIMAL},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_person = #{modifyPerson,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      data_resource = #{dataResource,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.huizhi.supplier.db.model.TCpyCashFlowExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from t_cpy_cash_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from t_cpy_cash_flow
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>