package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyLandinfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public TCpyLandinfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public TCpyLandinfoExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public TCpyLandinfoExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyLandinfoExample example = new TCpyLandinfoExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public TCpyLandinfoExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public TCpyLandinfoExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationIsNull() {
            addCriterion("parcel_identification is null");
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationIsNotNull() {
            addCriterion("parcel_identification is not null");
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationEqualTo(String value) {
            addCriterion("parcel_identification =", value, "parcelIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andParcelIdentificationEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("parcel_identification = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationNotEqualTo(String value) {
            addCriterion("parcel_identification <>", value, "parcelIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andParcelIdentificationNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("parcel_identification <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationGreaterThan(String value) {
            addCriterion("parcel_identification >", value, "parcelIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andParcelIdentificationGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("parcel_identification > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationGreaterThanOrEqualTo(String value) {
            addCriterion("parcel_identification >=", value, "parcelIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andParcelIdentificationGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("parcel_identification >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationLessThan(String value) {
            addCriterion("parcel_identification <", value, "parcelIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andParcelIdentificationLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("parcel_identification < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationLessThanOrEqualTo(String value) {
            addCriterion("parcel_identification <=", value, "parcelIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andParcelIdentificationLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("parcel_identification <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationLike(String value) {
            addCriterion("parcel_identification like", value, "parcelIdentification");
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationNotLike(String value) {
            addCriterion("parcel_identification not like", value, "parcelIdentification");
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationIn(List<String> values) {
            addCriterion("parcel_identification in", values, "parcelIdentification");
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationNotIn(List<String> values) {
            addCriterion("parcel_identification not in", values, "parcelIdentification");
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationBetween(String value1, String value2) {
            addCriterion("parcel_identification between", value1, value2, "parcelIdentification");
            return (Criteria) this;
        }

        public Criteria andParcelIdentificationNotBetween(String value1, String value2) {
            addCriterion("parcel_identification not between", value1, value2, "parcelIdentification");
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberIsNull() {
            addCriterion("electronic_surveillance_number is null");
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberIsNotNull() {
            addCriterion("electronic_surveillance_number is not null");
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberEqualTo(String value) {
            addCriterion("electronic_surveillance_number =", value, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andElectronicSurveillanceNumberEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("electronic_surveillance_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberNotEqualTo(String value) {
            addCriterion("electronic_surveillance_number <>", value, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andElectronicSurveillanceNumberNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("electronic_surveillance_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberGreaterThan(String value) {
            addCriterion("electronic_surveillance_number >", value, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andElectronicSurveillanceNumberGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("electronic_surveillance_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberGreaterThanOrEqualTo(String value) {
            addCriterion("electronic_surveillance_number >=", value, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andElectronicSurveillanceNumberGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("electronic_surveillance_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberLessThan(String value) {
            addCriterion("electronic_surveillance_number <", value, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andElectronicSurveillanceNumberLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("electronic_surveillance_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberLessThanOrEqualTo(String value) {
            addCriterion("electronic_surveillance_number <=", value, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andElectronicSurveillanceNumberLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("electronic_surveillance_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberLike(String value) {
            addCriterion("electronic_surveillance_number like", value, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberNotLike(String value) {
            addCriterion("electronic_surveillance_number not like", value, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberIn(List<String> values) {
            addCriterion("electronic_surveillance_number in", values, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberNotIn(List<String> values) {
            addCriterion("electronic_surveillance_number not in", values, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberBetween(String value1, String value2) {
            addCriterion("electronic_surveillance_number between", value1, value2, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        public Criteria andElectronicSurveillanceNumberNotBetween(String value1, String value2) {
            addCriterion("electronic_surveillance_number not between", value1, value2, "electronicSurveillanceNumber");
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsIsNull() {
            addCriterion("original_land_use_rights is null");
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsIsNotNull() {
            addCriterion("original_land_use_rights is not null");
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsEqualTo(String value) {
            addCriterion("original_land_use_rights =", value, "originalLandUseRights");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andOriginalLandUseRightsEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("original_land_use_rights = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsNotEqualTo(String value) {
            addCriterion("original_land_use_rights <>", value, "originalLandUseRights");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andOriginalLandUseRightsNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("original_land_use_rights <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsGreaterThan(String value) {
            addCriterion("original_land_use_rights >", value, "originalLandUseRights");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andOriginalLandUseRightsGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("original_land_use_rights > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsGreaterThanOrEqualTo(String value) {
            addCriterion("original_land_use_rights >=", value, "originalLandUseRights");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andOriginalLandUseRightsGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("original_land_use_rights >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsLessThan(String value) {
            addCriterion("original_land_use_rights <", value, "originalLandUseRights");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andOriginalLandUseRightsLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("original_land_use_rights < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsLessThanOrEqualTo(String value) {
            addCriterion("original_land_use_rights <=", value, "originalLandUseRights");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andOriginalLandUseRightsLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("original_land_use_rights <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsLike(String value) {
            addCriterion("original_land_use_rights like", value, "originalLandUseRights");
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsNotLike(String value) {
            addCriterion("original_land_use_rights not like", value, "originalLandUseRights");
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsIn(List<String> values) {
            addCriterion("original_land_use_rights in", values, "originalLandUseRights");
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsNotIn(List<String> values) {
            addCriterion("original_land_use_rights not in", values, "originalLandUseRights");
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsBetween(String value1, String value2) {
            addCriterion("original_land_use_rights between", value1, value2, "originalLandUseRights");
            return (Criteria) this;
        }

        public Criteria andOriginalLandUseRightsNotBetween(String value1, String value2) {
            addCriterion("original_land_use_rights not between", value1, value2, "originalLandUseRights");
            return (Criteria) this;
        }

        public Criteria andLandUseAgeIsNull() {
            addCriterion("land_use_age is null");
            return (Criteria) this;
        }

        public Criteria andLandUseAgeIsNotNull() {
            addCriterion("land_use_age is not null");
            return (Criteria) this;
        }

        public Criteria andLandUseAgeEqualTo(String value) {
            addCriterion("land_use_age =", value, "landUseAge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseAgeEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_age = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseAgeNotEqualTo(String value) {
            addCriterion("land_use_age <>", value, "landUseAge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseAgeNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_age <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseAgeGreaterThan(String value) {
            addCriterion("land_use_age >", value, "landUseAge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseAgeGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_age > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseAgeGreaterThanOrEqualTo(String value) {
            addCriterion("land_use_age >=", value, "landUseAge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseAgeGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_age >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseAgeLessThan(String value) {
            addCriterion("land_use_age <", value, "landUseAge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseAgeLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_age < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseAgeLessThanOrEqualTo(String value) {
            addCriterion("land_use_age <=", value, "landUseAge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseAgeLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_age <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseAgeLike(String value) {
            addCriterion("land_use_age like", value, "landUseAge");
            return (Criteria) this;
        }

        public Criteria andLandUseAgeNotLike(String value) {
            addCriterion("land_use_age not like", value, "landUseAge");
            return (Criteria) this;
        }

        public Criteria andLandUseAgeIn(List<String> values) {
            addCriterion("land_use_age in", values, "landUseAge");
            return (Criteria) this;
        }

        public Criteria andLandUseAgeNotIn(List<String> values) {
            addCriterion("land_use_age not in", values, "landUseAge");
            return (Criteria) this;
        }

        public Criteria andLandUseAgeBetween(String value1, String value2) {
            addCriterion("land_use_age between", value1, value2, "landUseAge");
            return (Criteria) this;
        }

        public Criteria andLandUseAgeNotBetween(String value1, String value2) {
            addCriterion("land_use_age not between", value1, value2, "landUseAge");
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodIsNull() {
            addCriterion("publicity_period is null");
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodIsNotNull() {
            addCriterion("publicity_period is not null");
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodEqualTo(LocalDate value) {
            addCriterion("publicity_period =", value, "publicityPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPublicityPeriodEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("publicity_period = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodNotEqualTo(LocalDate value) {
            addCriterion("publicity_period <>", value, "publicityPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPublicityPeriodNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("publicity_period <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodGreaterThan(LocalDate value) {
            addCriterion("publicity_period >", value, "publicityPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPublicityPeriodGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("publicity_period > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("publicity_period >=", value, "publicityPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPublicityPeriodGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("publicity_period >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodLessThan(LocalDate value) {
            addCriterion("publicity_period <", value, "publicityPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPublicityPeriodLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("publicity_period < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodLessThanOrEqualTo(LocalDate value) {
            addCriterion("publicity_period <=", value, "publicityPeriod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPublicityPeriodLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("publicity_period <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodIn(List<LocalDate> values) {
            addCriterion("publicity_period in", values, "publicityPeriod");
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodNotIn(List<LocalDate> values) {
            addCriterion("publicity_period not in", values, "publicityPeriod");
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodBetween(LocalDate value1, LocalDate value2) {
            addCriterion("publicity_period between", value1, value2, "publicityPeriod");
            return (Criteria) this;
        }

        public Criteria andPublicityPeriodNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("publicity_period not between", value1, value2, "publicityPeriod");
            return (Criteria) this;
        }

        public Criteria andLandWayIsNull() {
            addCriterion("land_way is null");
            return (Criteria) this;
        }

        public Criteria andLandWayIsNotNull() {
            addCriterion("land_way is not null");
            return (Criteria) this;
        }

        public Criteria andLandWayEqualTo(String value) {
            addCriterion("land_way =", value, "landWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandWayEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_way = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandWayNotEqualTo(String value) {
            addCriterion("land_way <>", value, "landWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandWayNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_way <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandWayGreaterThan(String value) {
            addCriterion("land_way >", value, "landWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandWayGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_way > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandWayGreaterThanOrEqualTo(String value) {
            addCriterion("land_way >=", value, "landWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandWayGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_way >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandWayLessThan(String value) {
            addCriterion("land_way <", value, "landWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandWayLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_way < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandWayLessThanOrEqualTo(String value) {
            addCriterion("land_way <=", value, "landWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandWayLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_way <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandWayLike(String value) {
            addCriterion("land_way like", value, "landWay");
            return (Criteria) this;
        }

        public Criteria andLandWayNotLike(String value) {
            addCriterion("land_way not like", value, "landWay");
            return (Criteria) this;
        }

        public Criteria andLandWayIn(List<String> values) {
            addCriterion("land_way in", values, "landWay");
            return (Criteria) this;
        }

        public Criteria andLandWayNotIn(List<String> values) {
            addCriterion("land_way not in", values, "landWay");
            return (Criteria) this;
        }

        public Criteria andLandWayBetween(String value1, String value2) {
            addCriterion("land_way between", value1, value2, "landWay");
            return (Criteria) this;
        }

        public Criteria andLandWayNotBetween(String value1, String value2) {
            addCriterion("land_way not between", value1, value2, "landWay");
            return (Criteria) this;
        }

        public Criteria andTransferUnitIsNull() {
            addCriterion("transfer_unit is null");
            return (Criteria) this;
        }

        public Criteria andTransferUnitIsNotNull() {
            addCriterion("transfer_unit is not null");
            return (Criteria) this;
        }

        public Criteria andTransferUnitEqualTo(String value) {
            addCriterion("transfer_unit =", value, "transferUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTransferUnitEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("transfer_unit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferUnitNotEqualTo(String value) {
            addCriterion("transfer_unit <>", value, "transferUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTransferUnitNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("transfer_unit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferUnitGreaterThan(String value) {
            addCriterion("transfer_unit >", value, "transferUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTransferUnitGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("transfer_unit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferUnitGreaterThanOrEqualTo(String value) {
            addCriterion("transfer_unit >=", value, "transferUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTransferUnitGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("transfer_unit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferUnitLessThan(String value) {
            addCriterion("transfer_unit <", value, "transferUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTransferUnitLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("transfer_unit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferUnitLessThanOrEqualTo(String value) {
            addCriterion("transfer_unit <=", value, "transferUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTransferUnitLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("transfer_unit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferUnitLike(String value) {
            addCriterion("transfer_unit like", value, "transferUnit");
            return (Criteria) this;
        }

        public Criteria andTransferUnitNotLike(String value) {
            addCriterion("transfer_unit not like", value, "transferUnit");
            return (Criteria) this;
        }

        public Criteria andTransferUnitIn(List<String> values) {
            addCriterion("transfer_unit in", values, "transferUnit");
            return (Criteria) this;
        }

        public Criteria andTransferUnitNotIn(List<String> values) {
            addCriterion("transfer_unit not in", values, "transferUnit");
            return (Criteria) this;
        }

        public Criteria andTransferUnitBetween(String value1, String value2) {
            addCriterion("transfer_unit between", value1, value2, "transferUnit");
            return (Criteria) this;
        }

        public Criteria andTransferUnitNotBetween(String value1, String value2) {
            addCriterion("transfer_unit not between", value1, value2, "transferUnit");
            return (Criteria) this;
        }

        public Criteria andLandUseStatusIsNull() {
            addCriterion("land_use_status is null");
            return (Criteria) this;
        }

        public Criteria andLandUseStatusIsNotNull() {
            addCriterion("land_use_status is not null");
            return (Criteria) this;
        }

        public Criteria andLandUseStatusEqualTo(String value) {
            addCriterion("land_use_status =", value, "landUseStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseStatusEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseStatusNotEqualTo(String value) {
            addCriterion("land_use_status <>", value, "landUseStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseStatusNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseStatusGreaterThan(String value) {
            addCriterion("land_use_status >", value, "landUseStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseStatusGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseStatusGreaterThanOrEqualTo(String value) {
            addCriterion("land_use_status >=", value, "landUseStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseStatusGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseStatusLessThan(String value) {
            addCriterion("land_use_status <", value, "landUseStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseStatusLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseStatusLessThanOrEqualTo(String value) {
            addCriterion("land_use_status <=", value, "landUseStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseStatusLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseStatusLike(String value) {
            addCriterion("land_use_status like", value, "landUseStatus");
            return (Criteria) this;
        }

        public Criteria andLandUseStatusNotLike(String value) {
            addCriterion("land_use_status not like", value, "landUseStatus");
            return (Criteria) this;
        }

        public Criteria andLandUseStatusIn(List<String> values) {
            addCriterion("land_use_status in", values, "landUseStatus");
            return (Criteria) this;
        }

        public Criteria andLandUseStatusNotIn(List<String> values) {
            addCriterion("land_use_status not in", values, "landUseStatus");
            return (Criteria) this;
        }

        public Criteria andLandUseStatusBetween(String value1, String value2) {
            addCriterion("land_use_status between", value1, value2, "landUseStatus");
            return (Criteria) this;
        }

        public Criteria andLandUseStatusNotBetween(String value1, String value2) {
            addCriterion("land_use_status not between", value1, value2, "landUseStatus");
            return (Criteria) this;
        }

        public Criteria andLandUseRightIsNull() {
            addCriterion("land_use_right is null");
            return (Criteria) this;
        }

        public Criteria andLandUseRightIsNotNull() {
            addCriterion("land_use_right is not null");
            return (Criteria) this;
        }

        public Criteria andLandUseRightEqualTo(String value) {
            addCriterion("land_use_right =", value, "landUseRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseRightEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_right = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseRightNotEqualTo(String value) {
            addCriterion("land_use_right <>", value, "landUseRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseRightNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_right <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseRightGreaterThan(String value) {
            addCriterion("land_use_right >", value, "landUseRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseRightGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_right > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseRightGreaterThanOrEqualTo(String value) {
            addCriterion("land_use_right >=", value, "landUseRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseRightGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_right >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseRightLessThan(String value) {
            addCriterion("land_use_right <", value, "landUseRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseRightLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_right < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseRightLessThanOrEqualTo(String value) {
            addCriterion("land_use_right <=", value, "landUseRight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseRightLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use_right <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseRightLike(String value) {
            addCriterion("land_use_right like", value, "landUseRight");
            return (Criteria) this;
        }

        public Criteria andLandUseRightNotLike(String value) {
            addCriterion("land_use_right not like", value, "landUseRight");
            return (Criteria) this;
        }

        public Criteria andLandUseRightIn(List<String> values) {
            addCriterion("land_use_right in", values, "landUseRight");
            return (Criteria) this;
        }

        public Criteria andLandUseRightNotIn(List<String> values) {
            addCriterion("land_use_right not in", values, "landUseRight");
            return (Criteria) this;
        }

        public Criteria andLandUseRightBetween(String value1, String value2) {
            addCriterion("land_use_right between", value1, value2, "landUseRight");
            return (Criteria) this;
        }

        public Criteria andLandUseRightNotBetween(String value1, String value2) {
            addCriterion("land_use_right not between", value1, value2, "landUseRight");
            return (Criteria) this;
        }

        public Criteria andSignDateIsNull() {
            addCriterion("sign_date is null");
            return (Criteria) this;
        }

        public Criteria andSignDateIsNotNull() {
            addCriterion("sign_date is not null");
            return (Criteria) this;
        }

        public Criteria andSignDateEqualTo(LocalDate value) {
            addCriterion("sign_date =", value, "signDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andSignDateEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("sign_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignDateNotEqualTo(LocalDate value) {
            addCriterion("sign_date <>", value, "signDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andSignDateNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("sign_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignDateGreaterThan(LocalDate value) {
            addCriterion("sign_date >", value, "signDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andSignDateGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("sign_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("sign_date >=", value, "signDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andSignDateGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("sign_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignDateLessThan(LocalDate value) {
            addCriterion("sign_date <", value, "signDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andSignDateLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("sign_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("sign_date <=", value, "signDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andSignDateLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("sign_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSignDateIn(List<LocalDate> values) {
            addCriterion("sign_date in", values, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateNotIn(List<LocalDate> values) {
            addCriterion("sign_date not in", values, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("sign_date between", value1, value2, "signDate");
            return (Criteria) this;
        }

        public Criteria andSignDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("sign_date not between", value1, value2, "signDate");
            return (Criteria) this;
        }

        public Criteria andLandUseIsNull() {
            addCriterion("land_use is null");
            return (Criteria) this;
        }

        public Criteria andLandUseIsNotNull() {
            addCriterion("land_use is not null");
            return (Criteria) this;
        }

        public Criteria andLandUseEqualTo(String value) {
            addCriterion("land_use =", value, "landUse");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseNotEqualTo(String value) {
            addCriterion("land_use <>", value, "landUse");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseGreaterThan(String value) {
            addCriterion("land_use >", value, "landUse");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseGreaterThanOrEqualTo(String value) {
            addCriterion("land_use >=", value, "landUse");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseLessThan(String value) {
            addCriterion("land_use <", value, "landUse");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseLessThanOrEqualTo(String value) {
            addCriterion("land_use <=", value, "landUse");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandUseLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_use <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandUseLike(String value) {
            addCriterion("land_use like", value, "landUse");
            return (Criteria) this;
        }

        public Criteria andLandUseNotLike(String value) {
            addCriterion("land_use not like", value, "landUse");
            return (Criteria) this;
        }

        public Criteria andLandUseIn(List<String> values) {
            addCriterion("land_use in", values, "landUse");
            return (Criteria) this;
        }

        public Criteria andLandUseNotIn(List<String> values) {
            addCriterion("land_use not in", values, "landUse");
            return (Criteria) this;
        }

        public Criteria andLandUseBetween(String value1, String value2) {
            addCriterion("land_use between", value1, value2, "landUse");
            return (Criteria) this;
        }

        public Criteria andLandUseNotBetween(String value1, String value2) {
            addCriterion("land_use not between", value1, value2, "landUse");
            return (Criteria) this;
        }

        public Criteria andPlotLocationIsNull() {
            addCriterion("plot_location is null");
            return (Criteria) this;
        }

        public Criteria andPlotLocationIsNotNull() {
            addCriterion("plot_location is not null");
            return (Criteria) this;
        }

        public Criteria andPlotLocationEqualTo(String value) {
            addCriterion("plot_location =", value, "plotLocation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPlotLocationEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("plot_location = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlotLocationNotEqualTo(String value) {
            addCriterion("plot_location <>", value, "plotLocation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPlotLocationNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("plot_location <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlotLocationGreaterThan(String value) {
            addCriterion("plot_location >", value, "plotLocation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPlotLocationGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("plot_location > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlotLocationGreaterThanOrEqualTo(String value) {
            addCriterion("plot_location >=", value, "plotLocation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPlotLocationGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("plot_location >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlotLocationLessThan(String value) {
            addCriterion("plot_location <", value, "plotLocation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPlotLocationLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("plot_location < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlotLocationLessThanOrEqualTo(String value) {
            addCriterion("plot_location <=", value, "plotLocation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPlotLocationLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("plot_location <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlotLocationLike(String value) {
            addCriterion("plot_location like", value, "plotLocation");
            return (Criteria) this;
        }

        public Criteria andPlotLocationNotLike(String value) {
            addCriterion("plot_location not like", value, "plotLocation");
            return (Criteria) this;
        }

        public Criteria andPlotLocationIn(List<String> values) {
            addCriterion("plot_location in", values, "plotLocation");
            return (Criteria) this;
        }

        public Criteria andPlotLocationNotIn(List<String> values) {
            addCriterion("plot_location not in", values, "plotLocation");
            return (Criteria) this;
        }

        public Criteria andPlotLocationBetween(String value1, String value2) {
            addCriterion("plot_location between", value1, value2, "plotLocation");
            return (Criteria) this;
        }

        public Criteria andPlotLocationNotBetween(String value1, String value2) {
            addCriterion("plot_location not between", value1, value2, "plotLocation");
            return (Criteria) this;
        }

        public Criteria andLandAreaIsNull() {
            addCriterion("land_area is null");
            return (Criteria) this;
        }

        public Criteria andLandAreaIsNotNull() {
            addCriterion("land_area is not null");
            return (Criteria) this;
        }

        public Criteria andLandAreaEqualTo(String value) {
            addCriterion("land_area =", value, "landArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandAreaEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_area = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandAreaNotEqualTo(String value) {
            addCriterion("land_area <>", value, "landArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandAreaNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_area <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandAreaGreaterThan(String value) {
            addCriterion("land_area >", value, "landArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandAreaGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_area > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandAreaGreaterThanOrEqualTo(String value) {
            addCriterion("land_area >=", value, "landArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandAreaGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_area >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandAreaLessThan(String value) {
            addCriterion("land_area <", value, "landArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandAreaLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_area < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandAreaLessThanOrEqualTo(String value) {
            addCriterion("land_area <=", value, "landArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andLandAreaLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("land_area <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLandAreaLike(String value) {
            addCriterion("land_area like", value, "landArea");
            return (Criteria) this;
        }

        public Criteria andLandAreaNotLike(String value) {
            addCriterion("land_area not like", value, "landArea");
            return (Criteria) this;
        }

        public Criteria andLandAreaIn(List<String> values) {
            addCriterion("land_area in", values, "landArea");
            return (Criteria) this;
        }

        public Criteria andLandAreaNotIn(List<String> values) {
            addCriterion("land_area not in", values, "landArea");
            return (Criteria) this;
        }

        public Criteria andLandAreaBetween(String value1, String value2) {
            addCriterion("land_area between", value1, value2, "landArea");
            return (Criteria) this;
        }

        public Criteria andLandAreaNotBetween(String value1, String value2) {
            addCriterion("land_area not between", value1, value2, "landArea");
            return (Criteria) this;
        }

        public Criteria andBulletinPathIsNull() {
            addCriterion("bulletin_path is null");
            return (Criteria) this;
        }

        public Criteria andBulletinPathIsNotNull() {
            addCriterion("bulletin_path is not null");
            return (Criteria) this;
        }

        public Criteria andBulletinPathEqualTo(String value) {
            addCriterion("bulletin_path =", value, "bulletinPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andBulletinPathEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("bulletin_path = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBulletinPathNotEqualTo(String value) {
            addCriterion("bulletin_path <>", value, "bulletinPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andBulletinPathNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("bulletin_path <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBulletinPathGreaterThan(String value) {
            addCriterion("bulletin_path >", value, "bulletinPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andBulletinPathGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("bulletin_path > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBulletinPathGreaterThanOrEqualTo(String value) {
            addCriterion("bulletin_path >=", value, "bulletinPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andBulletinPathGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("bulletin_path >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBulletinPathLessThan(String value) {
            addCriterion("bulletin_path <", value, "bulletinPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andBulletinPathLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("bulletin_path < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBulletinPathLessThanOrEqualTo(String value) {
            addCriterion("bulletin_path <=", value, "bulletinPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andBulletinPathLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("bulletin_path <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBulletinPathLike(String value) {
            addCriterion("bulletin_path like", value, "bulletinPath");
            return (Criteria) this;
        }

        public Criteria andBulletinPathNotLike(String value) {
            addCriterion("bulletin_path not like", value, "bulletinPath");
            return (Criteria) this;
        }

        public Criteria andBulletinPathIn(List<String> values) {
            addCriterion("bulletin_path in", values, "bulletinPath");
            return (Criteria) this;
        }

        public Criteria andBulletinPathNotIn(List<String> values) {
            addCriterion("bulletin_path not in", values, "bulletinPath");
            return (Criteria) this;
        }

        public Criteria andBulletinPathBetween(String value1, String value2) {
            addCriterion("bulletin_path between", value1, value2, "bulletinPath");
            return (Criteria) this;
        }

        public Criteria andBulletinPathNotBetween(String value1, String value2) {
            addCriterion("bulletin_path not between", value1, value2, "bulletinPath");
            return (Criteria) this;
        }

        public Criteria andDealPriceIsNull() {
            addCriterion("deal_price is null");
            return (Criteria) this;
        }

        public Criteria andDealPriceIsNotNull() {
            addCriterion("deal_price is not null");
            return (Criteria) this;
        }

        public Criteria andDealPriceEqualTo(BigDecimal value) {
            addCriterion("deal_price =", value, "dealPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDealPriceEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("deal_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealPriceNotEqualTo(BigDecimal value) {
            addCriterion("deal_price <>", value, "dealPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDealPriceNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("deal_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealPriceGreaterThan(BigDecimal value) {
            addCriterion("deal_price >", value, "dealPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDealPriceGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("deal_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("deal_price >=", value, "dealPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDealPriceGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("deal_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealPriceLessThan(BigDecimal value) {
            addCriterion("deal_price <", value, "dealPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDealPriceLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("deal_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("deal_price <=", value, "dealPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDealPriceLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("deal_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDealPriceIn(List<BigDecimal> values) {
            addCriterion("deal_price in", values, "dealPrice");
            return (Criteria) this;
        }

        public Criteria andDealPriceNotIn(List<BigDecimal> values) {
            addCriterion("deal_price not in", values, "dealPrice");
            return (Criteria) this;
        }

        public Criteria andDealPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deal_price between", value1, value2, "dealPrice");
            return (Criteria) this;
        }

        public Criteria andDealPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deal_price not between", value1, value2, "dealPrice");
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateIsNull() {
            addCriterion("agree_start_date is null");
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateIsNotNull() {
            addCriterion("agree_start_date is not null");
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateEqualTo(LocalDate value) {
            addCriterion("agree_start_date =", value, "agreeStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeStartDateEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_start_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateNotEqualTo(LocalDate value) {
            addCriterion("agree_start_date <>", value, "agreeStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeStartDateNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_start_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateGreaterThan(LocalDate value) {
            addCriterion("agree_start_date >", value, "agreeStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeStartDateGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_start_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("agree_start_date >=", value, "agreeStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeStartDateGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_start_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateLessThan(LocalDate value) {
            addCriterion("agree_start_date <", value, "agreeStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeStartDateLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_start_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("agree_start_date <=", value, "agreeStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeStartDateLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_start_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateIn(List<LocalDate> values) {
            addCriterion("agree_start_date in", values, "agreeStartDate");
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateNotIn(List<LocalDate> values) {
            addCriterion("agree_start_date not in", values, "agreeStartDate");
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("agree_start_date between", value1, value2, "agreeStartDate");
            return (Criteria) this;
        }

        public Criteria andAgreeStartDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("agree_start_date not between", value1, value2, "agreeStartDate");
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateIsNull() {
            addCriterion("agree_complete_date is null");
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateIsNotNull() {
            addCriterion("agree_complete_date is not null");
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateEqualTo(LocalDate value) {
            addCriterion("agree_complete_date =", value, "agreeCompleteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeCompleteDateEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_complete_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateNotEqualTo(LocalDate value) {
            addCriterion("agree_complete_date <>", value, "agreeCompleteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeCompleteDateNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_complete_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateGreaterThan(LocalDate value) {
            addCriterion("agree_complete_date >", value, "agreeCompleteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeCompleteDateGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_complete_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("agree_complete_date >=", value, "agreeCompleteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeCompleteDateGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_complete_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateLessThan(LocalDate value) {
            addCriterion("agree_complete_date <", value, "agreeCompleteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeCompleteDateLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_complete_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("agree_complete_date <=", value, "agreeCompleteDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreeCompleteDateLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agree_complete_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateIn(List<LocalDate> values) {
            addCriterion("agree_complete_date in", values, "agreeCompleteDate");
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateNotIn(List<LocalDate> values) {
            addCriterion("agree_complete_date not in", values, "agreeCompleteDate");
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("agree_complete_date between", value1, value2, "agreeCompleteDate");
            return (Criteria) this;
        }

        public Criteria andAgreeCompleteDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("agree_complete_date not between", value1, value2, "agreeCompleteDate");
            return (Criteria) this;
        }

        public Criteria andClosingTimeIsNull() {
            addCriterion("closing_time is null");
            return (Criteria) this;
        }

        public Criteria andClosingTimeIsNotNull() {
            addCriterion("closing_time is not null");
            return (Criteria) this;
        }

        public Criteria andClosingTimeEqualTo(LocalDate value) {
            addCriterion("closing_time =", value, "closingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andClosingTimeEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("closing_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingTimeNotEqualTo(LocalDate value) {
            addCriterion("closing_time <>", value, "closingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andClosingTimeNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("closing_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingTimeGreaterThan(LocalDate value) {
            addCriterion("closing_time >", value, "closingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andClosingTimeGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("closing_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingTimeGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("closing_time >=", value, "closingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andClosingTimeGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("closing_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingTimeLessThan(LocalDate value) {
            addCriterion("closing_time <", value, "closingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andClosingTimeLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("closing_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingTimeLessThanOrEqualTo(LocalDate value) {
            addCriterion("closing_time <=", value, "closingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andClosingTimeLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("closing_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingTimeIn(List<LocalDate> values) {
            addCriterion("closing_time in", values, "closingTime");
            return (Criteria) this;
        }

        public Criteria andClosingTimeNotIn(List<LocalDate> values) {
            addCriterion("closing_time not in", values, "closingTime");
            return (Criteria) this;
        }

        public Criteria andClosingTimeBetween(LocalDate value1, LocalDate value2) {
            addCriterion("closing_time between", value1, value2, "closingTime");
            return (Criteria) this;
        }

        public Criteria andClosingTimeNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("closing_time not between", value1, value2, "closingTime");
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaIsNull() {
            addCriterion("administration_area is null");
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaIsNotNull() {
            addCriterion("administration_area is not null");
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaEqualTo(String value) {
            addCriterion("administration_area =", value, "administrationArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAdministrationAreaEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("administration_area = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaNotEqualTo(String value) {
            addCriterion("administration_area <>", value, "administrationArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAdministrationAreaNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("administration_area <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaGreaterThan(String value) {
            addCriterion("administration_area >", value, "administrationArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAdministrationAreaGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("administration_area > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaGreaterThanOrEqualTo(String value) {
            addCriterion("administration_area >=", value, "administrationArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAdministrationAreaGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("administration_area >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaLessThan(String value) {
            addCriterion("administration_area <", value, "administrationArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAdministrationAreaLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("administration_area < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaLessThanOrEqualTo(String value) {
            addCriterion("administration_area <=", value, "administrationArea");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAdministrationAreaLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("administration_area <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaLike(String value) {
            addCriterion("administration_area like", value, "administrationArea");
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaNotLike(String value) {
            addCriterion("administration_area not like", value, "administrationArea");
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaIn(List<String> values) {
            addCriterion("administration_area in", values, "administrationArea");
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaNotIn(List<String> values) {
            addCriterion("administration_area not in", values, "administrationArea");
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaBetween(String value1, String value2) {
            addCriterion("administration_area between", value1, value2, "administrationArea");
            return (Criteria) this;
        }

        public Criteria andAdministrationAreaNotBetween(String value1, String value2) {
            addCriterion("administration_area not between", value1, value2, "administrationArea");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("title is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("title is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("title =", value, "title");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTitleEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("title = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("title <>", value, "title");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTitleNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("title <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("title >", value, "title");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTitleGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("title > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("title >=", value, "title");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTitleGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("title >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("title <", value, "title");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTitleLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("title < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("title <=", value, "title");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andTitleLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("title <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("title like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("title not like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("title in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("title not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("title between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("title not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andEmailEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("email = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andEmailNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("email <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andEmailGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("email > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andEmailGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("email >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andEmailLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("email < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andEmailLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("email <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andContactsIsNull() {
            addCriterion("contacts is null");
            return (Criteria) this;
        }

        public Criteria andContactsIsNotNull() {
            addCriterion("contacts is not null");
            return (Criteria) this;
        }

        public Criteria andContactsEqualTo(String value) {
            addCriterion("contacts =", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactsEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contacts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsNotEqualTo(String value) {
            addCriterion("contacts <>", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactsNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contacts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsGreaterThan(String value) {
            addCriterion("contacts >", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactsGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contacts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsGreaterThanOrEqualTo(String value) {
            addCriterion("contacts >=", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactsGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contacts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsLessThan(String value) {
            addCriterion("contacts <", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactsLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contacts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsLessThanOrEqualTo(String value) {
            addCriterion("contacts <=", value, "contacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactsLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contacts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactsLike(String value) {
            addCriterion("contacts like", value, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsNotLike(String value) {
            addCriterion("contacts not like", value, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsIn(List<String> values) {
            addCriterion("contacts in", values, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsNotIn(List<String> values) {
            addCriterion("contacts not in", values, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsBetween(String value1, String value2) {
            addCriterion("contacts between", value1, value2, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactsNotBetween(String value1, String value2) {
            addCriterion("contacts not between", value1, value2, "contacts");
            return (Criteria) this;
        }

        public Criteria andContactUnitIsNull() {
            addCriterion("contact_unit is null");
            return (Criteria) this;
        }

        public Criteria andContactUnitIsNotNull() {
            addCriterion("contact_unit is not null");
            return (Criteria) this;
        }

        public Criteria andContactUnitEqualTo(String value) {
            addCriterion("contact_unit =", value, "contactUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactUnitEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_unit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactUnitNotEqualTo(String value) {
            addCriterion("contact_unit <>", value, "contactUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactUnitNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_unit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactUnitGreaterThan(String value) {
            addCriterion("contact_unit >", value, "contactUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactUnitGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_unit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactUnitGreaterThanOrEqualTo(String value) {
            addCriterion("contact_unit >=", value, "contactUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactUnitGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_unit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactUnitLessThan(String value) {
            addCriterion("contact_unit <", value, "contactUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactUnitLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_unit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactUnitLessThanOrEqualTo(String value) {
            addCriterion("contact_unit <=", value, "contactUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactUnitLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_unit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactUnitLike(String value) {
            addCriterion("contact_unit like", value, "contactUnit");
            return (Criteria) this;
        }

        public Criteria andContactUnitNotLike(String value) {
            addCriterion("contact_unit not like", value, "contactUnit");
            return (Criteria) this;
        }

        public Criteria andContactUnitIn(List<String> values) {
            addCriterion("contact_unit in", values, "contactUnit");
            return (Criteria) this;
        }

        public Criteria andContactUnitNotIn(List<String> values) {
            addCriterion("contact_unit not in", values, "contactUnit");
            return (Criteria) this;
        }

        public Criteria andContactUnitBetween(String value1, String value2) {
            addCriterion("contact_unit between", value1, value2, "contactUnit");
            return (Criteria) this;
        }

        public Criteria andContactUnitNotBetween(String value1, String value2) {
            addCriterion("contact_unit not between", value1, value2, "contactUnit");
            return (Criteria) this;
        }

        public Criteria andContactNumberIsNull() {
            addCriterion("contact_number is null");
            return (Criteria) this;
        }

        public Criteria andContactNumberIsNotNull() {
            addCriterion("contact_number is not null");
            return (Criteria) this;
        }

        public Criteria andContactNumberEqualTo(String value) {
            addCriterion("contact_number =", value, "contactNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactNumberEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNumberNotEqualTo(String value) {
            addCriterion("contact_number <>", value, "contactNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactNumberNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNumberGreaterThan(String value) {
            addCriterion("contact_number >", value, "contactNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactNumberGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNumberGreaterThanOrEqualTo(String value) {
            addCriterion("contact_number >=", value, "contactNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactNumberGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNumberLessThan(String value) {
            addCriterion("contact_number <", value, "contactNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactNumberLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNumberLessThanOrEqualTo(String value) {
            addCriterion("contact_number <=", value, "contactNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andContactNumberLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("contact_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactNumberLike(String value) {
            addCriterion("contact_number like", value, "contactNumber");
            return (Criteria) this;
        }

        public Criteria andContactNumberNotLike(String value) {
            addCriterion("contact_number not like", value, "contactNumber");
            return (Criteria) this;
        }

        public Criteria andContactNumberIn(List<String> values) {
            addCriterion("contact_number in", values, "contactNumber");
            return (Criteria) this;
        }

        public Criteria andContactNumberNotIn(List<String> values) {
            addCriterion("contact_number not in", values, "contactNumber");
            return (Criteria) this;
        }

        public Criteria andContactNumberBetween(String value1, String value2) {
            addCriterion("contact_number between", value1, value2, "contactNumber");
            return (Criteria) this;
        }

        public Criteria andContactNumberNotBetween(String value1, String value2) {
            addCriterion("contact_number not between", value1, value2, "contactNumber");
            return (Criteria) this;
        }

        public Criteria andUnitAddressIsNull() {
            addCriterion("unit_address is null");
            return (Criteria) this;
        }

        public Criteria andUnitAddressIsNotNull() {
            addCriterion("unit_address is not null");
            return (Criteria) this;
        }

        public Criteria andUnitAddressEqualTo(String value) {
            addCriterion("unit_address =", value, "unitAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andUnitAddressEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("unit_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitAddressNotEqualTo(String value) {
            addCriterion("unit_address <>", value, "unitAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andUnitAddressNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("unit_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitAddressGreaterThan(String value) {
            addCriterion("unit_address >", value, "unitAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andUnitAddressGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("unit_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitAddressGreaterThanOrEqualTo(String value) {
            addCriterion("unit_address >=", value, "unitAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andUnitAddressGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("unit_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitAddressLessThan(String value) {
            addCriterion("unit_address <", value, "unitAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andUnitAddressLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("unit_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitAddressLessThanOrEqualTo(String value) {
            addCriterion("unit_address <=", value, "unitAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andUnitAddressLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("unit_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitAddressLike(String value) {
            addCriterion("unit_address like", value, "unitAddress");
            return (Criteria) this;
        }

        public Criteria andUnitAddressNotLike(String value) {
            addCriterion("unit_address not like", value, "unitAddress");
            return (Criteria) this;
        }

        public Criteria andUnitAddressIn(List<String> values) {
            addCriterion("unit_address in", values, "unitAddress");
            return (Criteria) this;
        }

        public Criteria andUnitAddressNotIn(List<String> values) {
            addCriterion("unit_address not in", values, "unitAddress");
            return (Criteria) this;
        }

        public Criteria andUnitAddressBetween(String value1, String value2) {
            addCriterion("unit_address between", value1, value2, "unitAddress");
            return (Criteria) this;
        }

        public Criteria andUnitAddressNotBetween(String value1, String value2) {
            addCriterion("unit_address not between", value1, value2, "unitAddress");
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementIsNull() {
            addCriterion("payment_agreement is null");
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementIsNotNull() {
            addCriterion("payment_agreement is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementEqualTo(String value) {
            addCriterion("payment_agreement =", value, "paymentAgreement");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPaymentAgreementEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("payment_agreement = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementNotEqualTo(String value) {
            addCriterion("payment_agreement <>", value, "paymentAgreement");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPaymentAgreementNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("payment_agreement <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementGreaterThan(String value) {
            addCriterion("payment_agreement >", value, "paymentAgreement");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPaymentAgreementGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("payment_agreement > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementGreaterThanOrEqualTo(String value) {
            addCriterion("payment_agreement >=", value, "paymentAgreement");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPaymentAgreementGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("payment_agreement >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementLessThan(String value) {
            addCriterion("payment_agreement <", value, "paymentAgreement");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPaymentAgreementLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("payment_agreement < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementLessThanOrEqualTo(String value) {
            addCriterion("payment_agreement <=", value, "paymentAgreement");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPaymentAgreementLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("payment_agreement <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementLike(String value) {
            addCriterion("payment_agreement like", value, "paymentAgreement");
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementNotLike(String value) {
            addCriterion("payment_agreement not like", value, "paymentAgreement");
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementIn(List<String> values) {
            addCriterion("payment_agreement in", values, "paymentAgreement");
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementNotIn(List<String> values) {
            addCriterion("payment_agreement not in", values, "paymentAgreement");
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementBetween(String value1, String value2) {
            addCriterion("payment_agreement between", value1, value2, "paymentAgreement");
            return (Criteria) this;
        }

        public Criteria andPaymentAgreementNotBetween(String value1, String value2) {
            addCriterion("payment_agreement not between", value1, value2, "paymentAgreement");
            return (Criteria) this;
        }

        public Criteria andApprovedUnitIsNull() {
            addCriterion("approved_unit is null");
            return (Criteria) this;
        }

        public Criteria andApprovedUnitIsNotNull() {
            addCriterion("approved_unit is not null");
            return (Criteria) this;
        }

        public Criteria andApprovedUnitEqualTo(String value) {
            addCriterion("approved_unit =", value, "approvedUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andApprovedUnitEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("approved_unit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedUnitNotEqualTo(String value) {
            addCriterion("approved_unit <>", value, "approvedUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andApprovedUnitNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("approved_unit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedUnitGreaterThan(String value) {
            addCriterion("approved_unit >", value, "approvedUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andApprovedUnitGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("approved_unit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedUnitGreaterThanOrEqualTo(String value) {
            addCriterion("approved_unit >=", value, "approvedUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andApprovedUnitGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("approved_unit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedUnitLessThan(String value) {
            addCriterion("approved_unit <", value, "approvedUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andApprovedUnitLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("approved_unit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedUnitLessThanOrEqualTo(String value) {
            addCriterion("approved_unit <=", value, "approvedUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andApprovedUnitLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("approved_unit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedUnitLike(String value) {
            addCriterion("approved_unit like", value, "approvedUnit");
            return (Criteria) this;
        }

        public Criteria andApprovedUnitNotLike(String value) {
            addCriterion("approved_unit not like", value, "approvedUnit");
            return (Criteria) this;
        }

        public Criteria andApprovedUnitIn(List<String> values) {
            addCriterion("approved_unit in", values, "approvedUnit");
            return (Criteria) this;
        }

        public Criteria andApprovedUnitNotIn(List<String> values) {
            addCriterion("approved_unit not in", values, "approvedUnit");
            return (Criteria) this;
        }

        public Criteria andApprovedUnitBetween(String value1, String value2) {
            addCriterion("approved_unit between", value1, value2, "approvedUnit");
            return (Criteria) this;
        }

        public Criteria andApprovedUnitNotBetween(String value1, String value2) {
            addCriterion("approved_unit not between", value1, value2, "approvedUnit");
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioIsNull() {
            addCriterion("agreed_volume_ratio is null");
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioIsNotNull() {
            addCriterion("agreed_volume_ratio is not null");
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioEqualTo(String value) {
            addCriterion("agreed_volume_ratio =", value, "agreedVolumeRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreedVolumeRatioEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agreed_volume_ratio = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioNotEqualTo(String value) {
            addCriterion("agreed_volume_ratio <>", value, "agreedVolumeRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreedVolumeRatioNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agreed_volume_ratio <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioGreaterThan(String value) {
            addCriterion("agreed_volume_ratio >", value, "agreedVolumeRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreedVolumeRatioGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agreed_volume_ratio > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioGreaterThanOrEqualTo(String value) {
            addCriterion("agreed_volume_ratio >=", value, "agreedVolumeRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreedVolumeRatioGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agreed_volume_ratio >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioLessThan(String value) {
            addCriterion("agreed_volume_ratio <", value, "agreedVolumeRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreedVolumeRatioLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agreed_volume_ratio < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioLessThanOrEqualTo(String value) {
            addCriterion("agreed_volume_ratio <=", value, "agreedVolumeRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andAgreedVolumeRatioLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("agreed_volume_ratio <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioLike(String value) {
            addCriterion("agreed_volume_ratio like", value, "agreedVolumeRatio");
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioNotLike(String value) {
            addCriterion("agreed_volume_ratio not like", value, "agreedVolumeRatio");
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioIn(List<String> values) {
            addCriterion("agreed_volume_ratio in", values, "agreedVolumeRatio");
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioNotIn(List<String> values) {
            addCriterion("agreed_volume_ratio not in", values, "agreedVolumeRatio");
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioBetween(String value1, String value2) {
            addCriterion("agreed_volume_ratio between", value1, value2, "agreedVolumeRatio");
            return (Criteria) this;
        }

        public Criteria andAgreedVolumeRatioNotBetween(String value1, String value2) {
            addCriterion("agreed_volume_ratio not between", value1, value2, "agreedVolumeRatio");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNull() {
            addCriterion("project_name is null");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNotNull() {
            addCriterion("project_name is not null");
            return (Criteria) this;
        }

        public Criteria andProjectNameEqualTo(String value) {
            addCriterion("project_name =", value, "projectName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andProjectNameEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("project_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectNameNotEqualTo(String value) {
            addCriterion("project_name <>", value, "projectName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andProjectNameNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("project_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThan(String value) {
            addCriterion("project_name >", value, "projectName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andProjectNameGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("project_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThanOrEqualTo(String value) {
            addCriterion("project_name >=", value, "projectName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andProjectNameGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("project_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThan(String value) {
            addCriterion("project_name <", value, "projectName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andProjectNameLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("project_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThanOrEqualTo(String value) {
            addCriterion("project_name <=", value, "projectName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andProjectNameLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("project_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectNameLike(String value) {
            addCriterion("project_name like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotLike(String value) {
            addCriterion("project_name not like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameIn(List<String> values) {
            addCriterion("project_name in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotIn(List<String> values) {
            addCriterion("project_name not in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameBetween(String value1, String value2) {
            addCriterion("project_name between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotBetween(String value1, String value2) {
            addCriterion("project_name not between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andPostCodeIsNull() {
            addCriterion("post_code is null");
            return (Criteria) this;
        }

        public Criteria andPostCodeIsNotNull() {
            addCriterion("post_code is not null");
            return (Criteria) this;
        }

        public Criteria andPostCodeEqualTo(String value) {
            addCriterion("post_code =", value, "postCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPostCodeEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("post_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPostCodeNotEqualTo(String value) {
            addCriterion("post_code <>", value, "postCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPostCodeNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("post_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPostCodeGreaterThan(String value) {
            addCriterion("post_code >", value, "postCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPostCodeGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("post_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPostCodeGreaterThanOrEqualTo(String value) {
            addCriterion("post_code >=", value, "postCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPostCodeGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("post_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPostCodeLessThan(String value) {
            addCriterion("post_code <", value, "postCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPostCodeLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("post_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPostCodeLessThanOrEqualTo(String value) {
            addCriterion("post_code <=", value, "postCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andPostCodeLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("post_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPostCodeLike(String value) {
            addCriterion("post_code like", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeNotLike(String value) {
            addCriterion("post_code not like", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeIn(List<String> values) {
            addCriterion("post_code in", values, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeNotIn(List<String> values) {
            addCriterion("post_code not in", values, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeBetween(String value1, String value2) {
            addCriterion("post_code between", value1, value2, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeNotBetween(String value1, String value2) {
            addCriterion("post_code not between", value1, value2, "postCode");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyLandinfo.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        private TCpyLandinfoExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        protected Criteria(TCpyLandinfoExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public TCpyLandinfoExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_landinfo
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_landinfo
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_landinfo
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyLandinfoExample example);
    }
}