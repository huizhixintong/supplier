package com.huizhi.supplier.db.model;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyImportExportExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public TCpyImportExportExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public TCpyImportExportExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public TCpyImportExportExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyImportExportExample example = new TCpyImportExportExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public TCpyImportExportExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public TCpyImportExportExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationIsNull() {
            addCriterion("management_identification is null");
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationIsNotNull() {
            addCriterion("management_identification is not null");
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationEqualTo(String value) {
            addCriterion("management_identification =", value, "managementIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andManagementIdentificationEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("management_identification = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationNotEqualTo(String value) {
            addCriterion("management_identification <>", value, "managementIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andManagementIdentificationNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("management_identification <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationGreaterThan(String value) {
            addCriterion("management_identification >", value, "managementIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andManagementIdentificationGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("management_identification > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationGreaterThanOrEqualTo(String value) {
            addCriterion("management_identification >=", value, "managementIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andManagementIdentificationGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("management_identification >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationLessThan(String value) {
            addCriterion("management_identification <", value, "managementIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andManagementIdentificationLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("management_identification < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationLessThanOrEqualTo(String value) {
            addCriterion("management_identification <=", value, "managementIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andManagementIdentificationLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("management_identification <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationLike(String value) {
            addCriterion("management_identification like", value, "managementIdentification");
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationNotLike(String value) {
            addCriterion("management_identification not like", value, "managementIdentification");
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationIn(List<String> values) {
            addCriterion("management_identification in", values, "managementIdentification");
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationNotIn(List<String> values) {
            addCriterion("management_identification not in", values, "managementIdentification");
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationBetween(String value1, String value2) {
            addCriterion("management_identification between", value1, value2, "managementIdentification");
            return (Criteria) this;
        }

        public Criteria andManagementIdentificationNotBetween(String value1, String value2) {
            addCriterion("management_identification not between", value1, value2, "managementIdentification");
            return (Criteria) this;
        }

        public Criteria andCompanyCodeIsNull() {
            addCriterion("company_code is null");
            return (Criteria) this;
        }

        public Criteria andCompanyCodeIsNotNull() {
            addCriterion("company_code is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyCodeEqualTo(String value) {
            addCriterion("company_code =", value, "companyCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyCodeEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyCodeNotEqualTo(String value) {
            addCriterion("company_code <>", value, "companyCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyCodeNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyCodeGreaterThan(String value) {
            addCriterion("company_code >", value, "companyCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyCodeGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyCodeGreaterThanOrEqualTo(String value) {
            addCriterion("company_code >=", value, "companyCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyCodeGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyCodeLessThan(String value) {
            addCriterion("company_code <", value, "companyCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyCodeLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyCodeLessThanOrEqualTo(String value) {
            addCriterion("company_code <=", value, "companyCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCompanyCodeLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("company_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyCodeLike(String value) {
            addCriterion("company_code like", value, "companyCode");
            return (Criteria) this;
        }

        public Criteria andCompanyCodeNotLike(String value) {
            addCriterion("company_code not like", value, "companyCode");
            return (Criteria) this;
        }

        public Criteria andCompanyCodeIn(List<String> values) {
            addCriterion("company_code in", values, "companyCode");
            return (Criteria) this;
        }

        public Criteria andCompanyCodeNotIn(List<String> values) {
            addCriterion("company_code not in", values, "companyCode");
            return (Criteria) this;
        }

        public Criteria andCompanyCodeBetween(String value1, String value2) {
            addCriterion("company_code between", value1, value2, "companyCode");
            return (Criteria) this;
        }

        public Criteria andCompanyCodeNotBetween(String value1, String value2) {
            addCriterion("company_code not between", value1, value2, "companyCode");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateIsNull() {
            addCriterion("credentials_certificate_date is null");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateIsNotNull() {
            addCriterion("credentials_certificate_date is not null");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateEqualTo(LocalDate value) {
            addCriterion("credentials_certificate_date =", value, "credentialsCertificateDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateDateEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateNotEqualTo(LocalDate value) {
            addCriterion("credentials_certificate_date <>", value, "credentialsCertificateDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateDateNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateGreaterThan(LocalDate value) {
            addCriterion("credentials_certificate_date >", value, "credentialsCertificateDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateDateGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("credentials_certificate_date >=", value, "credentialsCertificateDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateDateGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateLessThan(LocalDate value) {
            addCriterion("credentials_certificate_date <", value, "credentialsCertificateDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateDateLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("credentials_certificate_date <=", value, "credentialsCertificateDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateDateLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateIn(List<LocalDate> values) {
            addCriterion("credentials_certificate_date in", values, "credentialsCertificateDate");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateNotIn(List<LocalDate> values) {
            addCriterion("credentials_certificate_date not in", values, "credentialsCertificateDate");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("credentials_certificate_date between", value1, value2, "credentialsCertificateDate");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("credentials_certificate_date not between", value1, value2, "credentialsCertificateDate");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganIsNull() {
            addCriterion("credentials_certificate_organ is null");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganIsNotNull() {
            addCriterion("credentials_certificate_organ is not null");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganEqualTo(String value) {
            addCriterion("credentials_certificate_organ =", value, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateOrganEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_organ = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganNotEqualTo(String value) {
            addCriterion("credentials_certificate_organ <>", value, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateOrganNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_organ <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganGreaterThan(String value) {
            addCriterion("credentials_certificate_organ >", value, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateOrganGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_organ > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganGreaterThanOrEqualTo(String value) {
            addCriterion("credentials_certificate_organ >=", value, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateOrganGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_organ >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganLessThan(String value) {
            addCriterion("credentials_certificate_organ <", value, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateOrganLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_organ < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganLessThanOrEqualTo(String value) {
            addCriterion("credentials_certificate_organ <=", value, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsCertificateOrganLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_certificate_organ <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganLike(String value) {
            addCriterion("credentials_certificate_organ like", value, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganNotLike(String value) {
            addCriterion("credentials_certificate_organ not like", value, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganIn(List<String> values) {
            addCriterion("credentials_certificate_organ in", values, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganNotIn(List<String> values) {
            addCriterion("credentials_certificate_organ not in", values, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganBetween(String value1, String value2) {
            addCriterion("credentials_certificate_organ between", value1, value2, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        public Criteria andCredentialsCertificateOrganNotBetween(String value1, String value2) {
            addCriterion("credentials_certificate_organ not between", value1, value2, "credentialsCertificateOrgan");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateIsNull() {
            addCriterion("credentials_new_annual_audit_date is null");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateIsNotNull() {
            addCriterion("credentials_new_annual_audit_date is not null");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateEqualTo(LocalDate value) {
            addCriterion("credentials_new_annual_audit_date =", value, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditDateEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateNotEqualTo(LocalDate value) {
            addCriterion("credentials_new_annual_audit_date <>", value, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditDateNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateGreaterThan(LocalDate value) {
            addCriterion("credentials_new_annual_audit_date >", value, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditDateGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("credentials_new_annual_audit_date >=", value, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditDateGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateLessThan(LocalDate value) {
            addCriterion("credentials_new_annual_audit_date <", value, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditDateLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("credentials_new_annual_audit_date <=", value, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditDateLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateIn(List<LocalDate> values) {
            addCriterion("credentials_new_annual_audit_date in", values, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateNotIn(List<LocalDate> values) {
            addCriterion("credentials_new_annual_audit_date not in", values, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("credentials_new_annual_audit_date between", value1, value2, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("credentials_new_annual_audit_date not between", value1, value2, "credentialsNewAnnualAuditDate");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsIsNull() {
            addCriterion("credentials_new_annual_audit_results is null");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsIsNotNull() {
            addCriterion("credentials_new_annual_audit_results is not null");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsEqualTo(String value) {
            addCriterion("credentials_new_annual_audit_results =", value, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditResultsEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_results = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsNotEqualTo(String value) {
            addCriterion("credentials_new_annual_audit_results <>", value, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditResultsNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_results <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsGreaterThan(String value) {
            addCriterion("credentials_new_annual_audit_results >", value, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditResultsGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_results > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsGreaterThanOrEqualTo(String value) {
            addCriterion("credentials_new_annual_audit_results >=", value, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditResultsGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_results >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsLessThan(String value) {
            addCriterion("credentials_new_annual_audit_results <", value, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditResultsLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_results < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsLessThanOrEqualTo(String value) {
            addCriterion("credentials_new_annual_audit_results <=", value, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCredentialsNewAnnualAuditResultsLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("credentials_new_annual_audit_results <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsLike(String value) {
            addCriterion("credentials_new_annual_audit_results like", value, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsNotLike(String value) {
            addCriterion("credentials_new_annual_audit_results not like", value, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsIn(List<String> values) {
            addCriterion("credentials_new_annual_audit_results in", values, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsNotIn(List<String> values) {
            addCriterion("credentials_new_annual_audit_results not in", values, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsBetween(String value1, String value2) {
            addCriterion("credentials_new_annual_audit_results between", value1, value2, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        public Criteria andCredentialsNewAnnualAuditResultsNotBetween(String value1, String value2) {
            addCriterion("credentials_new_annual_audit_results not between", value1, value2, "credentialsNewAnnualAuditResults");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationIsNull() {
            addCriterion("customs_registration is null");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationIsNotNull() {
            addCriterion("customs_registration is not null");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationEqualTo(String value) {
            addCriterion("customs_registration =", value, "customsRegistration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNotEqualTo(String value) {
            addCriterion("customs_registration <>", value, "customsRegistration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationGreaterThan(String value) {
            addCriterion("customs_registration >", value, "customsRegistration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationGreaterThanOrEqualTo(String value) {
            addCriterion("customs_registration >=", value, "customsRegistration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationLessThan(String value) {
            addCriterion("customs_registration <", value, "customsRegistration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationLessThanOrEqualTo(String value) {
            addCriterion("customs_registration <=", value, "customsRegistration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationLike(String value) {
            addCriterion("customs_registration like", value, "customsRegistration");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNotLike(String value) {
            addCriterion("customs_registration not like", value, "customsRegistration");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationIn(List<String> values) {
            addCriterion("customs_registration in", values, "customsRegistration");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNotIn(List<String> values) {
            addCriterion("customs_registration not in", values, "customsRegistration");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationBetween(String value1, String value2) {
            addCriterion("customs_registration between", value1, value2, "customsRegistration");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNotBetween(String value1, String value2) {
            addCriterion("customs_registration not between", value1, value2, "customsRegistration");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberIsNull() {
            addCriterion("customs_registration_number is null");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberIsNotNull() {
            addCriterion("customs_registration_number is not null");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberEqualTo(String value) {
            addCriterion("customs_registration_number =", value, "customsRegistrationNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationNumberEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberNotEqualTo(String value) {
            addCriterion("customs_registration_number <>", value, "customsRegistrationNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationNumberNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberGreaterThan(String value) {
            addCriterion("customs_registration_number >", value, "customsRegistrationNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationNumberGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberGreaterThanOrEqualTo(String value) {
            addCriterion("customs_registration_number >=", value, "customsRegistrationNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationNumberGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberLessThan(String value) {
            addCriterion("customs_registration_number <", value, "customsRegistrationNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationNumberLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberLessThanOrEqualTo(String value) {
            addCriterion("customs_registration_number <=", value, "customsRegistrationNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationNumberLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberLike(String value) {
            addCriterion("customs_registration_number like", value, "customsRegistrationNumber");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberNotLike(String value) {
            addCriterion("customs_registration_number not like", value, "customsRegistrationNumber");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberIn(List<String> values) {
            addCriterion("customs_registration_number in", values, "customsRegistrationNumber");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberNotIn(List<String> values) {
            addCriterion("customs_registration_number not in", values, "customsRegistrationNumber");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberBetween(String value1, String value2) {
            addCriterion("customs_registration_number between", value1, value2, "customsRegistrationNumber");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationNumberNotBetween(String value1, String value2) {
            addCriterion("customs_registration_number not between", value1, value2, "customsRegistrationNumber");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateIsNull() {
            addCriterion("customs_registration_date is null");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateIsNotNull() {
            addCriterion("customs_registration_date is not null");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateEqualTo(LocalDate value) {
            addCriterion("customs_registration_date =", value, "customsRegistrationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationDateEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateNotEqualTo(LocalDate value) {
            addCriterion("customs_registration_date <>", value, "customsRegistrationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationDateNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateGreaterThan(LocalDate value) {
            addCriterion("customs_registration_date >", value, "customsRegistrationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationDateGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("customs_registration_date >=", value, "customsRegistrationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationDateGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateLessThan(LocalDate value) {
            addCriterion("customs_registration_date <", value, "customsRegistrationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationDateLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("customs_registration_date <=", value, "customsRegistrationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationDateLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateIn(List<LocalDate> values) {
            addCriterion("customs_registration_date in", values, "customsRegistrationDate");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateNotIn(List<LocalDate> values) {
            addCriterion("customs_registration_date not in", values, "customsRegistrationDate");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("customs_registration_date between", value1, value2, "customsRegistrationDate");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("customs_registration_date not between", value1, value2, "customsRegistrationDate");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganIsNull() {
            addCriterion("customs_registration_organ is null");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganIsNotNull() {
            addCriterion("customs_registration_organ is not null");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganEqualTo(String value) {
            addCriterion("customs_registration_organ =", value, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationOrganEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_organ = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganNotEqualTo(String value) {
            addCriterion("customs_registration_organ <>", value, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationOrganNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_organ <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganGreaterThan(String value) {
            addCriterion("customs_registration_organ >", value, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationOrganGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_organ > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganGreaterThanOrEqualTo(String value) {
            addCriterion("customs_registration_organ >=", value, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationOrganGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_organ >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganLessThan(String value) {
            addCriterion("customs_registration_organ <", value, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationOrganLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_organ < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganLessThanOrEqualTo(String value) {
            addCriterion("customs_registration_organ <=", value, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCustomsRegistrationOrganLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("customs_registration_organ <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganLike(String value) {
            addCriterion("customs_registration_organ like", value, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganNotLike(String value) {
            addCriterion("customs_registration_organ not like", value, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganIn(List<String> values) {
            addCriterion("customs_registration_organ in", values, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganNotIn(List<String> values) {
            addCriterion("customs_registration_organ not in", values, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganBetween(String value1, String value2) {
            addCriterion("customs_registration_organ between", value1, value2, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        public Criteria andCustomsRegistrationOrganNotBetween(String value1, String value2) {
            addCriterion("customs_registration_organ not between", value1, value2, "customsRegistrationOrgan");
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateIsNull() {
            addCriterion("certificate_validity_end_date is null");
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateIsNotNull() {
            addCriterion("certificate_validity_end_date is not null");
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateEqualTo(LocalDate value) {
            addCriterion("certificate_validity_end_date =", value, "certificateValidityEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateValidityEndDateEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_validity_end_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateNotEqualTo(LocalDate value) {
            addCriterion("certificate_validity_end_date <>", value, "certificateValidityEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateValidityEndDateNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_validity_end_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateGreaterThan(LocalDate value) {
            addCriterion("certificate_validity_end_date >", value, "certificateValidityEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateValidityEndDateGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_validity_end_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("certificate_validity_end_date >=", value, "certificateValidityEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateValidityEndDateGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_validity_end_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateLessThan(LocalDate value) {
            addCriterion("certificate_validity_end_date <", value, "certificateValidityEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateValidityEndDateLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_validity_end_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("certificate_validity_end_date <=", value, "certificateValidityEndDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateValidityEndDateLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_validity_end_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateIn(List<LocalDate> values) {
            addCriterion("certificate_validity_end_date in", values, "certificateValidityEndDate");
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateNotIn(List<LocalDate> values) {
            addCriterion("certificate_validity_end_date not in", values, "certificateValidityEndDate");
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("certificate_validity_end_date between", value1, value2, "certificateValidityEndDate");
            return (Criteria) this;
        }

        public Criteria andCertificateValidityEndDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("certificate_validity_end_date not between", value1, value2, "certificateValidityEndDate");
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateIsNull() {
            addCriterion("certificate_renewal_date is null");
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateIsNotNull() {
            addCriterion("certificate_renewal_date is not null");
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateEqualTo(LocalDate value) {
            addCriterion("certificate_renewal_date =", value, "certificateRenewalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateRenewalDateEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_renewal_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateNotEqualTo(LocalDate value) {
            addCriterion("certificate_renewal_date <>", value, "certificateRenewalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateRenewalDateNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_renewal_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateGreaterThan(LocalDate value) {
            addCriterion("certificate_renewal_date >", value, "certificateRenewalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateRenewalDateGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_renewal_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("certificate_renewal_date >=", value, "certificateRenewalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateRenewalDateGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_renewal_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateLessThan(LocalDate value) {
            addCriterion("certificate_renewal_date <", value, "certificateRenewalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateRenewalDateLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_renewal_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("certificate_renewal_date <=", value, "certificateRenewalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCertificateRenewalDateLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("certificate_renewal_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateIn(List<LocalDate> values) {
            addCriterion("certificate_renewal_date in", values, "certificateRenewalDate");
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateNotIn(List<LocalDate> values) {
            addCriterion("certificate_renewal_date not in", values, "certificateRenewalDate");
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("certificate_renewal_date between", value1, value2, "certificateRenewalDate");
            return (Criteria) this;
        }

        public Criteria andCertificateRenewalDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("certificate_renewal_date not between", value1, value2, "certificateRenewalDate");
            return (Criteria) this;
        }

        public Criteria andImportProductNameIsNull() {
            addCriterion("import_product_name is null");
            return (Criteria) this;
        }

        public Criteria andImportProductNameIsNotNull() {
            addCriterion("import_product_name is not null");
            return (Criteria) this;
        }

        public Criteria andImportProductNameEqualTo(String value) {
            addCriterion("import_product_name =", value, "importProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportProductNameEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_product_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportProductNameNotEqualTo(String value) {
            addCriterion("import_product_name <>", value, "importProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportProductNameNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_product_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportProductNameGreaterThan(String value) {
            addCriterion("import_product_name >", value, "importProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportProductNameGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_product_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportProductNameGreaterThanOrEqualTo(String value) {
            addCriterion("import_product_name >=", value, "importProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportProductNameGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_product_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportProductNameLessThan(String value) {
            addCriterion("import_product_name <", value, "importProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportProductNameLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_product_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportProductNameLessThanOrEqualTo(String value) {
            addCriterion("import_product_name <=", value, "importProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportProductNameLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_product_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportProductNameLike(String value) {
            addCriterion("import_product_name like", value, "importProductName");
            return (Criteria) this;
        }

        public Criteria andImportProductNameNotLike(String value) {
            addCriterion("import_product_name not like", value, "importProductName");
            return (Criteria) this;
        }

        public Criteria andImportProductNameIn(List<String> values) {
            addCriterion("import_product_name in", values, "importProductName");
            return (Criteria) this;
        }

        public Criteria andImportProductNameNotIn(List<String> values) {
            addCriterion("import_product_name not in", values, "importProductName");
            return (Criteria) this;
        }

        public Criteria andImportProductNameBetween(String value1, String value2) {
            addCriterion("import_product_name between", value1, value2, "importProductName");
            return (Criteria) this;
        }

        public Criteria andImportProductNameNotBetween(String value1, String value2) {
            addCriterion("import_product_name not between", value1, value2, "importProductName");
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionIsNull() {
            addCriterion("import_countries_region is null");
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionIsNotNull() {
            addCriterion("import_countries_region is not null");
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionEqualTo(String value) {
            addCriterion("import_countries_region =", value, "importCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportCountriesRegionEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_countries_region = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionNotEqualTo(String value) {
            addCriterion("import_countries_region <>", value, "importCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportCountriesRegionNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_countries_region <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionGreaterThan(String value) {
            addCriterion("import_countries_region >", value, "importCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportCountriesRegionGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_countries_region > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionGreaterThanOrEqualTo(String value) {
            addCriterion("import_countries_region >=", value, "importCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportCountriesRegionGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_countries_region >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionLessThan(String value) {
            addCriterion("import_countries_region <", value, "importCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportCountriesRegionLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_countries_region < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionLessThanOrEqualTo(String value) {
            addCriterion("import_countries_region <=", value, "importCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andImportCountriesRegionLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("import_countries_region <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionLike(String value) {
            addCriterion("import_countries_region like", value, "importCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionNotLike(String value) {
            addCriterion("import_countries_region not like", value, "importCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionIn(List<String> values) {
            addCriterion("import_countries_region in", values, "importCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionNotIn(List<String> values) {
            addCriterion("import_countries_region not in", values, "importCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionBetween(String value1, String value2) {
            addCriterion("import_countries_region between", value1, value2, "importCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andImportCountriesRegionNotBetween(String value1, String value2) {
            addCriterion("import_countries_region not between", value1, value2, "importCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andExportProductNameIsNull() {
            addCriterion("export_product_name is null");
            return (Criteria) this;
        }

        public Criteria andExportProductNameIsNotNull() {
            addCriterion("export_product_name is not null");
            return (Criteria) this;
        }

        public Criteria andExportProductNameEqualTo(String value) {
            addCriterion("export_product_name =", value, "exportProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportProductNameEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_product_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportProductNameNotEqualTo(String value) {
            addCriterion("export_product_name <>", value, "exportProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportProductNameNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_product_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportProductNameGreaterThan(String value) {
            addCriterion("export_product_name >", value, "exportProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportProductNameGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_product_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportProductNameGreaterThanOrEqualTo(String value) {
            addCriterion("export_product_name >=", value, "exportProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportProductNameGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_product_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportProductNameLessThan(String value) {
            addCriterion("export_product_name <", value, "exportProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportProductNameLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_product_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportProductNameLessThanOrEqualTo(String value) {
            addCriterion("export_product_name <=", value, "exportProductName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportProductNameLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_product_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportProductNameLike(String value) {
            addCriterion("export_product_name like", value, "exportProductName");
            return (Criteria) this;
        }

        public Criteria andExportProductNameNotLike(String value) {
            addCriterion("export_product_name not like", value, "exportProductName");
            return (Criteria) this;
        }

        public Criteria andExportProductNameIn(List<String> values) {
            addCriterion("export_product_name in", values, "exportProductName");
            return (Criteria) this;
        }

        public Criteria andExportProductNameNotIn(List<String> values) {
            addCriterion("export_product_name not in", values, "exportProductName");
            return (Criteria) this;
        }

        public Criteria andExportProductNameBetween(String value1, String value2) {
            addCriterion("export_product_name between", value1, value2, "exportProductName");
            return (Criteria) this;
        }

        public Criteria andExportProductNameNotBetween(String value1, String value2) {
            addCriterion("export_product_name not between", value1, value2, "exportProductName");
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionIsNull() {
            addCriterion("export_countries_region is null");
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionIsNotNull() {
            addCriterion("export_countries_region is not null");
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionEqualTo(String value) {
            addCriterion("export_countries_region =", value, "exportCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportCountriesRegionEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_countries_region = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionNotEqualTo(String value) {
            addCriterion("export_countries_region <>", value, "exportCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportCountriesRegionNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_countries_region <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionGreaterThan(String value) {
            addCriterion("export_countries_region >", value, "exportCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportCountriesRegionGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_countries_region > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionGreaterThanOrEqualTo(String value) {
            addCriterion("export_countries_region >=", value, "exportCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportCountriesRegionGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_countries_region >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionLessThan(String value) {
            addCriterion("export_countries_region <", value, "exportCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportCountriesRegionLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_countries_region < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionLessThanOrEqualTo(String value) {
            addCriterion("export_countries_region <=", value, "exportCountriesRegion");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andExportCountriesRegionLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("export_countries_region <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionLike(String value) {
            addCriterion("export_countries_region like", value, "exportCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionNotLike(String value) {
            addCriterion("export_countries_region not like", value, "exportCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionIn(List<String> values) {
            addCriterion("export_countries_region in", values, "exportCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionNotIn(List<String> values) {
            addCriterion("export_countries_region not in", values, "exportCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionBetween(String value1, String value2) {
            addCriterion("export_countries_region between", value1, value2, "exportCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andExportCountriesRegionNotBetween(String value1, String value2) {
            addCriterion("export_countries_region not between", value1, value2, "exportCountriesRegion");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyImportExport.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        private TCpyImportExportExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        protected Criteria(TCpyImportExportExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public TCpyImportExportExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_import_export
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_import_export
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_import_export
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyImportExportExample example);
    }
}