package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyPermanentInvestmentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public TCpyPermanentInvestmentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public TCpyPermanentInvestmentExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public TCpyPermanentInvestmentExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyPermanentInvestmentExample example = new TCpyPermanentInvestmentExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public TCpyPermanentInvestmentExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public TCpyPermanentInvestmentExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Integer value1, Integer value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentIsNull() {
            addCriterion("amount_equity_investment is null");
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentIsNotNull() {
            addCriterion("amount_equity_investment is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentEqualTo(BigDecimal value) {
            addCriterion("amount_equity_investment =", value, "amountEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountEquityInvestmentEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_equity_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("amount_equity_investment <>", value, "amountEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountEquityInvestmentNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_equity_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentGreaterThan(BigDecimal value) {
            addCriterion("amount_equity_investment >", value, "amountEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountEquityInvestmentGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_equity_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("amount_equity_investment >=", value, "amountEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountEquityInvestmentGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_equity_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentLessThan(BigDecimal value) {
            addCriterion("amount_equity_investment <", value, "amountEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountEquityInvestmentLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_equity_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("amount_equity_investment <=", value, "amountEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountEquityInvestmentLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_equity_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentIn(List<BigDecimal> values) {
            addCriterion("amount_equity_investment in", values, "amountEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("amount_equity_investment not in", values, "amountEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount_equity_investment between", value1, value2, "amountEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andAmountEquityInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount_equity_investment not between", value1, value2, "amountEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentIsNull() {
            addCriterion("amount_debt_investment is null");
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentIsNotNull() {
            addCriterion("amount_debt_investment is not null");
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentEqualTo(BigDecimal value) {
            addCriterion("amount_debt_investment =", value, "amountDebtInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountDebtInvestmentEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_debt_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("amount_debt_investment <>", value, "amountDebtInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountDebtInvestmentNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_debt_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentGreaterThan(BigDecimal value) {
            addCriterion("amount_debt_investment >", value, "amountDebtInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountDebtInvestmentGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_debt_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("amount_debt_investment >=", value, "amountDebtInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountDebtInvestmentGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_debt_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentLessThan(BigDecimal value) {
            addCriterion("amount_debt_investment <", value, "amountDebtInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountDebtInvestmentLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_debt_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("amount_debt_investment <=", value, "amountDebtInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andAmountDebtInvestmentLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("amount_debt_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentIn(List<BigDecimal> values) {
            addCriterion("amount_debt_investment in", values, "amountDebtInvestment");
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("amount_debt_investment not in", values, "amountDebtInvestment");
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount_debt_investment between", value1, value2, "amountDebtInvestment");
            return (Criteria) this;
        }

        public Criteria andAmountDebtInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount_debt_investment not between", value1, value2, "amountDebtInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountIsNull() {
            addCriterion("other_investment_amount is null");
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountIsNotNull() {
            addCriterion("other_investment_amount is not null");
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountEqualTo(BigDecimal value) {
            addCriterion("other_investment_amount =", value, "otherInvestmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherInvestmentAmountEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_investment_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountNotEqualTo(BigDecimal value) {
            addCriterion("other_investment_amount <>", value, "otherInvestmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherInvestmentAmountNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_investment_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountGreaterThan(BigDecimal value) {
            addCriterion("other_investment_amount >", value, "otherInvestmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherInvestmentAmountGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_investment_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_investment_amount >=", value, "otherInvestmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherInvestmentAmountGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_investment_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountLessThan(BigDecimal value) {
            addCriterion("other_investment_amount <", value, "otherInvestmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherInvestmentAmountLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_investment_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_investment_amount <=", value, "otherInvestmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherInvestmentAmountLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_investment_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountIn(List<BigDecimal> values) {
            addCriterion("other_investment_amount in", values, "otherInvestmentAmount");
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountNotIn(List<BigDecimal> values) {
            addCriterion("other_investment_amount not in", values, "otherInvestmentAmount");
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_investment_amount between", value1, value2, "otherInvestmentAmount");
            return (Criteria) this;
        }

        public Criteria andOtherInvestmentAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_investment_amount not between", value1, value2, "otherInvestmentAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentIsNull() {
            addCriterion("capital_equity_investment is null");
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentIsNotNull() {
            addCriterion("capital_equity_investment is not null");
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentEqualTo(BigDecimal value) {
            addCriterion("capital_equity_investment =", value, "capitalEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCapitalEquityInvestmentEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("capital_equity_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("capital_equity_investment <>", value, "capitalEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCapitalEquityInvestmentNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("capital_equity_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentGreaterThan(BigDecimal value) {
            addCriterion("capital_equity_investment >", value, "capitalEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCapitalEquityInvestmentGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("capital_equity_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("capital_equity_investment >=", value, "capitalEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCapitalEquityInvestmentGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("capital_equity_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentLessThan(BigDecimal value) {
            addCriterion("capital_equity_investment <", value, "capitalEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCapitalEquityInvestmentLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("capital_equity_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("capital_equity_investment <=", value, "capitalEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCapitalEquityInvestmentLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("capital_equity_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentIn(List<BigDecimal> values) {
            addCriterion("capital_equity_investment in", values, "capitalEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("capital_equity_investment not in", values, "capitalEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("capital_equity_investment between", value1, value2, "capitalEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andCapitalEquityInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("capital_equity_investment not between", value1, value2, "capitalEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalIsNull() {
            addCriterion("debt_investment_capital is null");
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalIsNotNull() {
            addCriterion("debt_investment_capital is not null");
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalEqualTo(BigDecimal value) {
            addCriterion("debt_investment_capital =", value, "debtInvestmentCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDebtInvestmentCapitalEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("debt_investment_capital = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalNotEqualTo(BigDecimal value) {
            addCriterion("debt_investment_capital <>", value, "debtInvestmentCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDebtInvestmentCapitalNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("debt_investment_capital <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalGreaterThan(BigDecimal value) {
            addCriterion("debt_investment_capital >", value, "debtInvestmentCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDebtInvestmentCapitalGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("debt_investment_capital > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("debt_investment_capital >=", value, "debtInvestmentCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDebtInvestmentCapitalGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("debt_investment_capital >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalLessThan(BigDecimal value) {
            addCriterion("debt_investment_capital <", value, "debtInvestmentCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDebtInvestmentCapitalLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("debt_investment_capital < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("debt_investment_capital <=", value, "debtInvestmentCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDebtInvestmentCapitalLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("debt_investment_capital <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalIn(List<BigDecimal> values) {
            addCriterion("debt_investment_capital in", values, "debtInvestmentCapital");
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalNotIn(List<BigDecimal> values) {
            addCriterion("debt_investment_capital not in", values, "debtInvestmentCapital");
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("debt_investment_capital between", value1, value2, "debtInvestmentCapital");
            return (Criteria) this;
        }

        public Criteria andDebtInvestmentCapitalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("debt_investment_capital not between", value1, value2, "debtInvestmentCapital");
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentIsNull() {
            addCriterion("other_capital_investment is null");
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentIsNotNull() {
            addCriterion("other_capital_investment is not null");
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentEqualTo(BigDecimal value) {
            addCriterion("other_capital_investment =", value, "otherCapitalInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherCapitalInvestmentEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_capital_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("other_capital_investment <>", value, "otherCapitalInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherCapitalInvestmentNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_capital_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentGreaterThan(BigDecimal value) {
            addCriterion("other_capital_investment >", value, "otherCapitalInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherCapitalInvestmentGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_capital_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_capital_investment >=", value, "otherCapitalInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherCapitalInvestmentGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_capital_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentLessThan(BigDecimal value) {
            addCriterion("other_capital_investment <", value, "otherCapitalInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherCapitalInvestmentLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_capital_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_capital_investment <=", value, "otherCapitalInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andOtherCapitalInvestmentLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("other_capital_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentIn(List<BigDecimal> values) {
            addCriterion("other_capital_investment in", values, "otherCapitalInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("other_capital_investment not in", values, "otherCapitalInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_capital_investment between", value1, value2, "otherCapitalInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherCapitalInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_capital_investment not between", value1, value2, "otherCapitalInvestment");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("`year` is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("`year` is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(String value) {
            addCriterion("`year` =", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andYearEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("`year` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(String value) {
            addCriterion("`year` <>", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andYearNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("`year` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(String value) {
            addCriterion("`year` >", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("`year` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(String value) {
            addCriterion("`year` >=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("`year` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThan(String value) {
            addCriterion("`year` <", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("`year` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(String value) {
            addCriterion("`year` <=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("`year` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLike(String value) {
            addCriterion("`year` like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotLike(String value) {
            addCriterion("`year` not like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<String> values) {
            addCriterion("`year` in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<String> values) {
            addCriterion("`year` not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(String value1, String value2) {
            addCriterion("`year` between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(String value1, String value2) {
            addCriterion("`year` not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyPermanentInvestment.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        private TCpyPermanentInvestmentExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        protected Criteria(TCpyPermanentInvestmentExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public TCpyPermanentInvestmentExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_permanent_investment
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_permanent_investment
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_permanent_investment
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyPermanentInvestmentExample example);
    }
}