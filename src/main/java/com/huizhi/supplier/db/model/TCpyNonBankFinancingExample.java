package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyNonBankFinancingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public TCpyNonBankFinancingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public TCpyNonBankFinancingExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public TCpyNonBankFinancingExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyNonBankFinancingExample example = new TCpyNonBankFinancingExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public TCpyNonBankFinancingExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public TCpyNonBankFinancingExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andFinancingWayIsNull() {
            addCriterion("financing_way is null");
            return (Criteria) this;
        }

        public Criteria andFinancingWayIsNotNull() {
            addCriterion("financing_way is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingWayEqualTo(String value) {
            addCriterion("financing_way =", value, "financingWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingWayEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_way = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingWayNotEqualTo(String value) {
            addCriterion("financing_way <>", value, "financingWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingWayNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_way <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingWayGreaterThan(String value) {
            addCriterion("financing_way >", value, "financingWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingWayGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_way > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingWayGreaterThanOrEqualTo(String value) {
            addCriterion("financing_way >=", value, "financingWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingWayGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_way >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingWayLessThan(String value) {
            addCriterion("financing_way <", value, "financingWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingWayLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_way < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingWayLessThanOrEqualTo(String value) {
            addCriterion("financing_way <=", value, "financingWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingWayLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_way <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingWayLike(String value) {
            addCriterion("financing_way like", value, "financingWay");
            return (Criteria) this;
        }

        public Criteria andFinancingWayNotLike(String value) {
            addCriterion("financing_way not like", value, "financingWay");
            return (Criteria) this;
        }

        public Criteria andFinancingWayIn(List<String> values) {
            addCriterion("financing_way in", values, "financingWay");
            return (Criteria) this;
        }

        public Criteria andFinancingWayNotIn(List<String> values) {
            addCriterion("financing_way not in", values, "financingWay");
            return (Criteria) this;
        }

        public Criteria andFinancingWayBetween(String value1, String value2) {
            addCriterion("financing_way between", value1, value2, "financingWay");
            return (Criteria) this;
        }

        public Criteria andFinancingWayNotBetween(String value1, String value2) {
            addCriterion("financing_way not between", value1, value2, "financingWay");
            return (Criteria) this;
        }

        public Criteria andFinancingGistIsNull() {
            addCriterion("financing_gist is null");
            return (Criteria) this;
        }

        public Criteria andFinancingGistIsNotNull() {
            addCriterion("financing_gist is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingGistEqualTo(String value) {
            addCriterion("financing_gist =", value, "financingGist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingGistEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_gist = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingGistNotEqualTo(String value) {
            addCriterion("financing_gist <>", value, "financingGist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingGistNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_gist <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingGistGreaterThan(String value) {
            addCriterion("financing_gist >", value, "financingGist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingGistGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_gist > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingGistGreaterThanOrEqualTo(String value) {
            addCriterion("financing_gist >=", value, "financingGist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingGistGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_gist >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingGistLessThan(String value) {
            addCriterion("financing_gist <", value, "financingGist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingGistLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_gist < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingGistLessThanOrEqualTo(String value) {
            addCriterion("financing_gist <=", value, "financingGist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingGistLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_gist <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingGistLike(String value) {
            addCriterion("financing_gist like", value, "financingGist");
            return (Criteria) this;
        }

        public Criteria andFinancingGistNotLike(String value) {
            addCriterion("financing_gist not like", value, "financingGist");
            return (Criteria) this;
        }

        public Criteria andFinancingGistIn(List<String> values) {
            addCriterion("financing_gist in", values, "financingGist");
            return (Criteria) this;
        }

        public Criteria andFinancingGistNotIn(List<String> values) {
            addCriterion("financing_gist not in", values, "financingGist");
            return (Criteria) this;
        }

        public Criteria andFinancingGistBetween(String value1, String value2) {
            addCriterion("financing_gist between", value1, value2, "financingGist");
            return (Criteria) this;
        }

        public Criteria andFinancingGistNotBetween(String value1, String value2) {
            addCriterion("financing_gist not between", value1, value2, "financingGist");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeIsNull() {
            addCriterion("financing_purpose is null");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeIsNotNull() {
            addCriterion("financing_purpose is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeEqualTo(String value) {
            addCriterion("financing_purpose =", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_purpose = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeNotEqualTo(String value) {
            addCriterion("financing_purpose <>", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_purpose <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeGreaterThan(String value) {
            addCriterion("financing_purpose >", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_purpose > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeGreaterThanOrEqualTo(String value) {
            addCriterion("financing_purpose >=", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_purpose >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeLessThan(String value) {
            addCriterion("financing_purpose <", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_purpose < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeLessThanOrEqualTo(String value) {
            addCriterion("financing_purpose <=", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_purpose <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeLike(String value) {
            addCriterion("financing_purpose like", value, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeNotLike(String value) {
            addCriterion("financing_purpose not like", value, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeIn(List<String> values) {
            addCriterion("financing_purpose in", values, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeNotIn(List<String> values) {
            addCriterion("financing_purpose not in", values, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeBetween(String value1, String value2) {
            addCriterion("financing_purpose between", value1, value2, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeNotBetween(String value1, String value2) {
            addCriterion("financing_purpose not between", value1, value2, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingObjectIsNull() {
            addCriterion("financing_object is null");
            return (Criteria) this;
        }

        public Criteria andFinancingObjectIsNotNull() {
            addCriterion("financing_object is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingObjectEqualTo(String value) {
            addCriterion("financing_object =", value, "financingObject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingObjectEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_object = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingObjectNotEqualTo(String value) {
            addCriterion("financing_object <>", value, "financingObject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingObjectNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_object <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingObjectGreaterThan(String value) {
            addCriterion("financing_object >", value, "financingObject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingObjectGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_object > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingObjectGreaterThanOrEqualTo(String value) {
            addCriterion("financing_object >=", value, "financingObject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingObjectGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_object >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingObjectLessThan(String value) {
            addCriterion("financing_object <", value, "financingObject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingObjectLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_object < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingObjectLessThanOrEqualTo(String value) {
            addCriterion("financing_object <=", value, "financingObject");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingObjectLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_object <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingObjectLike(String value) {
            addCriterion("financing_object like", value, "financingObject");
            return (Criteria) this;
        }

        public Criteria andFinancingObjectNotLike(String value) {
            addCriterion("financing_object not like", value, "financingObject");
            return (Criteria) this;
        }

        public Criteria andFinancingObjectIn(List<String> values) {
            addCriterion("financing_object in", values, "financingObject");
            return (Criteria) this;
        }

        public Criteria andFinancingObjectNotIn(List<String> values) {
            addCriterion("financing_object not in", values, "financingObject");
            return (Criteria) this;
        }

        public Criteria andFinancingObjectBetween(String value1, String value2) {
            addCriterion("financing_object between", value1, value2, "financingObject");
            return (Criteria) this;
        }

        public Criteria andFinancingObjectNotBetween(String value1, String value2) {
            addCriterion("financing_object not between", value1, value2, "financingObject");
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyIsNull() {
            addCriterion("financing_money is null");
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyIsNotNull() {
            addCriterion("financing_money is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyEqualTo(BigDecimal value) {
            addCriterion("financing_money =", value, "financingMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingMoneyEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_money = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyNotEqualTo(BigDecimal value) {
            addCriterion("financing_money <>", value, "financingMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingMoneyNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_money <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyGreaterThan(BigDecimal value) {
            addCriterion("financing_money >", value, "financingMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingMoneyGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_money > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_money >=", value, "financingMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingMoneyGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_money >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyLessThan(BigDecimal value) {
            addCriterion("financing_money <", value, "financingMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingMoneyLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_money < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_money <=", value, "financingMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingMoneyLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_money <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyIn(List<BigDecimal> values) {
            addCriterion("financing_money in", values, "financingMoney");
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyNotIn(List<BigDecimal> values) {
            addCriterion("financing_money not in", values, "financingMoney");
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_money between", value1, value2, "financingMoney");
            return (Criteria) this;
        }

        public Criteria andFinancingMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_money not between", value1, value2, "financingMoney");
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineIsNull() {
            addCriterion("financing_deadline is null");
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineIsNotNull() {
            addCriterion("financing_deadline is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineEqualTo(String value) {
            addCriterion("financing_deadline =", value, "financingDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingDeadlineEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_deadline = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineNotEqualTo(String value) {
            addCriterion("financing_deadline <>", value, "financingDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingDeadlineNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_deadline <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineGreaterThan(String value) {
            addCriterion("financing_deadline >", value, "financingDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingDeadlineGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_deadline > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineGreaterThanOrEqualTo(String value) {
            addCriterion("financing_deadline >=", value, "financingDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingDeadlineGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_deadline >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineLessThan(String value) {
            addCriterion("financing_deadline <", value, "financingDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingDeadlineLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_deadline < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineLessThanOrEqualTo(String value) {
            addCriterion("financing_deadline <=", value, "financingDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingDeadlineLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_deadline <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineLike(String value) {
            addCriterion("financing_deadline like", value, "financingDeadline");
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineNotLike(String value) {
            addCriterion("financing_deadline not like", value, "financingDeadline");
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineIn(List<String> values) {
            addCriterion("financing_deadline in", values, "financingDeadline");
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineNotIn(List<String> values) {
            addCriterion("financing_deadline not in", values, "financingDeadline");
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineBetween(String value1, String value2) {
            addCriterion("financing_deadline between", value1, value2, "financingDeadline");
            return (Criteria) this;
        }

        public Criteria andFinancingDeadlineNotBetween(String value1, String value2) {
            addCriterion("financing_deadline not between", value1, value2, "financingDeadline");
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateIsNull() {
            addCriterion("financing_start_date is null");
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateIsNotNull() {
            addCriterion("financing_start_date is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateEqualTo(LocalDate value) {
            addCriterion("financing_start_date =", value, "financingStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartDateEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_start_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateNotEqualTo(LocalDate value) {
            addCriterion("financing_start_date <>", value, "financingStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartDateNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_start_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateGreaterThan(LocalDate value) {
            addCriterion("financing_start_date >", value, "financingStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartDateGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_start_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("financing_start_date >=", value, "financingStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartDateGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_start_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateLessThan(LocalDate value) {
            addCriterion("financing_start_date <", value, "financingStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartDateLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_start_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("financing_start_date <=", value, "financingStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartDateLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("financing_start_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateIn(List<LocalDate> values) {
            addCriterion("financing_start_date in", values, "financingStartDate");
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateNotIn(List<LocalDate> values) {
            addCriterion("financing_start_date not in", values, "financingStartDate");
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("financing_start_date between", value1, value2, "financingStartDate");
            return (Criteria) this;
        }

        public Criteria andFinancingStartDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("financing_start_date not between", value1, value2, "financingStartDate");
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesIsNull() {
            addCriterion("nonBank_financing_guarantees is null");
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesIsNotNull() {
            addCriterion("nonBank_financing_guarantees is not null");
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesEqualTo(String value) {
            addCriterion("nonBank_financing_guarantees =", value, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andNonbankFinancingGuaranteesEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("nonBank_financing_guarantees = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesNotEqualTo(String value) {
            addCriterion("nonBank_financing_guarantees <>", value, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andNonbankFinancingGuaranteesNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("nonBank_financing_guarantees <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesGreaterThan(String value) {
            addCriterion("nonBank_financing_guarantees >", value, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andNonbankFinancingGuaranteesGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("nonBank_financing_guarantees > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesGreaterThanOrEqualTo(String value) {
            addCriterion("nonBank_financing_guarantees >=", value, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andNonbankFinancingGuaranteesGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("nonBank_financing_guarantees >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesLessThan(String value) {
            addCriterion("nonBank_financing_guarantees <", value, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andNonbankFinancingGuaranteesLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("nonBank_financing_guarantees < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesLessThanOrEqualTo(String value) {
            addCriterion("nonBank_financing_guarantees <=", value, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andNonbankFinancingGuaranteesLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("nonBank_financing_guarantees <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesLike(String value) {
            addCriterion("nonBank_financing_guarantees like", value, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesNotLike(String value) {
            addCriterion("nonBank_financing_guarantees not like", value, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesIn(List<String> values) {
            addCriterion("nonBank_financing_guarantees in", values, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesNotIn(List<String> values) {
            addCriterion("nonBank_financing_guarantees not in", values, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesBetween(String value1, String value2) {
            addCriterion("nonBank_financing_guarantees between", value1, value2, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        public Criteria andNonbankFinancingGuaranteesNotBetween(String value1, String value2) {
            addCriterion("nonBank_financing_guarantees not between", value1, value2, "nonbankFinancingGuarantees");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyNonBankFinancing.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        private TCpyNonBankFinancingExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        protected Criteria(TCpyNonBankFinancingExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public TCpyNonBankFinancingExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_non_bank_financing
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_non_bank_financing
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_non_bank_financing
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyNonBankFinancingExample example);
    }
}