package com.huizhi.supplier.db.model;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpySeriousBlacklistExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public TCpySeriousBlacklistExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public TCpySeriousBlacklistExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public TCpySeriousBlacklistExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpySeriousBlacklistExample example = new TCpySeriousBlacklistExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public TCpySeriousBlacklistExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public TCpySeriousBlacklistExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitIsNull() {
            addCriterion("identification_unit is null");
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitIsNotNull() {
            addCriterion("identification_unit is not null");
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitEqualTo(String value) {
            addCriterion("identification_unit =", value, "identificationUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdentificationUnitEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("identification_unit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitNotEqualTo(String value) {
            addCriterion("identification_unit <>", value, "identificationUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdentificationUnitNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("identification_unit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitGreaterThan(String value) {
            addCriterion("identification_unit >", value, "identificationUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdentificationUnitGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("identification_unit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitGreaterThanOrEqualTo(String value) {
            addCriterion("identification_unit >=", value, "identificationUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdentificationUnitGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("identification_unit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitLessThan(String value) {
            addCriterion("identification_unit <", value, "identificationUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdentificationUnitLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("identification_unit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitLessThanOrEqualTo(String value) {
            addCriterion("identification_unit <=", value, "identificationUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andIdentificationUnitLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("identification_unit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitLike(String value) {
            addCriterion("identification_unit like", value, "identificationUnit");
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitNotLike(String value) {
            addCriterion("identification_unit not like", value, "identificationUnit");
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitIn(List<String> values) {
            addCriterion("identification_unit in", values, "identificationUnit");
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitNotIn(List<String> values) {
            addCriterion("identification_unit not in", values, "identificationUnit");
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitBetween(String value1, String value2) {
            addCriterion("identification_unit between", value1, value2, "identificationUnit");
            return (Criteria) this;
        }

        public Criteria andIdentificationUnitNotBetween(String value1, String value2) {
            addCriterion("identification_unit not between", value1, value2, "identificationUnit");
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisIsNull() {
            addCriterion("dishonesty_basis is null");
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisIsNotNull() {
            addCriterion("dishonesty_basis is not null");
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisEqualTo(String value) {
            addCriterion("dishonesty_basis =", value, "dishonestyBasis");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDishonestyBasisEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("dishonesty_basis = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisNotEqualTo(String value) {
            addCriterion("dishonesty_basis <>", value, "dishonestyBasis");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDishonestyBasisNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("dishonesty_basis <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisGreaterThan(String value) {
            addCriterion("dishonesty_basis >", value, "dishonestyBasis");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDishonestyBasisGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("dishonesty_basis > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisGreaterThanOrEqualTo(String value) {
            addCriterion("dishonesty_basis >=", value, "dishonestyBasis");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDishonestyBasisGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("dishonesty_basis >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisLessThan(String value) {
            addCriterion("dishonesty_basis <", value, "dishonestyBasis");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDishonestyBasisLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("dishonesty_basis < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisLessThanOrEqualTo(String value) {
            addCriterion("dishonesty_basis <=", value, "dishonestyBasis");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDishonestyBasisLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("dishonesty_basis <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisLike(String value) {
            addCriterion("dishonesty_basis like", value, "dishonestyBasis");
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisNotLike(String value) {
            addCriterion("dishonesty_basis not like", value, "dishonestyBasis");
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisIn(List<String> values) {
            addCriterion("dishonesty_basis in", values, "dishonestyBasis");
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisNotIn(List<String> values) {
            addCriterion("dishonesty_basis not in", values, "dishonestyBasis");
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisBetween(String value1, String value2) {
            addCriterion("dishonesty_basis between", value1, value2, "dishonestyBasis");
            return (Criteria) this;
        }

        public Criteria andDishonestyBasisNotBetween(String value1, String value2) {
            addCriterion("dishonesty_basis not between", value1, value2, "dishonestyBasis");
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActIsNull() {
            addCriterion("main_dishonesty_act is null");
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActIsNotNull() {
            addCriterion("main_dishonesty_act is not null");
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActEqualTo(String value) {
            addCriterion("main_dishonesty_act =", value, "mainDishonestyAct");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andMainDishonestyActEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("main_dishonesty_act = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActNotEqualTo(String value) {
            addCriterion("main_dishonesty_act <>", value, "mainDishonestyAct");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andMainDishonestyActNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("main_dishonesty_act <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActGreaterThan(String value) {
            addCriterion("main_dishonesty_act >", value, "mainDishonestyAct");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andMainDishonestyActGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("main_dishonesty_act > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActGreaterThanOrEqualTo(String value) {
            addCriterion("main_dishonesty_act >=", value, "mainDishonestyAct");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andMainDishonestyActGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("main_dishonesty_act >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActLessThan(String value) {
            addCriterion("main_dishonesty_act <", value, "mainDishonestyAct");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andMainDishonestyActLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("main_dishonesty_act < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActLessThanOrEqualTo(String value) {
            addCriterion("main_dishonesty_act <=", value, "mainDishonestyAct");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andMainDishonestyActLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("main_dishonesty_act <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActLike(String value) {
            addCriterion("main_dishonesty_act like", value, "mainDishonestyAct");
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActNotLike(String value) {
            addCriterion("main_dishonesty_act not like", value, "mainDishonestyAct");
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActIn(List<String> values) {
            addCriterion("main_dishonesty_act in", values, "mainDishonestyAct");
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActNotIn(List<String> values) {
            addCriterion("main_dishonesty_act not in", values, "mainDishonestyAct");
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActBetween(String value1, String value2) {
            addCriterion("main_dishonesty_act between", value1, value2, "mainDishonestyAct");
            return (Criteria) this;
        }

        public Criteria andMainDishonestyActNotBetween(String value1, String value2) {
            addCriterion("main_dishonesty_act not between", value1, value2, "mainDishonestyAct");
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeIsNull() {
            addCriterion("serious_dishonesty_time is null");
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeIsNotNull() {
            addCriterion("serious_dishonesty_time is not null");
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeEqualTo(LocalDate value) {
            addCriterion("serious_dishonesty_time =", value, "seriousDishonestyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andSeriousDishonestyTimeEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("serious_dishonesty_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeNotEqualTo(LocalDate value) {
            addCriterion("serious_dishonesty_time <>", value, "seriousDishonestyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andSeriousDishonestyTimeNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("serious_dishonesty_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeGreaterThan(LocalDate value) {
            addCriterion("serious_dishonesty_time >", value, "seriousDishonestyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andSeriousDishonestyTimeGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("serious_dishonesty_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("serious_dishonesty_time >=", value, "seriousDishonestyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andSeriousDishonestyTimeGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("serious_dishonesty_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeLessThan(LocalDate value) {
            addCriterion("serious_dishonesty_time <", value, "seriousDishonestyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andSeriousDishonestyTimeLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("serious_dishonesty_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeLessThanOrEqualTo(LocalDate value) {
            addCriterion("serious_dishonesty_time <=", value, "seriousDishonestyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andSeriousDishonestyTimeLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("serious_dishonesty_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeIn(List<LocalDate> values) {
            addCriterion("serious_dishonesty_time in", values, "seriousDishonestyTime");
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeNotIn(List<LocalDate> values) {
            addCriterion("serious_dishonesty_time not in", values, "seriousDishonestyTime");
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeBetween(LocalDate value1, LocalDate value2) {
            addCriterion("serious_dishonesty_time between", value1, value2, "seriousDishonestyTime");
            return (Criteria) this;
        }

        public Criteria andSeriousDishonestyTimeNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("serious_dishonesty_time not between", value1, value2, "seriousDishonestyTime");
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineIsNull() {
            addCriterion("publicity_deadline is null");
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineIsNotNull() {
            addCriterion("publicity_deadline is not null");
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineEqualTo(LocalDate value) {
            addCriterion("publicity_deadline =", value, "publicityDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andPublicityDeadlineEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("publicity_deadline = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineNotEqualTo(LocalDate value) {
            addCriterion("publicity_deadline <>", value, "publicityDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andPublicityDeadlineNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("publicity_deadline <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineGreaterThan(LocalDate value) {
            addCriterion("publicity_deadline >", value, "publicityDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andPublicityDeadlineGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("publicity_deadline > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("publicity_deadline >=", value, "publicityDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andPublicityDeadlineGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("publicity_deadline >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineLessThan(LocalDate value) {
            addCriterion("publicity_deadline <", value, "publicityDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andPublicityDeadlineLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("publicity_deadline < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineLessThanOrEqualTo(LocalDate value) {
            addCriterion("publicity_deadline <=", value, "publicityDeadline");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andPublicityDeadlineLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("publicity_deadline <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineIn(List<LocalDate> values) {
            addCriterion("publicity_deadline in", values, "publicityDeadline");
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineNotIn(List<LocalDate> values) {
            addCriterion("publicity_deadline not in", values, "publicityDeadline");
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineBetween(LocalDate value1, LocalDate value2) {
            addCriterion("publicity_deadline between", value1, value2, "publicityDeadline");
            return (Criteria) this;
        }

        public Criteria andPublicityDeadlineNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("publicity_deadline not between", value1, value2, "publicityDeadline");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpySeriousBlacklist.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        private TCpySeriousBlacklistExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        protected Criteria(TCpySeriousBlacklistExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public TCpySeriousBlacklistExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_serious_blacklist
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_serious_blacklist
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_serious_blacklist
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpySeriousBlacklistExample example);
    }
}