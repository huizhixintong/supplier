package com.huizhi.supplier.db.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyRealtyRentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public TCpyRealtyRentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public TCpyRealtyRentExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public TCpyRealtyRentExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyRealtyRentExample example = new TCpyRealtyRentExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public TCpyRealtyRentExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public TCpyRealtyRentExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("`year` is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("`year` is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(String value) {
            addCriterion("`year` =", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("`year` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(String value) {
            addCriterion("`year` <>", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("`year` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(String value) {
            addCriterion("`year` >", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("`year` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(String value) {
            addCriterion("`year` >=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("`year` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThan(String value) {
            addCriterion("`year` <", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("`year` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(String value) {
            addCriterion("`year` <=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("`year` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLike(String value) {
            addCriterion("`year` like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotLike(String value) {
            addCriterion("`year` not like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<String> values) {
            addCriterion("`year` in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<String> values) {
            addCriterion("`year` not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(String value1, String value2) {
            addCriterion("`year` between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(String value1, String value2) {
            addCriterion("`year` not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsIsNull() {
            addCriterion("year_add_fixed_assets is null");
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsIsNotNull() {
            addCriterion("year_add_fixed_assets is not null");
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsEqualTo(Double value) {
            addCriterion("year_add_fixed_assets =", value, "yearAddFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAddFixedAssetsEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_add_fixed_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsNotEqualTo(Double value) {
            addCriterion("year_add_fixed_assets <>", value, "yearAddFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAddFixedAssetsNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_add_fixed_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsGreaterThan(Double value) {
            addCriterion("year_add_fixed_assets >", value, "yearAddFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAddFixedAssetsGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_add_fixed_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsGreaterThanOrEqualTo(Double value) {
            addCriterion("year_add_fixed_assets >=", value, "yearAddFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAddFixedAssetsGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_add_fixed_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsLessThan(Double value) {
            addCriterion("year_add_fixed_assets <", value, "yearAddFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAddFixedAssetsLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_add_fixed_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsLessThanOrEqualTo(Double value) {
            addCriterion("year_add_fixed_assets <=", value, "yearAddFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAddFixedAssetsLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_add_fixed_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsIn(List<Double> values) {
            addCriterion("year_add_fixed_assets in", values, "yearAddFixedAssets");
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsNotIn(List<Double> values) {
            addCriterion("year_add_fixed_assets not in", values, "yearAddFixedAssets");
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsBetween(Double value1, Double value2) {
            addCriterion("year_add_fixed_assets between", value1, value2, "yearAddFixedAssets");
            return (Criteria) this;
        }

        public Criteria andYearAddFixedAssetsNotBetween(Double value1, Double value2) {
            addCriterion("year_add_fixed_assets not between", value1, value2, "yearAddFixedAssets");
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeIsNull() {
            addCriterion("year_accomplish_investment_volume is null");
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeIsNotNull() {
            addCriterion("year_accomplish_investment_volume is not null");
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeEqualTo(Double value) {
            addCriterion("year_accomplish_investment_volume =", value, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAccomplishInvestmentVolumeEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_accomplish_investment_volume = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeNotEqualTo(Double value) {
            addCriterion("year_accomplish_investment_volume <>", value, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAccomplishInvestmentVolumeNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_accomplish_investment_volume <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeGreaterThan(Double value) {
            addCriterion("year_accomplish_investment_volume >", value, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAccomplishInvestmentVolumeGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_accomplish_investment_volume > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeGreaterThanOrEqualTo(Double value) {
            addCriterion("year_accomplish_investment_volume >=", value, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAccomplishInvestmentVolumeGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_accomplish_investment_volume >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeLessThan(Double value) {
            addCriterion("year_accomplish_investment_volume <", value, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAccomplishInvestmentVolumeLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_accomplish_investment_volume < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeLessThanOrEqualTo(Double value) {
            addCriterion("year_accomplish_investment_volume <=", value, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearAccomplishInvestmentVolumeLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_accomplish_investment_volume <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeIn(List<Double> values) {
            addCriterion("year_accomplish_investment_volume in", values, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeNotIn(List<Double> values) {
            addCriterion("year_accomplish_investment_volume not in", values, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeBetween(Double value1, Double value2) {
            addCriterion("year_accomplish_investment_volume between", value1, value2, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        public Criteria andYearAccomplishInvestmentVolumeNotBetween(Double value1, Double value2) {
            addCriterion("year_accomplish_investment_volume not between", value1, value2, "yearAccomplishInvestmentVolume");
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountIsNull() {
            addCriterion("year_activate_bring_on_stream_count is null");
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountIsNotNull() {
            addCriterion("year_activate_bring_on_stream_count is not null");
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountEqualTo(Integer value) {
            addCriterion("year_activate_bring_on_stream_count =", value, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearActivateBringOnStreamCountEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_activate_bring_on_stream_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountNotEqualTo(Integer value) {
            addCriterion("year_activate_bring_on_stream_count <>", value, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearActivateBringOnStreamCountNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_activate_bring_on_stream_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountGreaterThan(Integer value) {
            addCriterion("year_activate_bring_on_stream_count >", value, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearActivateBringOnStreamCountGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_activate_bring_on_stream_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("year_activate_bring_on_stream_count >=", value, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearActivateBringOnStreamCountGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_activate_bring_on_stream_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountLessThan(Integer value) {
            addCriterion("year_activate_bring_on_stream_count <", value, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearActivateBringOnStreamCountLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_activate_bring_on_stream_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountLessThanOrEqualTo(Integer value) {
            addCriterion("year_activate_bring_on_stream_count <=", value, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearActivateBringOnStreamCountLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_activate_bring_on_stream_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountIn(List<Integer> values) {
            addCriterion("year_activate_bring_on_stream_count in", values, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountNotIn(List<Integer> values) {
            addCriterion("year_activate_bring_on_stream_count not in", values, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountBetween(Integer value1, Integer value2) {
            addCriterion("year_activate_bring_on_stream_count between", value1, value2, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        public Criteria andYearActivateBringOnStreamCountNotBetween(Integer value1, Integer value2) {
            addCriterion("year_activate_bring_on_stream_count not between", value1, value2, "yearActivateBringOnStreamCount");
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountIsNull() {
            addCriterion("year_formal_construction_projects_count is null");
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountIsNotNull() {
            addCriterion("year_formal_construction_projects_count is not null");
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountEqualTo(Integer value) {
            addCriterion("year_formal_construction_projects_count =", value, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearFormalConstructionProjectsCountEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_formal_construction_projects_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountNotEqualTo(Integer value) {
            addCriterion("year_formal_construction_projects_count <>", value, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearFormalConstructionProjectsCountNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_formal_construction_projects_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountGreaterThan(Integer value) {
            addCriterion("year_formal_construction_projects_count >", value, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearFormalConstructionProjectsCountGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_formal_construction_projects_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("year_formal_construction_projects_count >=", value, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearFormalConstructionProjectsCountGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_formal_construction_projects_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountLessThan(Integer value) {
            addCriterion("year_formal_construction_projects_count <", value, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearFormalConstructionProjectsCountLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_formal_construction_projects_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountLessThanOrEqualTo(Integer value) {
            addCriterion("year_formal_construction_projects_count <=", value, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andYearFormalConstructionProjectsCountLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("year_formal_construction_projects_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountIn(List<Integer> values) {
            addCriterion("year_formal_construction_projects_count in", values, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountNotIn(List<Integer> values) {
            addCriterion("year_formal_construction_projects_count not in", values, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountBetween(Integer value1, Integer value2) {
            addCriterion("year_formal_construction_projects_count between", value1, value2, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        public Criteria andYearFormalConstructionProjectsCountNotBetween(Integer value1, Integer value2) {
            addCriterion("year_formal_construction_projects_count not between", value1, value2, "yearFormalConstructionProjectsCount");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyRealtyRent.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        private TCpyRealtyRentExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        protected Criteria(TCpyRealtyRentExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public TCpyRealtyRentExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_realty_rent
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_realty_rent
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_realty_rent
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyRealtyRentExample example);
    }
}