package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyForeignInvestExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public TCpyForeignInvestExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public TCpyForeignInvestExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public TCpyForeignInvestExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyForeignInvestExample example = new TCpyForeignInvestExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public TCpyForeignInvestExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public TCpyForeignInvestExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameIsNull() {
            addCriterion("invest_company_name is null");
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameIsNotNull() {
            addCriterion("invest_company_name is not null");
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameEqualTo(String value) {
            addCriterion("invest_company_name =", value, "investCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestCompanyNameEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_company_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameNotEqualTo(String value) {
            addCriterion("invest_company_name <>", value, "investCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestCompanyNameNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_company_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameGreaterThan(String value) {
            addCriterion("invest_company_name >", value, "investCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestCompanyNameGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_company_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameGreaterThanOrEqualTo(String value) {
            addCriterion("invest_company_name >=", value, "investCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestCompanyNameGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_company_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameLessThan(String value) {
            addCriterion("invest_company_name <", value, "investCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestCompanyNameLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_company_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameLessThanOrEqualTo(String value) {
            addCriterion("invest_company_name <=", value, "investCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestCompanyNameLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_company_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameLike(String value) {
            addCriterion("invest_company_name like", value, "investCompanyName");
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameNotLike(String value) {
            addCriterion("invest_company_name not like", value, "investCompanyName");
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameIn(List<String> values) {
            addCriterion("invest_company_name in", values, "investCompanyName");
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameNotIn(List<String> values) {
            addCriterion("invest_company_name not in", values, "investCompanyName");
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameBetween(String value1, String value2) {
            addCriterion("invest_company_name between", value1, value2, "investCompanyName");
            return (Criteria) this;
        }

        public Criteria andInvestCompanyNameNotBetween(String value1, String value2) {
            addCriterion("invest_company_name not between", value1, value2, "investCompanyName");
            return (Criteria) this;
        }

        public Criteria andInvestTypeIsNull() {
            addCriterion("invest_type is null");
            return (Criteria) this;
        }

        public Criteria andInvestTypeIsNotNull() {
            addCriterion("invest_type is not null");
            return (Criteria) this;
        }

        public Criteria andInvestTypeEqualTo(String value) {
            addCriterion("invest_type =", value, "investType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestTypeEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestTypeNotEqualTo(String value) {
            addCriterion("invest_type <>", value, "investType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestTypeNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestTypeGreaterThan(String value) {
            addCriterion("invest_type >", value, "investType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestTypeGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestTypeGreaterThanOrEqualTo(String value) {
            addCriterion("invest_type >=", value, "investType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestTypeGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestTypeLessThan(String value) {
            addCriterion("invest_type <", value, "investType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestTypeLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestTypeLessThanOrEqualTo(String value) {
            addCriterion("invest_type <=", value, "investType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestTypeLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestTypeLike(String value) {
            addCriterion("invest_type like", value, "investType");
            return (Criteria) this;
        }

        public Criteria andInvestTypeNotLike(String value) {
            addCriterion("invest_type not like", value, "investType");
            return (Criteria) this;
        }

        public Criteria andInvestTypeIn(List<String> values) {
            addCriterion("invest_type in", values, "investType");
            return (Criteria) this;
        }

        public Criteria andInvestTypeNotIn(List<String> values) {
            addCriterion("invest_type not in", values, "investType");
            return (Criteria) this;
        }

        public Criteria andInvestTypeBetween(String value1, String value2) {
            addCriterion("invest_type between", value1, value2, "investType");
            return (Criteria) this;
        }

        public Criteria andInvestTypeNotBetween(String value1, String value2) {
            addCriterion("invest_type not between", value1, value2, "investType");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCodeEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCodeNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("code like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("code not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusIsNull() {
            addCriterion("foreign_register_status is null");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusIsNotNull() {
            addCriterion("foreign_register_status is not null");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusEqualTo(String value) {
            addCriterion("foreign_register_status =", value, "foreignRegisterStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterStatusEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusNotEqualTo(String value) {
            addCriterion("foreign_register_status <>", value, "foreignRegisterStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterStatusNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusGreaterThan(String value) {
            addCriterion("foreign_register_status >", value, "foreignRegisterStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterStatusGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusGreaterThanOrEqualTo(String value) {
            addCriterion("foreign_register_status >=", value, "foreignRegisterStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterStatusGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusLessThan(String value) {
            addCriterion("foreign_register_status <", value, "foreignRegisterStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterStatusLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusLessThanOrEqualTo(String value) {
            addCriterion("foreign_register_status <=", value, "foreignRegisterStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterStatusLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusLike(String value) {
            addCriterion("foreign_register_status like", value, "foreignRegisterStatus");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusNotLike(String value) {
            addCriterion("foreign_register_status not like", value, "foreignRegisterStatus");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusIn(List<String> values) {
            addCriterion("foreign_register_status in", values, "foreignRegisterStatus");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusNotIn(List<String> values) {
            addCriterion("foreign_register_status not in", values, "foreignRegisterStatus");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusBetween(String value1, String value2) {
            addCriterion("foreign_register_status between", value1, value2, "foreignRegisterStatus");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterStatusNotBetween(String value1, String value2) {
            addCriterion("foreign_register_status not between", value1, value2, "foreignRegisterStatus");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganIsNull() {
            addCriterion("foreign_register_organ is null");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganIsNotNull() {
            addCriterion("foreign_register_organ is not null");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganEqualTo(String value) {
            addCriterion("foreign_register_organ =", value, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterOrganEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_organ = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganNotEqualTo(String value) {
            addCriterion("foreign_register_organ <>", value, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterOrganNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_organ <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganGreaterThan(String value) {
            addCriterion("foreign_register_organ >", value, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterOrganGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_organ > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganGreaterThanOrEqualTo(String value) {
            addCriterion("foreign_register_organ >=", value, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterOrganGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_organ >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganLessThan(String value) {
            addCriterion("foreign_register_organ <", value, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterOrganLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_organ < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganLessThanOrEqualTo(String value) {
            addCriterion("foreign_register_organ <=", value, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignRegisterOrganLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_register_organ <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganLike(String value) {
            addCriterion("foreign_register_organ like", value, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganNotLike(String value) {
            addCriterion("foreign_register_organ not like", value, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganIn(List<String> values) {
            addCriterion("foreign_register_organ in", values, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganNotIn(List<String> values) {
            addCriterion("foreign_register_organ not in", values, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganBetween(String value1, String value2) {
            addCriterion("foreign_register_organ between", value1, value2, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        public Criteria andForeignRegisterOrganNotBetween(String value1, String value2) {
            addCriterion("foreign_register_organ not between", value1, value2, "foreignRegisterOrgan");
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeIsNull() {
            addCriterion("foreign_org_code is null");
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeIsNotNull() {
            addCriterion("foreign_org_code is not null");
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeEqualTo(String value) {
            addCriterion("foreign_org_code =", value, "foreignOrgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignOrgCodeEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_org_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeNotEqualTo(String value) {
            addCriterion("foreign_org_code <>", value, "foreignOrgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignOrgCodeNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_org_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeGreaterThan(String value) {
            addCriterion("foreign_org_code >", value, "foreignOrgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignOrgCodeGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_org_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeGreaterThanOrEqualTo(String value) {
            addCriterion("foreign_org_code >=", value, "foreignOrgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignOrgCodeGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_org_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeLessThan(String value) {
            addCriterion("foreign_org_code <", value, "foreignOrgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignOrgCodeLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_org_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeLessThanOrEqualTo(String value) {
            addCriterion("foreign_org_code <=", value, "foreignOrgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andForeignOrgCodeLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("foreign_org_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeLike(String value) {
            addCriterion("foreign_org_code like", value, "foreignOrgCode");
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeNotLike(String value) {
            addCriterion("foreign_org_code not like", value, "foreignOrgCode");
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeIn(List<String> values) {
            addCriterion("foreign_org_code in", values, "foreignOrgCode");
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeNotIn(List<String> values) {
            addCriterion("foreign_org_code not in", values, "foreignOrgCode");
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeBetween(String value1, String value2) {
            addCriterion("foreign_org_code between", value1, value2, "foreignOrgCode");
            return (Criteria) this;
        }

        public Criteria andForeignOrgCodeNotBetween(String value1, String value2) {
            addCriterion("foreign_org_code not between", value1, value2, "foreignOrgCode");
            return (Criteria) this;
        }

        public Criteria andRelationsIsNull() {
            addCriterion("relations is null");
            return (Criteria) this;
        }

        public Criteria andRelationsIsNotNull() {
            addCriterion("relations is not null");
            return (Criteria) this;
        }

        public Criteria andRelationsEqualTo(String value) {
            addCriterion("relations =", value, "relations");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRelationsEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("relations = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRelationsNotEqualTo(String value) {
            addCriterion("relations <>", value, "relations");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRelationsNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("relations <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRelationsGreaterThan(String value) {
            addCriterion("relations >", value, "relations");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRelationsGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("relations > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRelationsGreaterThanOrEqualTo(String value) {
            addCriterion("relations >=", value, "relations");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRelationsGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("relations >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRelationsLessThan(String value) {
            addCriterion("relations <", value, "relations");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRelationsLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("relations < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRelationsLessThanOrEqualTo(String value) {
            addCriterion("relations <=", value, "relations");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRelationsLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("relations <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRelationsLike(String value) {
            addCriterion("relations like", value, "relations");
            return (Criteria) this;
        }

        public Criteria andRelationsNotLike(String value) {
            addCriterion("relations not like", value, "relations");
            return (Criteria) this;
        }

        public Criteria andRelationsIn(List<String> values) {
            addCriterion("relations in", values, "relations");
            return (Criteria) this;
        }

        public Criteria andRelationsNotIn(List<String> values) {
            addCriterion("relations not in", values, "relations");
            return (Criteria) this;
        }

        public Criteria andRelationsBetween(String value1, String value2) {
            addCriterion("relations between", value1, value2, "relations");
            return (Criteria) this;
        }

        public Criteria andRelationsNotBetween(String value1, String value2) {
            addCriterion("relations not between", value1, value2, "relations");
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepIsNull() {
            addCriterion("invest_legal_rep is null");
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepIsNotNull() {
            addCriterion("invest_legal_rep is not null");
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepEqualTo(String value) {
            addCriterion("invest_legal_rep =", value, "investLegalRep");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestLegalRepEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_legal_rep = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepNotEqualTo(String value) {
            addCriterion("invest_legal_rep <>", value, "investLegalRep");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestLegalRepNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_legal_rep <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepGreaterThan(String value) {
            addCriterion("invest_legal_rep >", value, "investLegalRep");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestLegalRepGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_legal_rep > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepGreaterThanOrEqualTo(String value) {
            addCriterion("invest_legal_rep >=", value, "investLegalRep");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestLegalRepGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_legal_rep >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepLessThan(String value) {
            addCriterion("invest_legal_rep <", value, "investLegalRep");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestLegalRepLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_legal_rep < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepLessThanOrEqualTo(String value) {
            addCriterion("invest_legal_rep <=", value, "investLegalRep");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestLegalRepLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("invest_legal_rep <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepLike(String value) {
            addCriterion("invest_legal_rep like", value, "investLegalRep");
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepNotLike(String value) {
            addCriterion("invest_legal_rep not like", value, "investLegalRep");
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepIn(List<String> values) {
            addCriterion("invest_legal_rep in", values, "investLegalRep");
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepNotIn(List<String> values) {
            addCriterion("invest_legal_rep not in", values, "investLegalRep");
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepBetween(String value1, String value2) {
            addCriterion("invest_legal_rep between", value1, value2, "investLegalRep");
            return (Criteria) this;
        }

        public Criteria andInvestLegalRepNotBetween(String value1, String value2) {
            addCriterion("invest_legal_rep not between", value1, value2, "investLegalRep");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalIsNull() {
            addCriterion("registered_capital is null");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalIsNotNull() {
            addCriterion("registered_capital is not null");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalEqualTo(BigDecimal value) {
            addCriterion("registered_capital =", value, "registeredCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteredCapitalEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registered_capital = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalNotEqualTo(BigDecimal value) {
            addCriterion("registered_capital <>", value, "registeredCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteredCapitalNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registered_capital <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalGreaterThan(BigDecimal value) {
            addCriterion("registered_capital >", value, "registeredCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteredCapitalGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registered_capital > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("registered_capital >=", value, "registeredCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteredCapitalGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registered_capital >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalLessThan(BigDecimal value) {
            addCriterion("registered_capital <", value, "registeredCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteredCapitalLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registered_capital < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("registered_capital <=", value, "registeredCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteredCapitalLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registered_capital <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalIn(List<BigDecimal> values) {
            addCriterion("registered_capital in", values, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalNotIn(List<BigDecimal> values) {
            addCriterion("registered_capital not in", values, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("registered_capital between", value1, value2, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("registered_capital not between", value1, value2, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountIsNull() {
            addCriterion("investment_amount is null");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountIsNotNull() {
            addCriterion("investment_amount is not null");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountEqualTo(BigDecimal value) {
            addCriterion("investment_amount =", value, "investmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentAmountEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountNotEqualTo(BigDecimal value) {
            addCriterion("investment_amount <>", value, "investmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentAmountNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountGreaterThan(BigDecimal value) {
            addCriterion("investment_amount >", value, "investmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentAmountGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_amount >=", value, "investmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentAmountGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountLessThan(BigDecimal value) {
            addCriterion("investment_amount <", value, "investmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentAmountLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_amount <=", value, "investmentAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentAmountLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountIn(List<BigDecimal> values) {
            addCriterion("investment_amount in", values, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountNotIn(List<BigDecimal> values) {
            addCriterion("investment_amount not in", values, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_amount between", value1, value2, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_amount not between", value1, value2, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioIsNull() {
            addCriterion("investment_ratio is null");
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioIsNotNull() {
            addCriterion("investment_ratio is not null");
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioEqualTo(BigDecimal value) {
            addCriterion("investment_ratio =", value, "investmentRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentRatioEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_ratio = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioNotEqualTo(BigDecimal value) {
            addCriterion("investment_ratio <>", value, "investmentRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentRatioNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_ratio <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioGreaterThan(BigDecimal value) {
            addCriterion("investment_ratio >", value, "investmentRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentRatioGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_ratio > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_ratio >=", value, "investmentRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentRatioGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_ratio >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioLessThan(BigDecimal value) {
            addCriterion("investment_ratio <", value, "investmentRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentRatioLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_ratio < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioLessThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_ratio <=", value, "investmentRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andInvestmentRatioLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("investment_ratio <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioIn(List<BigDecimal> values) {
            addCriterion("investment_ratio in", values, "investmentRatio");
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioNotIn(List<BigDecimal> values) {
            addCriterion("investment_ratio not in", values, "investmentRatio");
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_ratio between", value1, value2, "investmentRatio");
            return (Criteria) this;
        }

        public Criteria andInvestmentRatioNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_ratio not between", value1, value2, "investmentRatio");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeIsNull() {
            addCriterion("registe_time is null");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeIsNotNull() {
            addCriterion("registe_time is not null");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeEqualTo(LocalDateTime value) {
            addCriterion("registe_time =", value, "registeTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteTimeEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registe_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteTimeNotEqualTo(LocalDateTime value) {
            addCriterion("registe_time <>", value, "registeTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteTimeNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registe_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteTimeGreaterThan(LocalDateTime value) {
            addCriterion("registe_time >", value, "registeTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteTimeGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registe_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("registe_time >=", value, "registeTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteTimeGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registe_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteTimeLessThan(LocalDateTime value) {
            addCriterion("registe_time <", value, "registeTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteTimeLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registe_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("registe_time <=", value, "registeTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andRegisteTimeLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("registe_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteTimeIn(List<LocalDateTime> values) {
            addCriterion("registe_time in", values, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeNotIn(List<LocalDateTime> values) {
            addCriterion("registe_time not in", values, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("registe_time between", value1, value2, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("registe_time not between", value1, value2, "registeTime");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyForeignInvest.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        private TCpyForeignInvestExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        protected Criteria(TCpyForeignInvestExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public TCpyForeignInvestExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_foreign_invest
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_foreign_invest
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_foreign_invest
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyForeignInvestExample example);
    }
}