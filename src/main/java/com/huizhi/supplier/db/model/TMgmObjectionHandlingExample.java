package com.huizhi.supplier.db.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TMgmObjectionHandlingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public TMgmObjectionHandlingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public TMgmObjectionHandlingExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public TMgmObjectionHandlingExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TMgmObjectionHandlingExample example = new TMgmObjectionHandlingExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public TMgmObjectionHandlingExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public TMgmObjectionHandlingExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDissenterIsNull() {
            addCriterion("dissenter is null");
            return (Criteria) this;
        }

        public Criteria andDissenterIsNotNull() {
            addCriterion("dissenter is not null");
            return (Criteria) this;
        }

        public Criteria andDissenterEqualTo(String value) {
            addCriterion("dissenter =", value, "dissenter");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andDissenterEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("dissenter = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDissenterNotEqualTo(String value) {
            addCriterion("dissenter <>", value, "dissenter");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andDissenterNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("dissenter <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDissenterGreaterThan(String value) {
            addCriterion("dissenter >", value, "dissenter");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andDissenterGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("dissenter > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDissenterGreaterThanOrEqualTo(String value) {
            addCriterion("dissenter >=", value, "dissenter");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andDissenterGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("dissenter >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDissenterLessThan(String value) {
            addCriterion("dissenter <", value, "dissenter");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andDissenterLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("dissenter < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDissenterLessThanOrEqualTo(String value) {
            addCriterion("dissenter <=", value, "dissenter");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andDissenterLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("dissenter <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDissenterLike(String value) {
            addCriterion("dissenter like", value, "dissenter");
            return (Criteria) this;
        }

        public Criteria andDissenterNotLike(String value) {
            addCriterion("dissenter not like", value, "dissenter");
            return (Criteria) this;
        }

        public Criteria andDissenterIn(List<String> values) {
            addCriterion("dissenter in", values, "dissenter");
            return (Criteria) this;
        }

        public Criteria andDissenterNotIn(List<String> values) {
            addCriterion("dissenter not in", values, "dissenter");
            return (Criteria) this;
        }

        public Criteria andDissenterBetween(String value1, String value2) {
            addCriterion("dissenter between", value1, value2, "dissenter");
            return (Criteria) this;
        }

        public Criteria andDissenterNotBetween(String value1, String value2) {
            addCriterion("dissenter not between", value1, value2, "dissenter");
            return (Criteria) this;
        }

        public Criteria andObjectionTimeIsNull() {
            addCriterion("objection_time is null");
            return (Criteria) this;
        }

        public Criteria andObjectionTimeIsNotNull() {
            addCriterion("objection_time is not null");
            return (Criteria) this;
        }

        public Criteria andObjectionTimeEqualTo(LocalDateTime value) {
            addCriterion("objection_time =", value, "objectionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionTimeEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionTimeNotEqualTo(LocalDateTime value) {
            addCriterion("objection_time <>", value, "objectionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionTimeNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionTimeGreaterThan(LocalDateTime value) {
            addCriterion("objection_time >", value, "objectionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionTimeGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("objection_time >=", value, "objectionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionTimeGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionTimeLessThan(LocalDateTime value) {
            addCriterion("objection_time <", value, "objectionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionTimeLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("objection_time <=", value, "objectionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionTimeLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionTimeIn(List<LocalDateTime> values) {
            addCriterion("objection_time in", values, "objectionTime");
            return (Criteria) this;
        }

        public Criteria andObjectionTimeNotIn(List<LocalDateTime> values) {
            addCriterion("objection_time not in", values, "objectionTime");
            return (Criteria) this;
        }

        public Criteria andObjectionTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("objection_time between", value1, value2, "objectionTime");
            return (Criteria) this;
        }

        public Criteria andObjectionTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("objection_time not between", value1, value2, "objectionTime");
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsIsNull() {
            addCriterion("objection_details is null");
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsIsNotNull() {
            addCriterion("objection_details is not null");
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsEqualTo(String value) {
            addCriterion("objection_details =", value, "objectionDetails");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionDetailsEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_details = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsNotEqualTo(String value) {
            addCriterion("objection_details <>", value, "objectionDetails");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionDetailsNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_details <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsGreaterThan(String value) {
            addCriterion("objection_details >", value, "objectionDetails");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionDetailsGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_details > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsGreaterThanOrEqualTo(String value) {
            addCriterion("objection_details >=", value, "objectionDetails");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionDetailsGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_details >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsLessThan(String value) {
            addCriterion("objection_details <", value, "objectionDetails");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionDetailsLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_details < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsLessThanOrEqualTo(String value) {
            addCriterion("objection_details <=", value, "objectionDetails");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andObjectionDetailsLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("objection_details <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsLike(String value) {
            addCriterion("objection_details like", value, "objectionDetails");
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsNotLike(String value) {
            addCriterion("objection_details not like", value, "objectionDetails");
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsIn(List<String> values) {
            addCriterion("objection_details in", values, "objectionDetails");
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsNotIn(List<String> values) {
            addCriterion("objection_details not in", values, "objectionDetails");
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsBetween(String value1, String value2) {
            addCriterion("objection_details between", value1, value2, "objectionDetails");
            return (Criteria) this;
        }

        public Criteria andObjectionDetailsNotBetween(String value1, String value2) {
            addCriterion("objection_details not between", value1, value2, "objectionDetails");
            return (Criteria) this;
        }

        public Criteria andCompanyNameIsNull() {
            addCriterion("company_name is null");
            return (Criteria) this;
        }

        public Criteria andCompanyNameIsNotNull() {
            addCriterion("company_name is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyNameEqualTo(String value) {
            addCriterion("company_name =", value, "companyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCompanyNameEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("company_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyNameNotEqualTo(String value) {
            addCriterion("company_name <>", value, "companyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCompanyNameNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("company_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyNameGreaterThan(String value) {
            addCriterion("company_name >", value, "companyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCompanyNameGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("company_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyNameGreaterThanOrEqualTo(String value) {
            addCriterion("company_name >=", value, "companyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCompanyNameGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("company_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyNameLessThan(String value) {
            addCriterion("company_name <", value, "companyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCompanyNameLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("company_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyNameLessThanOrEqualTo(String value) {
            addCriterion("company_name <=", value, "companyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCompanyNameLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("company_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyNameLike(String value) {
            addCriterion("company_name like", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameNotLike(String value) {
            addCriterion("company_name not like", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameIn(List<String> values) {
            addCriterion("company_name in", values, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameNotIn(List<String> values) {
            addCriterion("company_name not in", values, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameBetween(String value1, String value2) {
            addCriterion("company_name between", value1, value2, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameNotBetween(String value1, String value2) {
            addCriterion("company_name not between", value1, value2, "companyName");
            return (Criteria) this;
        }

        public Criteria andMobileIsNull() {
            addCriterion("mobile is null");
            return (Criteria) this;
        }

        public Criteria andMobileIsNotNull() {
            addCriterion("mobile is not null");
            return (Criteria) this;
        }

        public Criteria andMobileEqualTo(String value) {
            addCriterion("mobile =", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andMobileEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("mobile = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileNotEqualTo(String value) {
            addCriterion("mobile <>", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andMobileNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("mobile <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileGreaterThan(String value) {
            addCriterion("mobile >", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andMobileGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("mobile > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileGreaterThanOrEqualTo(String value) {
            addCriterion("mobile >=", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andMobileGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("mobile >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileLessThan(String value) {
            addCriterion("mobile <", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andMobileLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("mobile < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileLessThanOrEqualTo(String value) {
            addCriterion("mobile <=", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andMobileLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("mobile <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileLike(String value) {
            addCriterion("mobile like", value, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileNotLike(String value) {
            addCriterion("mobile not like", value, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileIn(List<String> values) {
            addCriterion("mobile in", values, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileNotIn(List<String> values) {
            addCriterion("mobile not in", values, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileBetween(String value1, String value2) {
            addCriterion("mobile between", value1, value2, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileNotBetween(String value1, String value2) {
            addCriterion("mobile not between", value1, value2, "mobile");
            return (Criteria) this;
        }

        public Criteria andHandlingTimeIsNull() {
            addCriterion("handling_time is null");
            return (Criteria) this;
        }

        public Criteria andHandlingTimeIsNotNull() {
            addCriterion("handling_time is not null");
            return (Criteria) this;
        }

        public Criteria andHandlingTimeEqualTo(LocalDateTime value) {
            addCriterion("handling_time =", value, "handlingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andHandlingTimeEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("handling_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHandlingTimeNotEqualTo(LocalDateTime value) {
            addCriterion("handling_time <>", value, "handlingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andHandlingTimeNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("handling_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHandlingTimeGreaterThan(LocalDateTime value) {
            addCriterion("handling_time >", value, "handlingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andHandlingTimeGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("handling_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHandlingTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("handling_time >=", value, "handlingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andHandlingTimeGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("handling_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHandlingTimeLessThan(LocalDateTime value) {
            addCriterion("handling_time <", value, "handlingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andHandlingTimeLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("handling_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHandlingTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("handling_time <=", value, "handlingTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andHandlingTimeLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("handling_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHandlingTimeIn(List<LocalDateTime> values) {
            addCriterion("handling_time in", values, "handlingTime");
            return (Criteria) this;
        }

        public Criteria andHandlingTimeNotIn(List<LocalDateTime> values) {
            addCriterion("handling_time not in", values, "handlingTime");
            return (Criteria) this;
        }

        public Criteria andHandlingTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("handling_time between", value1, value2, "handlingTime");
            return (Criteria) this;
        }

        public Criteria andHandlingTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("handling_time not between", value1, value2, "handlingTime");
            return (Criteria) this;
        }

        public Criteria andFeedbackIsNull() {
            addCriterion("feedback is null");
            return (Criteria) this;
        }

        public Criteria andFeedbackIsNotNull() {
            addCriterion("feedback is not null");
            return (Criteria) this;
        }

        public Criteria andFeedbackEqualTo(String value) {
            addCriterion("feedback =", value, "feedback");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andFeedbackEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("feedback = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeedbackNotEqualTo(String value) {
            addCriterion("feedback <>", value, "feedback");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andFeedbackNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("feedback <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeedbackGreaterThan(String value) {
            addCriterion("feedback >", value, "feedback");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andFeedbackGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("feedback > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeedbackGreaterThanOrEqualTo(String value) {
            addCriterion("feedback >=", value, "feedback");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andFeedbackGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("feedback >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeedbackLessThan(String value) {
            addCriterion("feedback <", value, "feedback");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andFeedbackLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("feedback < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeedbackLessThanOrEqualTo(String value) {
            addCriterion("feedback <=", value, "feedback");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andFeedbackLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("feedback <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeedbackLike(String value) {
            addCriterion("feedback like", value, "feedback");
            return (Criteria) this;
        }

        public Criteria andFeedbackNotLike(String value) {
            addCriterion("feedback not like", value, "feedback");
            return (Criteria) this;
        }

        public Criteria andFeedbackIn(List<String> values) {
            addCriterion("feedback in", values, "feedback");
            return (Criteria) this;
        }

        public Criteria andFeedbackNotIn(List<String> values) {
            addCriterion("feedback not in", values, "feedback");
            return (Criteria) this;
        }

        public Criteria andFeedbackBetween(String value1, String value2) {
            addCriterion("feedback between", value1, value2, "feedback");
            return (Criteria) this;
        }

        public Criteria andFeedbackNotBetween(String value1, String value2) {
            addCriterion("feedback not between", value1, value2, "feedback");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("`state` is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("`state` is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Integer value) {
            addCriterion("`state` =", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andStateEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("`state` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Integer value) {
            addCriterion("`state` <>", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andStateNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("`state` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Integer value) {
            addCriterion("`state` >", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andStateGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("`state` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("`state` >=", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andStateGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("`state` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Integer value) {
            addCriterion("`state` <", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andStateLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("`state` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Integer value) {
            addCriterion("`state` <=", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andStateLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("`state` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Integer> values) {
            addCriterion("`state` in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Integer> values) {
            addCriterion("`state` not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Integer value1, Integer value2) {
            addCriterion("`state` between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Integer value1, Integer value2) {
            addCriterion("`state` not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andTableTypeIsNull() {
            addCriterion("table_type is null");
            return (Criteria) this;
        }

        public Criteria andTableTypeIsNotNull() {
            addCriterion("table_type is not null");
            return (Criteria) this;
        }

        public Criteria andTableTypeEqualTo(String value) {
            addCriterion("table_type =", value, "tableType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andTableTypeEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("table_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTableTypeNotEqualTo(String value) {
            addCriterion("table_type <>", value, "tableType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andTableTypeNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("table_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTableTypeGreaterThan(String value) {
            addCriterion("table_type >", value, "tableType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andTableTypeGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("table_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTableTypeGreaterThanOrEqualTo(String value) {
            addCriterion("table_type >=", value, "tableType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andTableTypeGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("table_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTableTypeLessThan(String value) {
            addCriterion("table_type <", value, "tableType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andTableTypeLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("table_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTableTypeLessThanOrEqualTo(String value) {
            addCriterion("table_type <=", value, "tableType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andTableTypeLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("table_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTableTypeLike(String value) {
            addCriterion("table_type like", value, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeNotLike(String value) {
            addCriterion("table_type not like", value, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeIn(List<String> values) {
            addCriterion("table_type in", values, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeNotIn(List<String> values) {
            addCriterion("table_type not in", values, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeBetween(String value1, String value2) {
            addCriterion("table_type between", value1, value2, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeNotBetween(String value1, String value2) {
            addCriterion("table_type not between", value1, value2, "tableType");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TMgmObjectionHandling.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        private TMgmObjectionHandlingExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        protected Criteria(TMgmObjectionHandlingExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public TMgmObjectionHandlingExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_mgm_objection_handling
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mgm_objection_handling
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_objection_handling
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TMgmObjectionHandlingExample example);
    }
}