package com.huizhi.supplier.db.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TMgmBlackNameListCheckExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public TMgmBlackNameListCheckExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public TMgmBlackNameListCheckExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public TMgmBlackNameListCheckExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TMgmBlackNameListCheckExample example = new TMgmBlackNameListCheckExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public TMgmBlackNameListCheckExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public TMgmBlackNameListCheckExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBlackIdIsNull() {
            addCriterion("black_id is null");
            return (Criteria) this;
        }

        public Criteria andBlackIdIsNotNull() {
            addCriterion("black_id is not null");
            return (Criteria) this;
        }

        public Criteria andBlackIdEqualTo(String value) {
            addCriterion("black_id =", value, "blackId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andBlackIdEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("black_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlackIdNotEqualTo(String value) {
            addCriterion("black_id <>", value, "blackId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andBlackIdNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("black_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlackIdGreaterThan(String value) {
            addCriterion("black_id >", value, "blackId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andBlackIdGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("black_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlackIdGreaterThanOrEqualTo(String value) {
            addCriterion("black_id >=", value, "blackId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andBlackIdGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("black_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlackIdLessThan(String value) {
            addCriterion("black_id <", value, "blackId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andBlackIdLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("black_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlackIdLessThanOrEqualTo(String value) {
            addCriterion("black_id <=", value, "blackId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andBlackIdLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("black_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBlackIdLike(String value) {
            addCriterion("black_id like", value, "blackId");
            return (Criteria) this;
        }

        public Criteria andBlackIdNotLike(String value) {
            addCriterion("black_id not like", value, "blackId");
            return (Criteria) this;
        }

        public Criteria andBlackIdIn(List<String> values) {
            addCriterion("black_id in", values, "blackId");
            return (Criteria) this;
        }

        public Criteria andBlackIdNotIn(List<String> values) {
            addCriterion("black_id not in", values, "blackId");
            return (Criteria) this;
        }

        public Criteria andBlackIdBetween(String value1, String value2) {
            addCriterion("black_id between", value1, value2, "blackId");
            return (Criteria) this;
        }

        public Criteria andBlackIdNotBetween(String value1, String value2) {
            addCriterion("black_id not between", value1, value2, "blackId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andCreditCodeIsNull() {
            addCriterion("credit_code is null");
            return (Criteria) this;
        }

        public Criteria andCreditCodeIsNotNull() {
            addCriterion("credit_code is not null");
            return (Criteria) this;
        }

        public Criteria andCreditCodeEqualTo(String value) {
            addCriterion("credit_code =", value, "creditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCreditCodeEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("credit_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotEqualTo(String value) {
            addCriterion("credit_code <>", value, "creditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCreditCodeNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("credit_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeGreaterThan(String value) {
            addCriterion("credit_code >", value, "creditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCreditCodeGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("credit_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeGreaterThanOrEqualTo(String value) {
            addCriterion("credit_code >=", value, "creditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCreditCodeGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("credit_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeLessThan(String value) {
            addCriterion("credit_code <", value, "creditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCreditCodeLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("credit_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeLessThanOrEqualTo(String value) {
            addCriterion("credit_code <=", value, "creditCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCreditCodeLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("credit_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeLike(String value) {
            addCriterion("credit_code like", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotLike(String value) {
            addCriterion("credit_code not like", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeIn(List<String> values) {
            addCriterion("credit_code in", values, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotIn(List<String> values) {
            addCriterion("credit_code not in", values, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeBetween(String value1, String value2) {
            addCriterion("credit_code between", value1, value2, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotBetween(String value1, String value2) {
            addCriterion("credit_code not between", value1, value2, "creditCode");
            return (Criteria) this;
        }

        public Criteria andOrgCodeIsNull() {
            addCriterion("org_code is null");
            return (Criteria) this;
        }

        public Criteria andOrgCodeIsNotNull() {
            addCriterion("org_code is not null");
            return (Criteria) this;
        }

        public Criteria andOrgCodeEqualTo(String value) {
            addCriterion("org_code =", value, "orgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andOrgCodeEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("org_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgCodeNotEqualTo(String value) {
            addCriterion("org_code <>", value, "orgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andOrgCodeNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("org_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgCodeGreaterThan(String value) {
            addCriterion("org_code >", value, "orgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andOrgCodeGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("org_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgCodeGreaterThanOrEqualTo(String value) {
            addCriterion("org_code >=", value, "orgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andOrgCodeGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("org_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgCodeLessThan(String value) {
            addCriterion("org_code <", value, "orgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andOrgCodeLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("org_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgCodeLessThanOrEqualTo(String value) {
            addCriterion("org_code <=", value, "orgCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andOrgCodeLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("org_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgCodeLike(String value) {
            addCriterion("org_code like", value, "orgCode");
            return (Criteria) this;
        }

        public Criteria andOrgCodeNotLike(String value) {
            addCriterion("org_code not like", value, "orgCode");
            return (Criteria) this;
        }

        public Criteria andOrgCodeIn(List<String> values) {
            addCriterion("org_code in", values, "orgCode");
            return (Criteria) this;
        }

        public Criteria andOrgCodeNotIn(List<String> values) {
            addCriterion("org_code not in", values, "orgCode");
            return (Criteria) this;
        }

        public Criteria andOrgCodeBetween(String value1, String value2) {
            addCriterion("org_code between", value1, value2, "orgCode");
            return (Criteria) this;
        }

        public Criteria andOrgCodeNotBetween(String value1, String value2) {
            addCriterion("org_code not between", value1, value2, "orgCode");
            return (Criteria) this;
        }

        public Criteria andRegisterCodeIsNull() {
            addCriterion("register_code is null");
            return (Criteria) this;
        }

        public Criteria andRegisterCodeIsNotNull() {
            addCriterion("register_code is not null");
            return (Criteria) this;
        }

        public Criteria andRegisterCodeEqualTo(String value) {
            addCriterion("register_code =", value, "registerCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andRegisterCodeEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("register_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisterCodeNotEqualTo(String value) {
            addCriterion("register_code <>", value, "registerCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andRegisterCodeNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("register_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisterCodeGreaterThan(String value) {
            addCriterion("register_code >", value, "registerCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andRegisterCodeGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("register_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisterCodeGreaterThanOrEqualTo(String value) {
            addCriterion("register_code >=", value, "registerCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andRegisterCodeGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("register_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisterCodeLessThan(String value) {
            addCriterion("register_code <", value, "registerCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andRegisterCodeLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("register_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisterCodeLessThanOrEqualTo(String value) {
            addCriterion("register_code <=", value, "registerCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andRegisterCodeLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("register_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisterCodeLike(String value) {
            addCriterion("register_code like", value, "registerCode");
            return (Criteria) this;
        }

        public Criteria andRegisterCodeNotLike(String value) {
            addCriterion("register_code not like", value, "registerCode");
            return (Criteria) this;
        }

        public Criteria andRegisterCodeIn(List<String> values) {
            addCriterion("register_code in", values, "registerCode");
            return (Criteria) this;
        }

        public Criteria andRegisterCodeNotIn(List<String> values) {
            addCriterion("register_code not in", values, "registerCode");
            return (Criteria) this;
        }

        public Criteria andRegisterCodeBetween(String value1, String value2) {
            addCriterion("register_code between", value1, value2, "registerCode");
            return (Criteria) this;
        }

        public Criteria andRegisterCodeNotBetween(String value1, String value2) {
            addCriterion("register_code not between", value1, value2, "registerCode");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("`state` is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("`state` is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(String value) {
            addCriterion("`state` =", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andStateEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`state` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(String value) {
            addCriterion("`state` <>", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andStateNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`state` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(String value) {
            addCriterion("`state` >", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andStateGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`state` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(String value) {
            addCriterion("`state` >=", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andStateGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`state` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLessThan(String value) {
            addCriterion("`state` <", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andStateLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`state` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(String value) {
            addCriterion("`state` <=", value, "state");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andStateLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("`state` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStateLike(String value) {
            addCriterion("`state` like", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotLike(String value) {
            addCriterion("`state` not like", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<String> values) {
            addCriterion("`state` in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<String> values) {
            addCriterion("`state` not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(String value1, String value2) {
            addCriterion("`state` between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(String value1, String value2) {
            addCriterion("`state` not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistIsNull() {
            addCriterion("Join_the_blacklist is null");
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistIsNotNull() {
            addCriterion("Join_the_blacklist is not null");
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistEqualTo(String value) {
            addCriterion("Join_the_blacklist =", value, "joinTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andJoinTheBlacklistEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("Join_the_blacklist = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistNotEqualTo(String value) {
            addCriterion("Join_the_blacklist <>", value, "joinTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andJoinTheBlacklistNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("Join_the_blacklist <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistGreaterThan(String value) {
            addCriterion("Join_the_blacklist >", value, "joinTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andJoinTheBlacklistGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("Join_the_blacklist > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistGreaterThanOrEqualTo(String value) {
            addCriterion("Join_the_blacklist >=", value, "joinTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andJoinTheBlacklistGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("Join_the_blacklist >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistLessThan(String value) {
            addCriterion("Join_the_blacklist <", value, "joinTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andJoinTheBlacklistLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("Join_the_blacklist < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistLessThanOrEqualTo(String value) {
            addCriterion("Join_the_blacklist <=", value, "joinTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andJoinTheBlacklistLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("Join_the_blacklist <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistLike(String value) {
            addCriterion("Join_the_blacklist like", value, "joinTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistNotLike(String value) {
            addCriterion("Join_the_blacklist not like", value, "joinTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistIn(List<String> values) {
            addCriterion("Join_the_blacklist in", values, "joinTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistNotIn(List<String> values) {
            addCriterion("Join_the_blacklist not in", values, "joinTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistBetween(String value1, String value2) {
            addCriterion("Join_the_blacklist between", value1, value2, "joinTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andJoinTheBlacklistNotBetween(String value1, String value2) {
            addCriterion("Join_the_blacklist not between", value1, value2, "joinTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistIsNull() {
            addCriterion("approved_the_blacklist is null");
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistIsNotNull() {
            addCriterion("approved_the_blacklist is not null");
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistEqualTo(String value) {
            addCriterion("approved_the_blacklist =", value, "approvedTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedTheBlacklistEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_the_blacklist = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistNotEqualTo(String value) {
            addCriterion("approved_the_blacklist <>", value, "approvedTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedTheBlacklistNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_the_blacklist <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistGreaterThan(String value) {
            addCriterion("approved_the_blacklist >", value, "approvedTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedTheBlacklistGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_the_blacklist > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistGreaterThanOrEqualTo(String value) {
            addCriterion("approved_the_blacklist >=", value, "approvedTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedTheBlacklistGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_the_blacklist >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistLessThan(String value) {
            addCriterion("approved_the_blacklist <", value, "approvedTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedTheBlacklistLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_the_blacklist < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistLessThanOrEqualTo(String value) {
            addCriterion("approved_the_blacklist <=", value, "approvedTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedTheBlacklistLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_the_blacklist <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistLike(String value) {
            addCriterion("approved_the_blacklist like", value, "approvedTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistNotLike(String value) {
            addCriterion("approved_the_blacklist not like", value, "approvedTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistIn(List<String> values) {
            addCriterion("approved_the_blacklist in", values, "approvedTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistNotIn(List<String> values) {
            addCriterion("approved_the_blacklist not in", values, "approvedTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistBetween(String value1, String value2) {
            addCriterion("approved_the_blacklist between", value1, value2, "approvedTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedTheBlacklistNotBetween(String value1, String value2) {
            addCriterion("approved_the_blacklist not between", value1, value2, "approvedTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistIsNull() {
            addCriterion("audit_not_through_the_blacklist is null");
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistIsNotNull() {
            addCriterion("audit_not_through_the_blacklist is not null");
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistEqualTo(String value) {
            addCriterion("audit_not_through_the_blacklist =", value, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditNotThroughTheBlacklistEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_not_through_the_blacklist = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistNotEqualTo(String value) {
            addCriterion("audit_not_through_the_blacklist <>", value, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditNotThroughTheBlacklistNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_not_through_the_blacklist <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistGreaterThan(String value) {
            addCriterion("audit_not_through_the_blacklist >", value, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditNotThroughTheBlacklistGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_not_through_the_blacklist > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistGreaterThanOrEqualTo(String value) {
            addCriterion("audit_not_through_the_blacklist >=", value, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditNotThroughTheBlacklistGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_not_through_the_blacklist >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistLessThan(String value) {
            addCriterion("audit_not_through_the_blacklist <", value, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditNotThroughTheBlacklistLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_not_through_the_blacklist < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistLessThanOrEqualTo(String value) {
            addCriterion("audit_not_through_the_blacklist <=", value, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditNotThroughTheBlacklistLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_not_through_the_blacklist <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistLike(String value) {
            addCriterion("audit_not_through_the_blacklist like", value, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistNotLike(String value) {
            addCriterion("audit_not_through_the_blacklist not like", value, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistIn(List<String> values) {
            addCriterion("audit_not_through_the_blacklist in", values, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistNotIn(List<String> values) {
            addCriterion("audit_not_through_the_blacklist not in", values, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistBetween(String value1, String value2) {
            addCriterion("audit_not_through_the_blacklist between", value1, value2, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditNotThroughTheBlacklistNotBetween(String value1, String value2) {
            addCriterion("audit_not_through_the_blacklist not between", value1, value2, "auditNotThroughTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonIsNull() {
            addCriterion("cancel_the_blacklist_reason is null");
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonIsNotNull() {
            addCriterion("cancel_the_blacklist_reason is not null");
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonEqualTo(String value) {
            addCriterion("cancel_the_blacklist_reason =", value, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCancelTheBlacklistReasonEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("cancel_the_blacklist_reason = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonNotEqualTo(String value) {
            addCriterion("cancel_the_blacklist_reason <>", value, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCancelTheBlacklistReasonNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("cancel_the_blacklist_reason <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonGreaterThan(String value) {
            addCriterion("cancel_the_blacklist_reason >", value, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCancelTheBlacklistReasonGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("cancel_the_blacklist_reason > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonGreaterThanOrEqualTo(String value) {
            addCriterion("cancel_the_blacklist_reason >=", value, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCancelTheBlacklistReasonGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("cancel_the_blacklist_reason >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonLessThan(String value) {
            addCriterion("cancel_the_blacklist_reason <", value, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCancelTheBlacklistReasonLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("cancel_the_blacklist_reason < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonLessThanOrEqualTo(String value) {
            addCriterion("cancel_the_blacklist_reason <=", value, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCancelTheBlacklistReasonLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("cancel_the_blacklist_reason <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonLike(String value) {
            addCriterion("cancel_the_blacklist_reason like", value, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonNotLike(String value) {
            addCriterion("cancel_the_blacklist_reason not like", value, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonIn(List<String> values) {
            addCriterion("cancel_the_blacklist_reason in", values, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonNotIn(List<String> values) {
            addCriterion("cancel_the_blacklist_reason not in", values, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonBetween(String value1, String value2) {
            addCriterion("cancel_the_blacklist_reason between", value1, value2, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        public Criteria andCancelTheBlacklistReasonNotBetween(String value1, String value2) {
            addCriterion("cancel_the_blacklist_reason not between", value1, value2, "cancelTheBlacklistReason");
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistIsNull() {
            addCriterion("approved_cancel_the_blacklist is null");
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistIsNotNull() {
            addCriterion("approved_cancel_the_blacklist is not null");
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistEqualTo(String value) {
            addCriterion("approved_cancel_the_blacklist =", value, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedCancelTheBlacklistEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_cancel_the_blacklist = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistNotEqualTo(String value) {
            addCriterion("approved_cancel_the_blacklist <>", value, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedCancelTheBlacklistNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_cancel_the_blacklist <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistGreaterThan(String value) {
            addCriterion("approved_cancel_the_blacklist >", value, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedCancelTheBlacklistGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_cancel_the_blacklist > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistGreaterThanOrEqualTo(String value) {
            addCriterion("approved_cancel_the_blacklist >=", value, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedCancelTheBlacklistGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_cancel_the_blacklist >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistLessThan(String value) {
            addCriterion("approved_cancel_the_blacklist <", value, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedCancelTheBlacklistLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_cancel_the_blacklist < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistLessThanOrEqualTo(String value) {
            addCriterion("approved_cancel_the_blacklist <=", value, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApprovedCancelTheBlacklistLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("approved_cancel_the_blacklist <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistLike(String value) {
            addCriterion("approved_cancel_the_blacklist like", value, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistNotLike(String value) {
            addCriterion("approved_cancel_the_blacklist not like", value, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistIn(List<String> values) {
            addCriterion("approved_cancel_the_blacklist in", values, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistNotIn(List<String> values) {
            addCriterion("approved_cancel_the_blacklist not in", values, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistBetween(String value1, String value2) {
            addCriterion("approved_cancel_the_blacklist between", value1, value2, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andApprovedCancelTheBlacklistNotBetween(String value1, String value2) {
            addCriterion("approved_cancel_the_blacklist not between", value1, value2, "approvedCancelTheBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistIsNull() {
            addCriterion("audit_is_not_by_eliminating_blacklist is null");
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistIsNotNull() {
            addCriterion("audit_is_not_by_eliminating_blacklist is not null");
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistEqualTo(String value) {
            addCriterion("audit_is_not_by_eliminating_blacklist =", value, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditIsNotByEliminatingBlacklistEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_is_not_by_eliminating_blacklist = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistNotEqualTo(String value) {
            addCriterion("audit_is_not_by_eliminating_blacklist <>", value, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditIsNotByEliminatingBlacklistNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_is_not_by_eliminating_blacklist <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistGreaterThan(String value) {
            addCriterion("audit_is_not_by_eliminating_blacklist >", value, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditIsNotByEliminatingBlacklistGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_is_not_by_eliminating_blacklist > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistGreaterThanOrEqualTo(String value) {
            addCriterion("audit_is_not_by_eliminating_blacklist >=", value, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditIsNotByEliminatingBlacklistGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_is_not_by_eliminating_blacklist >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistLessThan(String value) {
            addCriterion("audit_is_not_by_eliminating_blacklist <", value, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditIsNotByEliminatingBlacklistLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_is_not_by_eliminating_blacklist < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistLessThanOrEqualTo(String value) {
            addCriterion("audit_is_not_by_eliminating_blacklist <=", value, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andAuditIsNotByEliminatingBlacklistLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("audit_is_not_by_eliminating_blacklist <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistLike(String value) {
            addCriterion("audit_is_not_by_eliminating_blacklist like", value, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistNotLike(String value) {
            addCriterion("audit_is_not_by_eliminating_blacklist not like", value, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistIn(List<String> values) {
            addCriterion("audit_is_not_by_eliminating_blacklist in", values, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistNotIn(List<String> values) {
            addCriterion("audit_is_not_by_eliminating_blacklist not in", values, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistBetween(String value1, String value2) {
            addCriterion("audit_is_not_by_eliminating_blacklist between", value1, value2, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        public Criteria andAuditIsNotByEliminatingBlacklistNotBetween(String value1, String value2) {
            addCriterion("audit_is_not_by_eliminating_blacklist not between", value1, value2, "auditIsNotByEliminatingBlacklist");
            return (Criteria) this;
        }

        public Criteria andApplyUserIdIsNull() {
            addCriterion("apply_user_id is null");
            return (Criteria) this;
        }

        public Criteria andApplyUserIdIsNotNull() {
            addCriterion("apply_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andApplyUserIdEqualTo(String value) {
            addCriterion("apply_user_id =", value, "applyUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserIdEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserIdNotEqualTo(String value) {
            addCriterion("apply_user_id <>", value, "applyUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserIdNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserIdGreaterThan(String value) {
            addCriterion("apply_user_id >", value, "applyUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserIdGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("apply_user_id >=", value, "applyUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserIdGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserIdLessThan(String value) {
            addCriterion("apply_user_id <", value, "applyUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserIdLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserIdLessThanOrEqualTo(String value) {
            addCriterion("apply_user_id <=", value, "applyUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserIdLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserIdLike(String value) {
            addCriterion("apply_user_id like", value, "applyUserId");
            return (Criteria) this;
        }

        public Criteria andApplyUserIdNotLike(String value) {
            addCriterion("apply_user_id not like", value, "applyUserId");
            return (Criteria) this;
        }

        public Criteria andApplyUserIdIn(List<String> values) {
            addCriterion("apply_user_id in", values, "applyUserId");
            return (Criteria) this;
        }

        public Criteria andApplyUserIdNotIn(List<String> values) {
            addCriterion("apply_user_id not in", values, "applyUserId");
            return (Criteria) this;
        }

        public Criteria andApplyUserIdBetween(String value1, String value2) {
            addCriterion("apply_user_id between", value1, value2, "applyUserId");
            return (Criteria) this;
        }

        public Criteria andApplyUserIdNotBetween(String value1, String value2) {
            addCriterion("apply_user_id not between", value1, value2, "applyUserId");
            return (Criteria) this;
        }

        public Criteria andApplyUserNameIsNull() {
            addCriterion("apply_user_name is null");
            return (Criteria) this;
        }

        public Criteria andApplyUserNameIsNotNull() {
            addCriterion("apply_user_name is not null");
            return (Criteria) this;
        }

        public Criteria andApplyUserNameEqualTo(String value) {
            addCriterion("apply_user_name =", value, "applyUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserNameEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserNameNotEqualTo(String value) {
            addCriterion("apply_user_name <>", value, "applyUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserNameNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserNameGreaterThan(String value) {
            addCriterion("apply_user_name >", value, "applyUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserNameGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("apply_user_name >=", value, "applyUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserNameGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserNameLessThan(String value) {
            addCriterion("apply_user_name <", value, "applyUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserNameLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserNameLessThanOrEqualTo(String value) {
            addCriterion("apply_user_name <=", value, "applyUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyUserNameLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_user_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyUserNameLike(String value) {
            addCriterion("apply_user_name like", value, "applyUserName");
            return (Criteria) this;
        }

        public Criteria andApplyUserNameNotLike(String value) {
            addCriterion("apply_user_name not like", value, "applyUserName");
            return (Criteria) this;
        }

        public Criteria andApplyUserNameIn(List<String> values) {
            addCriterion("apply_user_name in", values, "applyUserName");
            return (Criteria) this;
        }

        public Criteria andApplyUserNameNotIn(List<String> values) {
            addCriterion("apply_user_name not in", values, "applyUserName");
            return (Criteria) this;
        }

        public Criteria andApplyUserNameBetween(String value1, String value2) {
            addCriterion("apply_user_name between", value1, value2, "applyUserName");
            return (Criteria) this;
        }

        public Criteria andApplyUserNameNotBetween(String value1, String value2) {
            addCriterion("apply_user_name not between", value1, value2, "applyUserName");
            return (Criteria) this;
        }

        public Criteria andApplyTimeIsNull() {
            addCriterion("apply_time is null");
            return (Criteria) this;
        }

        public Criteria andApplyTimeIsNotNull() {
            addCriterion("apply_time is not null");
            return (Criteria) this;
        }

        public Criteria andApplyTimeEqualTo(LocalDateTime value) {
            addCriterion("apply_time =", value, "applyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyTimeEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("apply_time <>", value, "applyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyTimeNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyTimeGreaterThan(LocalDateTime value) {
            addCriterion("apply_time >", value, "applyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyTimeGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("apply_time >=", value, "applyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyTimeGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyTimeLessThan(LocalDateTime value) {
            addCriterion("apply_time <", value, "applyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyTimeLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("apply_time <=", value, "applyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andApplyTimeLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("apply_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApplyTimeIn(List<LocalDateTime> values) {
            addCriterion("apply_time in", values, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("apply_time not in", values, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("apply_time between", value1, value2, "applyTime");
            return (Criteria) this;
        }

        public Criteria andApplyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("apply_time not between", value1, value2, "applyTime");
            return (Criteria) this;
        }

        public Criteria andCheckUserNameIsNull() {
            addCriterion("check_user_name is null");
            return (Criteria) this;
        }

        public Criteria andCheckUserNameIsNotNull() {
            addCriterion("check_user_name is not null");
            return (Criteria) this;
        }

        public Criteria andCheckUserNameEqualTo(String value) {
            addCriterion("check_user_name =", value, "checkUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserNameEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserNameNotEqualTo(String value) {
            addCriterion("check_user_name <>", value, "checkUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserNameNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserNameGreaterThan(String value) {
            addCriterion("check_user_name >", value, "checkUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserNameGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("check_user_name >=", value, "checkUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserNameGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserNameLessThan(String value) {
            addCriterion("check_user_name <", value, "checkUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserNameLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserNameLessThanOrEqualTo(String value) {
            addCriterion("check_user_name <=", value, "checkUserName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserNameLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserNameLike(String value) {
            addCriterion("check_user_name like", value, "checkUserName");
            return (Criteria) this;
        }

        public Criteria andCheckUserNameNotLike(String value) {
            addCriterion("check_user_name not like", value, "checkUserName");
            return (Criteria) this;
        }

        public Criteria andCheckUserNameIn(List<String> values) {
            addCriterion("check_user_name in", values, "checkUserName");
            return (Criteria) this;
        }

        public Criteria andCheckUserNameNotIn(List<String> values) {
            addCriterion("check_user_name not in", values, "checkUserName");
            return (Criteria) this;
        }

        public Criteria andCheckUserNameBetween(String value1, String value2) {
            addCriterion("check_user_name between", value1, value2, "checkUserName");
            return (Criteria) this;
        }

        public Criteria andCheckUserNameNotBetween(String value1, String value2) {
            addCriterion("check_user_name not between", value1, value2, "checkUserName");
            return (Criteria) this;
        }

        public Criteria andCheckUserIdIsNull() {
            addCriterion("check_user_id is null");
            return (Criteria) this;
        }

        public Criteria andCheckUserIdIsNotNull() {
            addCriterion("check_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andCheckUserIdEqualTo(String value) {
            addCriterion("check_user_id =", value, "checkUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserIdEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserIdNotEqualTo(String value) {
            addCriterion("check_user_id <>", value, "checkUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserIdNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserIdGreaterThan(String value) {
            addCriterion("check_user_id >", value, "checkUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserIdGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("check_user_id >=", value, "checkUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserIdGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserIdLessThan(String value) {
            addCriterion("check_user_id <", value, "checkUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserIdLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserIdLessThanOrEqualTo(String value) {
            addCriterion("check_user_id <=", value, "checkUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckUserIdLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckUserIdLike(String value) {
            addCriterion("check_user_id like", value, "checkUserId");
            return (Criteria) this;
        }

        public Criteria andCheckUserIdNotLike(String value) {
            addCriterion("check_user_id not like", value, "checkUserId");
            return (Criteria) this;
        }

        public Criteria andCheckUserIdIn(List<String> values) {
            addCriterion("check_user_id in", values, "checkUserId");
            return (Criteria) this;
        }

        public Criteria andCheckUserIdNotIn(List<String> values) {
            addCriterion("check_user_id not in", values, "checkUserId");
            return (Criteria) this;
        }

        public Criteria andCheckUserIdBetween(String value1, String value2) {
            addCriterion("check_user_id between", value1, value2, "checkUserId");
            return (Criteria) this;
        }

        public Criteria andCheckUserIdNotBetween(String value1, String value2) {
            addCriterion("check_user_id not between", value1, value2, "checkUserId");
            return (Criteria) this;
        }

        public Criteria andCheckTimeIsNull() {
            addCriterion("check_time is null");
            return (Criteria) this;
        }

        public Criteria andCheckTimeIsNotNull() {
            addCriterion("check_time is not null");
            return (Criteria) this;
        }

        public Criteria andCheckTimeEqualTo(LocalDateTime value) {
            addCriterion("check_time =", value, "checkTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckTimeEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckTimeNotEqualTo(LocalDateTime value) {
            addCriterion("check_time <>", value, "checkTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckTimeNotEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckTimeGreaterThan(LocalDateTime value) {
            addCriterion("check_time >", value, "checkTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckTimeGreaterThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("check_time >=", value, "checkTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckTimeGreaterThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckTimeLessThan(LocalDateTime value) {
            addCriterion("check_time <", value, "checkTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckTimeLessThanColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("check_time <=", value, "checkTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria andCheckTimeLessThanOrEqualToColumn(TMgmBlackNameListCheck.Column column) {
            addCriterion(new StringBuilder("check_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckTimeIn(List<LocalDateTime> values) {
            addCriterion("check_time in", values, "checkTime");
            return (Criteria) this;
        }

        public Criteria andCheckTimeNotIn(List<LocalDateTime> values) {
            addCriterion("check_time not in", values, "checkTime");
            return (Criteria) this;
        }

        public Criteria andCheckTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("check_time between", value1, value2, "checkTime");
            return (Criteria) this;
        }

        public Criteria andCheckTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("check_time not between", value1, value2, "checkTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        private TMgmBlackNameListCheckExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        protected Criteria(TMgmBlackNameListCheckExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public TMgmBlackNameListCheckExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_mgm_black_name_list_check
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mgm_black_name_list_check
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_mgm_black_name_list_check
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TMgmBlackNameListCheckExample example);
    }
}