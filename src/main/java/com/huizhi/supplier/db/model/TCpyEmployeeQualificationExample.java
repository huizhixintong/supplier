package com.huizhi.supplier.db.model;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyEmployeeQualificationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public TCpyEmployeeQualificationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public TCpyEmployeeQualificationExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public TCpyEmployeeQualificationExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyEmployeeQualificationExample example = new TCpyEmployeeQualificationExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public TCpyEmployeeQualificationExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public TCpyEmployeeQualificationExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Integer value1, Integer value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andEmployeeNameIsNull() {
            addCriterion("employee_name is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeNameIsNotNull() {
            addCriterion("employee_name is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeNameEqualTo(String value) {
            addCriterion("employee_name =", value, "employeeName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEmployeeNameEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("employee_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeNameNotEqualTo(String value) {
            addCriterion("employee_name <>", value, "employeeName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEmployeeNameNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("employee_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeNameGreaterThan(String value) {
            addCriterion("employee_name >", value, "employeeName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEmployeeNameGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("employee_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeNameGreaterThanOrEqualTo(String value) {
            addCriterion("employee_name >=", value, "employeeName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEmployeeNameGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("employee_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeNameLessThan(String value) {
            addCriterion("employee_name <", value, "employeeName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEmployeeNameLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("employee_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeNameLessThanOrEqualTo(String value) {
            addCriterion("employee_name <=", value, "employeeName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEmployeeNameLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("employee_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeNameLike(String value) {
            addCriterion("employee_name like", value, "employeeName");
            return (Criteria) this;
        }

        public Criteria andEmployeeNameNotLike(String value) {
            addCriterion("employee_name not like", value, "employeeName");
            return (Criteria) this;
        }

        public Criteria andEmployeeNameIn(List<String> values) {
            addCriterion("employee_name in", values, "employeeName");
            return (Criteria) this;
        }

        public Criteria andEmployeeNameNotIn(List<String> values) {
            addCriterion("employee_name not in", values, "employeeName");
            return (Criteria) this;
        }

        public Criteria andEmployeeNameBetween(String value1, String value2) {
            addCriterion("employee_name between", value1, value2, "employeeName");
            return (Criteria) this;
        }

        public Criteria andEmployeeNameNotBetween(String value1, String value2) {
            addCriterion("employee_name not between", value1, value2, "employeeName");
            return (Criteria) this;
        }

        public Criteria andQualificationNameIsNull() {
            addCriterion("qualification_name is null");
            return (Criteria) this;
        }

        public Criteria andQualificationNameIsNotNull() {
            addCriterion("qualification_name is not null");
            return (Criteria) this;
        }

        public Criteria andQualificationNameEqualTo(String value) {
            addCriterion("qualification_name =", value, "qualificationName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNameEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNameNotEqualTo(String value) {
            addCriterion("qualification_name <>", value, "qualificationName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNameNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNameGreaterThan(String value) {
            addCriterion("qualification_name >", value, "qualificationName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNameGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNameGreaterThanOrEqualTo(String value) {
            addCriterion("qualification_name >=", value, "qualificationName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNameGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNameLessThan(String value) {
            addCriterion("qualification_name <", value, "qualificationName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNameLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNameLessThanOrEqualTo(String value) {
            addCriterion("qualification_name <=", value, "qualificationName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNameLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNameLike(String value) {
            addCriterion("qualification_name like", value, "qualificationName");
            return (Criteria) this;
        }

        public Criteria andQualificationNameNotLike(String value) {
            addCriterion("qualification_name not like", value, "qualificationName");
            return (Criteria) this;
        }

        public Criteria andQualificationNameIn(List<String> values) {
            addCriterion("qualification_name in", values, "qualificationName");
            return (Criteria) this;
        }

        public Criteria andQualificationNameNotIn(List<String> values) {
            addCriterion("qualification_name not in", values, "qualificationName");
            return (Criteria) this;
        }

        public Criteria andQualificationNameBetween(String value1, String value2) {
            addCriterion("qualification_name between", value1, value2, "qualificationName");
            return (Criteria) this;
        }

        public Criteria andQualificationNameNotBetween(String value1, String value2) {
            addCriterion("qualification_name not between", value1, value2, "qualificationName");
            return (Criteria) this;
        }

        public Criteria andQualificationNoIsNull() {
            addCriterion("qualification_no is null");
            return (Criteria) this;
        }

        public Criteria andQualificationNoIsNotNull() {
            addCriterion("qualification_no is not null");
            return (Criteria) this;
        }

        public Criteria andQualificationNoEqualTo(String value) {
            addCriterion("qualification_no =", value, "qualificationNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNoEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_no = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNoNotEqualTo(String value) {
            addCriterion("qualification_no <>", value, "qualificationNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNoNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_no <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNoGreaterThan(String value) {
            addCriterion("qualification_no >", value, "qualificationNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNoGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_no > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNoGreaterThanOrEqualTo(String value) {
            addCriterion("qualification_no >=", value, "qualificationNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNoGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_no >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNoLessThan(String value) {
            addCriterion("qualification_no <", value, "qualificationNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNoLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_no < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNoLessThanOrEqualTo(String value) {
            addCriterion("qualification_no <=", value, "qualificationNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationNoLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_no <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNoLike(String value) {
            addCriterion("qualification_no like", value, "qualificationNo");
            return (Criteria) this;
        }

        public Criteria andQualificationNoNotLike(String value) {
            addCriterion("qualification_no not like", value, "qualificationNo");
            return (Criteria) this;
        }

        public Criteria andQualificationNoIn(List<String> values) {
            addCriterion("qualification_no in", values, "qualificationNo");
            return (Criteria) this;
        }

        public Criteria andQualificationNoNotIn(List<String> values) {
            addCriterion("qualification_no not in", values, "qualificationNo");
            return (Criteria) this;
        }

        public Criteria andQualificationNoBetween(String value1, String value2) {
            addCriterion("qualification_no between", value1, value2, "qualificationNo");
            return (Criteria) this;
        }

        public Criteria andQualificationNoNotBetween(String value1, String value2) {
            addCriterion("qualification_no not between", value1, value2, "qualificationNo");
            return (Criteria) this;
        }

        public Criteria andIssuedOrganIsNull() {
            addCriterion("issued_organ is null");
            return (Criteria) this;
        }

        public Criteria andIssuedOrganIsNotNull() {
            addCriterion("issued_organ is not null");
            return (Criteria) this;
        }

        public Criteria andIssuedOrganEqualTo(String value) {
            addCriterion("issued_organ =", value, "issuedOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIssuedOrganEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("issued_organ = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssuedOrganNotEqualTo(String value) {
            addCriterion("issued_organ <>", value, "issuedOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIssuedOrganNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("issued_organ <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssuedOrganGreaterThan(String value) {
            addCriterion("issued_organ >", value, "issuedOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIssuedOrganGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("issued_organ > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssuedOrganGreaterThanOrEqualTo(String value) {
            addCriterion("issued_organ >=", value, "issuedOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIssuedOrganGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("issued_organ >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssuedOrganLessThan(String value) {
            addCriterion("issued_organ <", value, "issuedOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIssuedOrganLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("issued_organ < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssuedOrganLessThanOrEqualTo(String value) {
            addCriterion("issued_organ <=", value, "issuedOrgan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andIssuedOrganLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("issued_organ <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIssuedOrganLike(String value) {
            addCriterion("issued_organ like", value, "issuedOrgan");
            return (Criteria) this;
        }

        public Criteria andIssuedOrganNotLike(String value) {
            addCriterion("issued_organ not like", value, "issuedOrgan");
            return (Criteria) this;
        }

        public Criteria andIssuedOrganIn(List<String> values) {
            addCriterion("issued_organ in", values, "issuedOrgan");
            return (Criteria) this;
        }

        public Criteria andIssuedOrganNotIn(List<String> values) {
            addCriterion("issued_organ not in", values, "issuedOrgan");
            return (Criteria) this;
        }

        public Criteria andIssuedOrganBetween(String value1, String value2) {
            addCriterion("issued_organ between", value1, value2, "issuedOrgan");
            return (Criteria) this;
        }

        public Criteria andIssuedOrganNotBetween(String value1, String value2) {
            addCriterion("issued_organ not between", value1, value2, "issuedOrgan");
            return (Criteria) this;
        }

        public Criteria andQualificationDateIsNull() {
            addCriterion("qualification_date is null");
            return (Criteria) this;
        }

        public Criteria andQualificationDateIsNotNull() {
            addCriterion("qualification_date is not null");
            return (Criteria) this;
        }

        public Criteria andQualificationDateEqualTo(LocalDateTime value) {
            addCriterion("qualification_date =", value, "qualificationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationDateEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationDateNotEqualTo(LocalDateTime value) {
            addCriterion("qualification_date <>", value, "qualificationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationDateNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationDateGreaterThan(LocalDateTime value) {
            addCriterion("qualification_date >", value, "qualificationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationDateGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("qualification_date >=", value, "qualificationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationDateGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationDateLessThan(LocalDateTime value) {
            addCriterion("qualification_date <", value, "qualificationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationDateLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("qualification_date <=", value, "qualificationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationDateLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationDateIn(List<LocalDateTime> values) {
            addCriterion("qualification_date in", values, "qualificationDate");
            return (Criteria) this;
        }

        public Criteria andQualificationDateNotIn(List<LocalDateTime> values) {
            addCriterion("qualification_date not in", values, "qualificationDate");
            return (Criteria) this;
        }

        public Criteria andQualificationDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("qualification_date between", value1, value2, "qualificationDate");
            return (Criteria) this;
        }

        public Criteria andQualificationDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("qualification_date not between", value1, value2, "qualificationDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateIsNull() {
            addCriterion("effective_date is null");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateIsNotNull() {
            addCriterion("effective_date is not null");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateEqualTo(String value) {
            addCriterion("effective_date =", value, "effectiveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEffectiveDateEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("effective_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectiveDateNotEqualTo(String value) {
            addCriterion("effective_date <>", value, "effectiveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEffectiveDateNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("effective_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectiveDateGreaterThan(String value) {
            addCriterion("effective_date >", value, "effectiveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEffectiveDateGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("effective_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectiveDateGreaterThanOrEqualTo(String value) {
            addCriterion("effective_date >=", value, "effectiveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEffectiveDateGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("effective_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectiveDateLessThan(String value) {
            addCriterion("effective_date <", value, "effectiveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEffectiveDateLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("effective_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectiveDateLessThanOrEqualTo(String value) {
            addCriterion("effective_date <=", value, "effectiveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andEffectiveDateLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("effective_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectiveDateLike(String value) {
            addCriterion("effective_date like", value, "effectiveDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateNotLike(String value) {
            addCriterion("effective_date not like", value, "effectiveDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateIn(List<String> values) {
            addCriterion("effective_date in", values, "effectiveDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateNotIn(List<String> values) {
            addCriterion("effective_date not in", values, "effectiveDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateBetween(String value1, String value2) {
            addCriterion("effective_date between", value1, value2, "effectiveDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateNotBetween(String value1, String value2) {
            addCriterion("effective_date not between", value1, value2, "effectiveDate");
            return (Criteria) this;
        }

        public Criteria andQualificationPathIsNull() {
            addCriterion("qualification_path is null");
            return (Criteria) this;
        }

        public Criteria andQualificationPathIsNotNull() {
            addCriterion("qualification_path is not null");
            return (Criteria) this;
        }

        public Criteria andQualificationPathEqualTo(String value) {
            addCriterion("qualification_path =", value, "qualificationPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationPathEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_path = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationPathNotEqualTo(String value) {
            addCriterion("qualification_path <>", value, "qualificationPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationPathNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_path <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationPathGreaterThan(String value) {
            addCriterion("qualification_path >", value, "qualificationPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationPathGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_path > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationPathGreaterThanOrEqualTo(String value) {
            addCriterion("qualification_path >=", value, "qualificationPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationPathGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_path >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationPathLessThan(String value) {
            addCriterion("qualification_path <", value, "qualificationPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationPathLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_path < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationPathLessThanOrEqualTo(String value) {
            addCriterion("qualification_path <=", value, "qualificationPath");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andQualificationPathLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("qualification_path <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationPathLike(String value) {
            addCriterion("qualification_path like", value, "qualificationPath");
            return (Criteria) this;
        }

        public Criteria andQualificationPathNotLike(String value) {
            addCriterion("qualification_path not like", value, "qualificationPath");
            return (Criteria) this;
        }

        public Criteria andQualificationPathIn(List<String> values) {
            addCriterion("qualification_path in", values, "qualificationPath");
            return (Criteria) this;
        }

        public Criteria andQualificationPathNotIn(List<String> values) {
            addCriterion("qualification_path not in", values, "qualificationPath");
            return (Criteria) this;
        }

        public Criteria andQualificationPathBetween(String value1, String value2) {
            addCriterion("qualification_path between", value1, value2, "qualificationPath");
            return (Criteria) this;
        }

        public Criteria andQualificationPathNotBetween(String value1, String value2) {
            addCriterion("qualification_path not between", value1, value2, "qualificationPath");
            return (Criteria) this;
        }

        public Criteria andScopePracticeIsNull() {
            addCriterion("scope_practice is null");
            return (Criteria) this;
        }

        public Criteria andScopePracticeIsNotNull() {
            addCriterion("scope_practice is not null");
            return (Criteria) this;
        }

        public Criteria andScopePracticeEqualTo(String value) {
            addCriterion("scope_practice =", value, "scopePractice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andScopePracticeEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("scope_practice = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScopePracticeNotEqualTo(String value) {
            addCriterion("scope_practice <>", value, "scopePractice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andScopePracticeNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("scope_practice <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScopePracticeGreaterThan(String value) {
            addCriterion("scope_practice >", value, "scopePractice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andScopePracticeGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("scope_practice > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScopePracticeGreaterThanOrEqualTo(String value) {
            addCriterion("scope_practice >=", value, "scopePractice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andScopePracticeGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("scope_practice >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScopePracticeLessThan(String value) {
            addCriterion("scope_practice <", value, "scopePractice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andScopePracticeLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("scope_practice < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScopePracticeLessThanOrEqualTo(String value) {
            addCriterion("scope_practice <=", value, "scopePractice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andScopePracticeLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("scope_practice <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScopePracticeLike(String value) {
            addCriterion("scope_practice like", value, "scopePractice");
            return (Criteria) this;
        }

        public Criteria andScopePracticeNotLike(String value) {
            addCriterion("scope_practice not like", value, "scopePractice");
            return (Criteria) this;
        }

        public Criteria andScopePracticeIn(List<String> values) {
            addCriterion("scope_practice in", values, "scopePractice");
            return (Criteria) this;
        }

        public Criteria andScopePracticeNotIn(List<String> values) {
            addCriterion("scope_practice not in", values, "scopePractice");
            return (Criteria) this;
        }

        public Criteria andScopePracticeBetween(String value1, String value2) {
            addCriterion("scope_practice between", value1, value2, "scopePractice");
            return (Criteria) this;
        }

        public Criteria andScopePracticeNotBetween(String value1, String value2) {
            addCriterion("scope_practice not between", value1, value2, "scopePractice");
            return (Criteria) this;
        }

        public Criteria andLevelQualificationIsNull() {
            addCriterion("level_qualification is null");
            return (Criteria) this;
        }

        public Criteria andLevelQualificationIsNotNull() {
            addCriterion("level_qualification is not null");
            return (Criteria) this;
        }

        public Criteria andLevelQualificationEqualTo(String value) {
            addCriterion("level_qualification =", value, "levelQualification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andLevelQualificationEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("level_qualification = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelQualificationNotEqualTo(String value) {
            addCriterion("level_qualification <>", value, "levelQualification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andLevelQualificationNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("level_qualification <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelQualificationGreaterThan(String value) {
            addCriterion("level_qualification >", value, "levelQualification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andLevelQualificationGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("level_qualification > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelQualificationGreaterThanOrEqualTo(String value) {
            addCriterion("level_qualification >=", value, "levelQualification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andLevelQualificationGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("level_qualification >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelQualificationLessThan(String value) {
            addCriterion("level_qualification <", value, "levelQualification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andLevelQualificationLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("level_qualification < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelQualificationLessThanOrEqualTo(String value) {
            addCriterion("level_qualification <=", value, "levelQualification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andLevelQualificationLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("level_qualification <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelQualificationLike(String value) {
            addCriterion("level_qualification like", value, "levelQualification");
            return (Criteria) this;
        }

        public Criteria andLevelQualificationNotLike(String value) {
            addCriterion("level_qualification not like", value, "levelQualification");
            return (Criteria) this;
        }

        public Criteria andLevelQualificationIn(List<String> values) {
            addCriterion("level_qualification in", values, "levelQualification");
            return (Criteria) this;
        }

        public Criteria andLevelQualificationNotIn(List<String> values) {
            addCriterion("level_qualification not in", values, "levelQualification");
            return (Criteria) this;
        }

        public Criteria andLevelQualificationBetween(String value1, String value2) {
            addCriterion("level_qualification between", value1, value2, "levelQualification");
            return (Criteria) this;
        }

        public Criteria andLevelQualificationNotBetween(String value1, String value2) {
            addCriterion("level_qualification not between", value1, value2, "levelQualification");
            return (Criteria) this;
        }

        public Criteria andApprovalDateIsNull() {
            addCriterion("approval_date is null");
            return (Criteria) this;
        }

        public Criteria andApprovalDateIsNotNull() {
            addCriterion("approval_date is not null");
            return (Criteria) this;
        }

        public Criteria andApprovalDateEqualTo(LocalDate value) {
            addCriterion("approval_date =", value, "approvalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andApprovalDateEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("approval_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovalDateNotEqualTo(LocalDate value) {
            addCriterion("approval_date <>", value, "approvalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andApprovalDateNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("approval_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovalDateGreaterThan(LocalDate value) {
            addCriterion("approval_date >", value, "approvalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andApprovalDateGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("approval_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovalDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("approval_date >=", value, "approvalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andApprovalDateGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("approval_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovalDateLessThan(LocalDate value) {
            addCriterion("approval_date <", value, "approvalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andApprovalDateLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("approval_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovalDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("approval_date <=", value, "approvalDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andApprovalDateLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("approval_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApprovalDateIn(List<LocalDate> values) {
            addCriterion("approval_date in", values, "approvalDate");
            return (Criteria) this;
        }

        public Criteria andApprovalDateNotIn(List<LocalDate> values) {
            addCriterion("approval_date not in", values, "approvalDate");
            return (Criteria) this;
        }

        public Criteria andApprovalDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("approval_date between", value1, value2, "approvalDate");
            return (Criteria) this;
        }

        public Criteria andApprovalDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("approval_date not between", value1, value2, "approvalDate");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyEmployeeQualification.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        private TCpyEmployeeQualificationExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        protected Criteria(TCpyEmployeeQualificationExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public TCpyEmployeeQualificationExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_employee_qualification
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_employee_qualification
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_employee_qualification
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyEmployeeQualificationExample example);
    }
}