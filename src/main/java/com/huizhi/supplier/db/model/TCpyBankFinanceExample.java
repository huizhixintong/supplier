package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyBankFinanceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public TCpyBankFinanceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public TCpyBankFinanceExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public TCpyBankFinanceExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyBankFinanceExample example = new TCpyBankFinanceExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public TCpyBankFinanceExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public TCpyBankFinanceExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Integer value1, Integer value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andFinancingLogoIsNull() {
            addCriterion("financing_logo is null");
            return (Criteria) this;
        }

        public Criteria andFinancingLogoIsNotNull() {
            addCriterion("financing_logo is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingLogoEqualTo(String value) {
            addCriterion("financing_logo =", value, "financingLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingLogoEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_logo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingLogoNotEqualTo(String value) {
            addCriterion("financing_logo <>", value, "financingLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingLogoNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_logo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingLogoGreaterThan(String value) {
            addCriterion("financing_logo >", value, "financingLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingLogoGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_logo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingLogoGreaterThanOrEqualTo(String value) {
            addCriterion("financing_logo >=", value, "financingLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingLogoGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_logo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingLogoLessThan(String value) {
            addCriterion("financing_logo <", value, "financingLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingLogoLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_logo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingLogoLessThanOrEqualTo(String value) {
            addCriterion("financing_logo <=", value, "financingLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingLogoLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_logo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingLogoLike(String value) {
            addCriterion("financing_logo like", value, "financingLogo");
            return (Criteria) this;
        }

        public Criteria andFinancingLogoNotLike(String value) {
            addCriterion("financing_logo not like", value, "financingLogo");
            return (Criteria) this;
        }

        public Criteria andFinancingLogoIn(List<String> values) {
            addCriterion("financing_logo in", values, "financingLogo");
            return (Criteria) this;
        }

        public Criteria andFinancingLogoNotIn(List<String> values) {
            addCriterion("financing_logo not in", values, "financingLogo");
            return (Criteria) this;
        }

        public Criteria andFinancingLogoBetween(String value1, String value2) {
            addCriterion("financing_logo between", value1, value2, "financingLogo");
            return (Criteria) this;
        }

        public Criteria andFinancingLogoNotBetween(String value1, String value2) {
            addCriterion("financing_logo not between", value1, value2, "financingLogo");
            return (Criteria) this;
        }

        public Criteria andBankCodeIsNull() {
            addCriterion("bank_code is null");
            return (Criteria) this;
        }

        public Criteria andBankCodeIsNotNull() {
            addCriterion("bank_code is not null");
            return (Criteria) this;
        }

        public Criteria andBankCodeEqualTo(String value) {
            addCriterion("bank_code =", value, "bankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andBankCodeEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("bank_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankCodeNotEqualTo(String value) {
            addCriterion("bank_code <>", value, "bankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andBankCodeNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("bank_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankCodeGreaterThan(String value) {
            addCriterion("bank_code >", value, "bankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andBankCodeGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("bank_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankCodeGreaterThanOrEqualTo(String value) {
            addCriterion("bank_code >=", value, "bankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andBankCodeGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("bank_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankCodeLessThan(String value) {
            addCriterion("bank_code <", value, "bankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andBankCodeLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("bank_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankCodeLessThanOrEqualTo(String value) {
            addCriterion("bank_code <=", value, "bankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andBankCodeLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("bank_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBankCodeLike(String value) {
            addCriterion("bank_code like", value, "bankCode");
            return (Criteria) this;
        }

        public Criteria andBankCodeNotLike(String value) {
            addCriterion("bank_code not like", value, "bankCode");
            return (Criteria) this;
        }

        public Criteria andBankCodeIn(List<String> values) {
            addCriterion("bank_code in", values, "bankCode");
            return (Criteria) this;
        }

        public Criteria andBankCodeNotIn(List<String> values) {
            addCriterion("bank_code not in", values, "bankCode");
            return (Criteria) this;
        }

        public Criteria andBankCodeBetween(String value1, String value2) {
            addCriterion("bank_code between", value1, value2, "bankCode");
            return (Criteria) this;
        }

        public Criteria andBankCodeNotBetween(String value1, String value2) {
            addCriterion("bank_code not between", value1, value2, "bankCode");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeIsNull() {
            addCriterion("financing_purpose is null");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeIsNotNull() {
            addCriterion("financing_purpose is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeEqualTo(String value) {
            addCriterion("financing_purpose =", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_purpose = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeNotEqualTo(String value) {
            addCriterion("financing_purpose <>", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_purpose <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeGreaterThan(String value) {
            addCriterion("financing_purpose >", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_purpose > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeGreaterThanOrEqualTo(String value) {
            addCriterion("financing_purpose >=", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_purpose >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeLessThan(String value) {
            addCriterion("financing_purpose <", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_purpose < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeLessThanOrEqualTo(String value) {
            addCriterion("financing_purpose <=", value, "financingPurpose");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingPurposeLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_purpose <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeLike(String value) {
            addCriterion("financing_purpose like", value, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeNotLike(String value) {
            addCriterion("financing_purpose not like", value, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeIn(List<String> values) {
            addCriterion("financing_purpose in", values, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeNotIn(List<String> values) {
            addCriterion("financing_purpose not in", values, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeBetween(String value1, String value2) {
            addCriterion("financing_purpose between", value1, value2, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingPurposeNotBetween(String value1, String value2) {
            addCriterion("financing_purpose not between", value1, value2, "financingPurpose");
            return (Criteria) this;
        }

        public Criteria andFinancingTypeIsNull() {
            addCriterion("financing_type is null");
            return (Criteria) this;
        }

        public Criteria andFinancingTypeIsNotNull() {
            addCriterion("financing_type is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingTypeEqualTo(String value) {
            addCriterion("financing_type =", value, "financingType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingTypeEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingTypeNotEqualTo(String value) {
            addCriterion("financing_type <>", value, "financingType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingTypeNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingTypeGreaterThan(String value) {
            addCriterion("financing_type >", value, "financingType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingTypeGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingTypeGreaterThanOrEqualTo(String value) {
            addCriterion("financing_type >=", value, "financingType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingTypeGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingTypeLessThan(String value) {
            addCriterion("financing_type <", value, "financingType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingTypeLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingTypeLessThanOrEqualTo(String value) {
            addCriterion("financing_type <=", value, "financingType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingTypeLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingTypeLike(String value) {
            addCriterion("financing_type like", value, "financingType");
            return (Criteria) this;
        }

        public Criteria andFinancingTypeNotLike(String value) {
            addCriterion("financing_type not like", value, "financingType");
            return (Criteria) this;
        }

        public Criteria andFinancingTypeIn(List<String> values) {
            addCriterion("financing_type in", values, "financingType");
            return (Criteria) this;
        }

        public Criteria andFinancingTypeNotIn(List<String> values) {
            addCriterion("financing_type not in", values, "financingType");
            return (Criteria) this;
        }

        public Criteria andFinancingTypeBetween(String value1, String value2) {
            addCriterion("financing_type between", value1, value2, "financingType");
            return (Criteria) this;
        }

        public Criteria andFinancingTypeNotBetween(String value1, String value2) {
            addCriterion("financing_type not between", value1, value2, "financingType");
            return (Criteria) this;
        }

        public Criteria andFinancingAmountIsNull() {
            addCriterion("financing_amount is null");
            return (Criteria) this;
        }

        public Criteria andFinancingAmountIsNotNull() {
            addCriterion("financing_amount is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingAmountEqualTo(BigDecimal value) {
            addCriterion("financing_amount =", value, "financingAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingAmountEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingAmountNotEqualTo(BigDecimal value) {
            addCriterion("financing_amount <>", value, "financingAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingAmountNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingAmountGreaterThan(BigDecimal value) {
            addCriterion("financing_amount >", value, "financingAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingAmountGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_amount >=", value, "financingAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingAmountGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingAmountLessThan(BigDecimal value) {
            addCriterion("financing_amount <", value, "financingAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingAmountLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_amount <=", value, "financingAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingAmountLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingAmountIn(List<BigDecimal> values) {
            addCriterion("financing_amount in", values, "financingAmount");
            return (Criteria) this;
        }

        public Criteria andFinancingAmountNotIn(List<BigDecimal> values) {
            addCriterion("financing_amount not in", values, "financingAmount");
            return (Criteria) this;
        }

        public Criteria andFinancingAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_amount between", value1, value2, "financingAmount");
            return (Criteria) this;
        }

        public Criteria andFinancingAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_amount not between", value1, value2, "financingAmount");
            return (Criteria) this;
        }

        public Criteria andFinancingRateIsNull() {
            addCriterion("financing_rate is null");
            return (Criteria) this;
        }

        public Criteria andFinancingRateIsNotNull() {
            addCriterion("financing_rate is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingRateEqualTo(BigDecimal value) {
            addCriterion("financing_rate =", value, "financingRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingRateEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_rate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingRateNotEqualTo(BigDecimal value) {
            addCriterion("financing_rate <>", value, "financingRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingRateNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_rate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingRateGreaterThan(BigDecimal value) {
            addCriterion("financing_rate >", value, "financingRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingRateGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_rate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingRateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_rate >=", value, "financingRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingRateGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_rate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingRateLessThan(BigDecimal value) {
            addCriterion("financing_rate <", value, "financingRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingRateLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_rate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingRateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_rate <=", value, "financingRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingRateLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_rate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingRateIn(List<BigDecimal> values) {
            addCriterion("financing_rate in", values, "financingRate");
            return (Criteria) this;
        }

        public Criteria andFinancingRateNotIn(List<BigDecimal> values) {
            addCriterion("financing_rate not in", values, "financingRate");
            return (Criteria) this;
        }

        public Criteria andFinancingRateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_rate between", value1, value2, "financingRate");
            return (Criteria) this;
        }

        public Criteria andFinancingRateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_rate not between", value1, value2, "financingRate");
            return (Criteria) this;
        }

        public Criteria andFinancingStartIsNull() {
            addCriterion("financing_start is null");
            return (Criteria) this;
        }

        public Criteria andFinancingStartIsNotNull() {
            addCriterion("financing_start is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingStartEqualTo(LocalDate value) {
            addCriterion("financing_start =", value, "financingStart");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_start = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartNotEqualTo(LocalDate value) {
            addCriterion("financing_start <>", value, "financingStart");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_start <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartGreaterThan(LocalDate value) {
            addCriterion("financing_start >", value, "financingStart");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_start > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("financing_start >=", value, "financingStart");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_start >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartLessThan(LocalDate value) {
            addCriterion("financing_start <", value, "financingStart");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_start < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartLessThanOrEqualTo(LocalDate value) {
            addCriterion("financing_start <=", value, "financingStart");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andFinancingStartLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("financing_start <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingStartIn(List<LocalDate> values) {
            addCriterion("financing_start in", values, "financingStart");
            return (Criteria) this;
        }

        public Criteria andFinancingStartNotIn(List<LocalDate> values) {
            addCriterion("financing_start not in", values, "financingStart");
            return (Criteria) this;
        }

        public Criteria andFinancingStartBetween(LocalDate value1, LocalDate value2) {
            addCriterion("financing_start between", value1, value2, "financingStart");
            return (Criteria) this;
        }

        public Criteria andFinancingStartNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("financing_start not between", value1, value2, "financingStart");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateIsNull() {
            addCriterion("repayment_date is null");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateIsNotNull() {
            addCriterion("repayment_date is not null");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateEqualTo(LocalDate value) {
            addCriterion("repayment_date =", value, "repaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentDateEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentDateNotEqualTo(LocalDate value) {
            addCriterion("repayment_date <>", value, "repaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentDateNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentDateGreaterThan(LocalDate value) {
            addCriterion("repayment_date >", value, "repaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentDateGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("repayment_date >=", value, "repaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentDateGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentDateLessThan(LocalDate value) {
            addCriterion("repayment_date <", value, "repaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentDateLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("repayment_date <=", value, "repaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentDateLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentDateIn(List<LocalDate> values) {
            addCriterion("repayment_date in", values, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateNotIn(List<LocalDate> values) {
            addCriterion("repayment_date not in", values, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("repayment_date between", value1, value2, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andRepaymentDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("repayment_date not between", value1, value2, "repaymentDate");
            return (Criteria) this;
        }

        public Criteria andGuaranteeIsNull() {
            addCriterion("guarantee is null");
            return (Criteria) this;
        }

        public Criteria andGuaranteeIsNotNull() {
            addCriterion("guarantee is not null");
            return (Criteria) this;
        }

        public Criteria andGuaranteeEqualTo(String value) {
            addCriterion("guarantee =", value, "guarantee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantee = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeNotEqualTo(String value) {
            addCriterion("guarantee <>", value, "guarantee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantee <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeGreaterThan(String value) {
            addCriterion("guarantee >", value, "guarantee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantee > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeGreaterThanOrEqualTo(String value) {
            addCriterion("guarantee >=", value, "guarantee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantee >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeLessThan(String value) {
            addCriterion("guarantee <", value, "guarantee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantee < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeLessThanOrEqualTo(String value) {
            addCriterion("guarantee <=", value, "guarantee");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuaranteeLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantee <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuaranteeLike(String value) {
            addCriterion("guarantee like", value, "guarantee");
            return (Criteria) this;
        }

        public Criteria andGuaranteeNotLike(String value) {
            addCriterion("guarantee not like", value, "guarantee");
            return (Criteria) this;
        }

        public Criteria andGuaranteeIn(List<String> values) {
            addCriterion("guarantee in", values, "guarantee");
            return (Criteria) this;
        }

        public Criteria andGuaranteeNotIn(List<String> values) {
            addCriterion("guarantee not in", values, "guarantee");
            return (Criteria) this;
        }

        public Criteria andGuaranteeBetween(String value1, String value2) {
            addCriterion("guarantee between", value1, value2, "guarantee");
            return (Criteria) this;
        }

        public Criteria andGuaranteeNotBetween(String value1, String value2) {
            addCriterion("guarantee not between", value1, value2, "guarantee");
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorIsNull() {
            addCriterion("name_of_guarantor is null");
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorIsNotNull() {
            addCriterion("name_of_guarantor is not null");
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorEqualTo(String value) {
            addCriterion("name_of_guarantor =", value, "nameOfGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andNameOfGuarantorEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("name_of_guarantor = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorNotEqualTo(String value) {
            addCriterion("name_of_guarantor <>", value, "nameOfGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andNameOfGuarantorNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("name_of_guarantor <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorGreaterThan(String value) {
            addCriterion("name_of_guarantor >", value, "nameOfGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andNameOfGuarantorGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("name_of_guarantor > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorGreaterThanOrEqualTo(String value) {
            addCriterion("name_of_guarantor >=", value, "nameOfGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andNameOfGuarantorGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("name_of_guarantor >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorLessThan(String value) {
            addCriterion("name_of_guarantor <", value, "nameOfGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andNameOfGuarantorLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("name_of_guarantor < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorLessThanOrEqualTo(String value) {
            addCriterion("name_of_guarantor <=", value, "nameOfGuarantor");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andNameOfGuarantorLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("name_of_guarantor <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorLike(String value) {
            addCriterion("name_of_guarantor like", value, "nameOfGuarantor");
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorNotLike(String value) {
            addCriterion("name_of_guarantor not like", value, "nameOfGuarantor");
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorIn(List<String> values) {
            addCriterion("name_of_guarantor in", values, "nameOfGuarantor");
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorNotIn(List<String> values) {
            addCriterion("name_of_guarantor not in", values, "nameOfGuarantor");
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorBetween(String value1, String value2) {
            addCriterion("name_of_guarantor between", value1, value2, "nameOfGuarantor");
            return (Criteria) this;
        }

        public Criteria andNameOfGuarantorNotBetween(String value1, String value2) {
            addCriterion("name_of_guarantor not between", value1, value2, "nameOfGuarantor");
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberIsNull() {
            addCriterion("guarantor_card_number is null");
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberIsNotNull() {
            addCriterion("guarantor_card_number is not null");
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberEqualTo(String value) {
            addCriterion("guarantor_card_number =", value, "guarantorCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuarantorCardNumberEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantor_card_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberNotEqualTo(String value) {
            addCriterion("guarantor_card_number <>", value, "guarantorCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuarantorCardNumberNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantor_card_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberGreaterThan(String value) {
            addCriterion("guarantor_card_number >", value, "guarantorCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuarantorCardNumberGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantor_card_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberGreaterThanOrEqualTo(String value) {
            addCriterion("guarantor_card_number >=", value, "guarantorCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuarantorCardNumberGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantor_card_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberLessThan(String value) {
            addCriterion("guarantor_card_number <", value, "guarantorCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuarantorCardNumberLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantor_card_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberLessThanOrEqualTo(String value) {
            addCriterion("guarantor_card_number <=", value, "guarantorCardNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andGuarantorCardNumberLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("guarantor_card_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberLike(String value) {
            addCriterion("guarantor_card_number like", value, "guarantorCardNumber");
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberNotLike(String value) {
            addCriterion("guarantor_card_number not like", value, "guarantorCardNumber");
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberIn(List<String> values) {
            addCriterion("guarantor_card_number in", values, "guarantorCardNumber");
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberNotIn(List<String> values) {
            addCriterion("guarantor_card_number not in", values, "guarantorCardNumber");
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberBetween(String value1, String value2) {
            addCriterion("guarantor_card_number between", value1, value2, "guarantorCardNumber");
            return (Criteria) this;
        }

        public Criteria andGuarantorCardNumberNotBetween(String value1, String value2) {
            addCriterion("guarantor_card_number not between", value1, value2, "guarantorCardNumber");
            return (Criteria) this;
        }

        public Criteria andRepaymentIsNull() {
            addCriterion("repayment is null");
            return (Criteria) this;
        }

        public Criteria andRepaymentIsNotNull() {
            addCriterion("repayment is not null");
            return (Criteria) this;
        }

        public Criteria andRepaymentEqualTo(String value) {
            addCriterion("repayment =", value, "repayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentNotEqualTo(String value) {
            addCriterion("repayment <>", value, "repayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentGreaterThan(String value) {
            addCriterion("repayment >", value, "repayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentGreaterThanOrEqualTo(String value) {
            addCriterion("repayment >=", value, "repayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentLessThan(String value) {
            addCriterion("repayment <", value, "repayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentLessThanOrEqualTo(String value) {
            addCriterion("repayment <=", value, "repayment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentLike(String value) {
            addCriterion("repayment like", value, "repayment");
            return (Criteria) this;
        }

        public Criteria andRepaymentNotLike(String value) {
            addCriterion("repayment not like", value, "repayment");
            return (Criteria) this;
        }

        public Criteria andRepaymentIn(List<String> values) {
            addCriterion("repayment in", values, "repayment");
            return (Criteria) this;
        }

        public Criteria andRepaymentNotIn(List<String> values) {
            addCriterion("repayment not in", values, "repayment");
            return (Criteria) this;
        }

        public Criteria andRepaymentBetween(String value1, String value2) {
            addCriterion("repayment between", value1, value2, "repayment");
            return (Criteria) this;
        }

        public Criteria andRepaymentNotBetween(String value1, String value2) {
            addCriterion("repayment not between", value1, value2, "repayment");
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesIsNull() {
            addCriterion("repayment_times is null");
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesIsNotNull() {
            addCriterion("repayment_times is not null");
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesEqualTo(Integer value) {
            addCriterion("repayment_times =", value, "repaymentTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentTimesEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_times = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesNotEqualTo(Integer value) {
            addCriterion("repayment_times <>", value, "repaymentTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentTimesNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_times <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesGreaterThan(Integer value) {
            addCriterion("repayment_times >", value, "repaymentTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentTimesGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_times > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("repayment_times >=", value, "repaymentTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentTimesGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_times >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesLessThan(Integer value) {
            addCriterion("repayment_times <", value, "repaymentTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentTimesLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_times < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesLessThanOrEqualTo(Integer value) {
            addCriterion("repayment_times <=", value, "repaymentTimes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andRepaymentTimesLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("repayment_times <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesIn(List<Integer> values) {
            addCriterion("repayment_times in", values, "repaymentTimes");
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesNotIn(List<Integer> values) {
            addCriterion("repayment_times not in", values, "repaymentTimes");
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesBetween(Integer value1, Integer value2) {
            addCriterion("repayment_times between", value1, value2, "repaymentTimes");
            return (Criteria) this;
        }

        public Criteria andRepaymentTimesNotBetween(Integer value1, Integer value2) {
            addCriterion("repayment_times not between", value1, value2, "repaymentTimes");
            return (Criteria) this;
        }

        public Criteria andAgreementDateIsNull() {
            addCriterion("agreement_date is null");
            return (Criteria) this;
        }

        public Criteria andAgreementDateIsNotNull() {
            addCriterion("agreement_date is not null");
            return (Criteria) this;
        }

        public Criteria andAgreementDateEqualTo(LocalDate value) {
            addCriterion("agreement_date =", value, "agreementDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andAgreementDateEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("agreement_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreementDateNotEqualTo(LocalDate value) {
            addCriterion("agreement_date <>", value, "agreementDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andAgreementDateNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("agreement_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreementDateGreaterThan(LocalDate value) {
            addCriterion("agreement_date >", value, "agreementDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andAgreementDateGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("agreement_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreementDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("agreement_date >=", value, "agreementDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andAgreementDateGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("agreement_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreementDateLessThan(LocalDate value) {
            addCriterion("agreement_date <", value, "agreementDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andAgreementDateLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("agreement_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreementDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("agreement_date <=", value, "agreementDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andAgreementDateLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("agreement_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgreementDateIn(List<LocalDate> values) {
            addCriterion("agreement_date in", values, "agreementDate");
            return (Criteria) this;
        }

        public Criteria andAgreementDateNotIn(List<LocalDate> values) {
            addCriterion("agreement_date not in", values, "agreementDate");
            return (Criteria) this;
        }

        public Criteria andAgreementDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("agreement_date between", value1, value2, "agreementDate");
            return (Criteria) this;
        }

        public Criteria andAgreementDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("agreement_date not between", value1, value2, "agreementDate");
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceIsNull() {
            addCriterion("current_balance is null");
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceIsNotNull() {
            addCriterion("current_balance is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceEqualTo(BigDecimal value) {
            addCriterion("current_balance =", value, "currentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCurrentBalanceEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("current_balance = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceNotEqualTo(BigDecimal value) {
            addCriterion("current_balance <>", value, "currentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCurrentBalanceNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("current_balance <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceGreaterThan(BigDecimal value) {
            addCriterion("current_balance >", value, "currentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCurrentBalanceGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("current_balance > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("current_balance >=", value, "currentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCurrentBalanceGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("current_balance >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceLessThan(BigDecimal value) {
            addCriterion("current_balance <", value, "currentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCurrentBalanceLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("current_balance < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("current_balance <=", value, "currentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCurrentBalanceLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("current_balance <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceIn(List<BigDecimal> values) {
            addCriterion("current_balance in", values, "currentBalance");
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceNotIn(List<BigDecimal> values) {
            addCriterion("current_balance not in", values, "currentBalance");
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_balance between", value1, value2, "currentBalance");
            return (Criteria) this;
        }

        public Criteria andCurrentBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_balance not between", value1, value2, "currentBalance");
            return (Criteria) this;
        }

        public Criteria andOverdueLogoIsNull() {
            addCriterion("overdue_logo is null");
            return (Criteria) this;
        }

        public Criteria andOverdueLogoIsNotNull() {
            addCriterion("overdue_logo is not null");
            return (Criteria) this;
        }

        public Criteria andOverdueLogoEqualTo(String value) {
            addCriterion("overdue_logo =", value, "overdueLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andOverdueLogoEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("overdue_logo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOverdueLogoNotEqualTo(String value) {
            addCriterion("overdue_logo <>", value, "overdueLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andOverdueLogoNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("overdue_logo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOverdueLogoGreaterThan(String value) {
            addCriterion("overdue_logo >", value, "overdueLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andOverdueLogoGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("overdue_logo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOverdueLogoGreaterThanOrEqualTo(String value) {
            addCriterion("overdue_logo >=", value, "overdueLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andOverdueLogoGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("overdue_logo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOverdueLogoLessThan(String value) {
            addCriterion("overdue_logo <", value, "overdueLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andOverdueLogoLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("overdue_logo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOverdueLogoLessThanOrEqualTo(String value) {
            addCriterion("overdue_logo <=", value, "overdueLogo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andOverdueLogoLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("overdue_logo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOverdueLogoLike(String value) {
            addCriterion("overdue_logo like", value, "overdueLogo");
            return (Criteria) this;
        }

        public Criteria andOverdueLogoNotLike(String value) {
            addCriterion("overdue_logo not like", value, "overdueLogo");
            return (Criteria) this;
        }

        public Criteria andOverdueLogoIn(List<String> values) {
            addCriterion("overdue_logo in", values, "overdueLogo");
            return (Criteria) this;
        }

        public Criteria andOverdueLogoNotIn(List<String> values) {
            addCriterion("overdue_logo not in", values, "overdueLogo");
            return (Criteria) this;
        }

        public Criteria andOverdueLogoBetween(String value1, String value2) {
            addCriterion("overdue_logo between", value1, value2, "overdueLogo");
            return (Criteria) this;
        }

        public Criteria andOverdueLogoNotBetween(String value1, String value2) {
            addCriterion("overdue_logo not between", value1, value2, "overdueLogo");
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationIsNull() {
            addCriterion("interest_identification is null");
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationIsNotNull() {
            addCriterion("interest_identification is not null");
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationEqualTo(String value) {
            addCriterion("interest_identification =", value, "interestIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestIdentificationEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_identification = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationNotEqualTo(String value) {
            addCriterion("interest_identification <>", value, "interestIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestIdentificationNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_identification <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationGreaterThan(String value) {
            addCriterion("interest_identification >", value, "interestIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestIdentificationGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_identification > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationGreaterThanOrEqualTo(String value) {
            addCriterion("interest_identification >=", value, "interestIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestIdentificationGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_identification >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationLessThan(String value) {
            addCriterion("interest_identification <", value, "interestIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestIdentificationLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_identification < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationLessThanOrEqualTo(String value) {
            addCriterion("interest_identification <=", value, "interestIdentification");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestIdentificationLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_identification <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationLike(String value) {
            addCriterion("interest_identification like", value, "interestIdentification");
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationNotLike(String value) {
            addCriterion("interest_identification not like", value, "interestIdentification");
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationIn(List<String> values) {
            addCriterion("interest_identification in", values, "interestIdentification");
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationNotIn(List<String> values) {
            addCriterion("interest_identification not in", values, "interestIdentification");
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationBetween(String value1, String value2) {
            addCriterion("interest_identification between", value1, value2, "interestIdentification");
            return (Criteria) this;
        }

        public Criteria andInterestIdentificationNotBetween(String value1, String value2) {
            addCriterion("interest_identification not between", value1, value2, "interestIdentification");
            return (Criteria) this;
        }

        public Criteria andInterestBalanceIsNull() {
            addCriterion("interest_balance is null");
            return (Criteria) this;
        }

        public Criteria andInterestBalanceIsNotNull() {
            addCriterion("interest_balance is not null");
            return (Criteria) this;
        }

        public Criteria andInterestBalanceEqualTo(BigDecimal value) {
            addCriterion("interest_balance =", value, "interestBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestBalanceEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_balance = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestBalanceNotEqualTo(BigDecimal value) {
            addCriterion("interest_balance <>", value, "interestBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestBalanceNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_balance <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestBalanceGreaterThan(BigDecimal value) {
            addCriterion("interest_balance >", value, "interestBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestBalanceGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_balance > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("interest_balance >=", value, "interestBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestBalanceGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_balance >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestBalanceLessThan(BigDecimal value) {
            addCriterion("interest_balance <", value, "interestBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestBalanceLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_balance < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("interest_balance <=", value, "interestBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andInterestBalanceLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("interest_balance <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestBalanceIn(List<BigDecimal> values) {
            addCriterion("interest_balance in", values, "interestBalance");
            return (Criteria) this;
        }

        public Criteria andInterestBalanceNotIn(List<BigDecimal> values) {
            addCriterion("interest_balance not in", values, "interestBalance");
            return (Criteria) this;
        }

        public Criteria andInterestBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("interest_balance between", value1, value2, "interestBalance");
            return (Criteria) this;
        }

        public Criteria andInterestBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("interest_balance not between", value1, value2, "interestBalance");
            return (Criteria) this;
        }

        public Criteria andCreditRatingIsNull() {
            addCriterion("credit_rating is null");
            return (Criteria) this;
        }

        public Criteria andCreditRatingIsNotNull() {
            addCriterion("credit_rating is not null");
            return (Criteria) this;
        }

        public Criteria andCreditRatingEqualTo(String value) {
            addCriterion("credit_rating =", value, "creditRating");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreditRatingEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("credit_rating = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRatingNotEqualTo(String value) {
            addCriterion("credit_rating <>", value, "creditRating");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreditRatingNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("credit_rating <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRatingGreaterThan(String value) {
            addCriterion("credit_rating >", value, "creditRating");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreditRatingGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("credit_rating > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRatingGreaterThanOrEqualTo(String value) {
            addCriterion("credit_rating >=", value, "creditRating");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreditRatingGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("credit_rating >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRatingLessThan(String value) {
            addCriterion("credit_rating <", value, "creditRating");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreditRatingLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("credit_rating < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRatingLessThanOrEqualTo(String value) {
            addCriterion("credit_rating <=", value, "creditRating");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreditRatingLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("credit_rating <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRatingLike(String value) {
            addCriterion("credit_rating like", value, "creditRating");
            return (Criteria) this;
        }

        public Criteria andCreditRatingNotLike(String value) {
            addCriterion("credit_rating not like", value, "creditRating");
            return (Criteria) this;
        }

        public Criteria andCreditRatingIn(List<String> values) {
            addCriterion("credit_rating in", values, "creditRating");
            return (Criteria) this;
        }

        public Criteria andCreditRatingNotIn(List<String> values) {
            addCriterion("credit_rating not in", values, "creditRating");
            return (Criteria) this;
        }

        public Criteria andCreditRatingBetween(String value1, String value2) {
            addCriterion("credit_rating between", value1, value2, "creditRating");
            return (Criteria) this;
        }

        public Criteria andCreditRatingNotBetween(String value1, String value2) {
            addCriterion("credit_rating not between", value1, value2, "creditRating");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyBankFinance.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        private TCpyBankFinanceExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        protected Criteria(TCpyBankFinanceExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public TCpyBankFinanceExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_bank_finance
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_bank_finance
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_bank_finance
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyBankFinanceExample example);
    }
}