package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyShareholdersConstituteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public TCpyShareholdersConstituteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public TCpyShareholdersConstituteExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public TCpyShareholdersConstituteExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyShareholdersConstituteExample example = new TCpyShareholdersConstituteExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public TCpyShareholdersConstituteExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public TCpyShareholdersConstituteExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andShareholdersNameIsNull() {
            addCriterion("shareholders_name is null");
            return (Criteria) this;
        }

        public Criteria andShareholdersNameIsNotNull() {
            addCriterion("shareholders_name is not null");
            return (Criteria) this;
        }

        public Criteria andShareholdersNameEqualTo(String value) {
            addCriterion("shareholders_name =", value, "shareholdersName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersNameEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersNameNotEqualTo(String value) {
            addCriterion("shareholders_name <>", value, "shareholdersName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersNameNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersNameGreaterThan(String value) {
            addCriterion("shareholders_name >", value, "shareholdersName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersNameGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersNameGreaterThanOrEqualTo(String value) {
            addCriterion("shareholders_name >=", value, "shareholdersName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersNameGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersNameLessThan(String value) {
            addCriterion("shareholders_name <", value, "shareholdersName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersNameLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersNameLessThanOrEqualTo(String value) {
            addCriterion("shareholders_name <=", value, "shareholdersName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersNameLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersNameLike(String value) {
            addCriterion("shareholders_name like", value, "shareholdersName");
            return (Criteria) this;
        }

        public Criteria andShareholdersNameNotLike(String value) {
            addCriterion("shareholders_name not like", value, "shareholdersName");
            return (Criteria) this;
        }

        public Criteria andShareholdersNameIn(List<String> values) {
            addCriterion("shareholders_name in", values, "shareholdersName");
            return (Criteria) this;
        }

        public Criteria andShareholdersNameNotIn(List<String> values) {
            addCriterion("shareholders_name not in", values, "shareholdersName");
            return (Criteria) this;
        }

        public Criteria andShareholdersNameBetween(String value1, String value2) {
            addCriterion("shareholders_name between", value1, value2, "shareholdersName");
            return (Criteria) this;
        }

        public Criteria andShareholdersNameNotBetween(String value1, String value2) {
            addCriterion("shareholders_name not between", value1, value2, "shareholdersName");
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeIsNull() {
            addCriterion("shareholders_type is null");
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeIsNotNull() {
            addCriterion("shareholders_type is not null");
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeEqualTo(String value) {
            addCriterion("shareholders_type =", value, "shareholdersType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersTypeEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeNotEqualTo(String value) {
            addCriterion("shareholders_type <>", value, "shareholdersType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersTypeNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeGreaterThan(String value) {
            addCriterion("shareholders_type >", value, "shareholdersType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersTypeGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeGreaterThanOrEqualTo(String value) {
            addCriterion("shareholders_type >=", value, "shareholdersType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersTypeGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeLessThan(String value) {
            addCriterion("shareholders_type <", value, "shareholdersType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersTypeLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeLessThanOrEqualTo(String value) {
            addCriterion("shareholders_type <=", value, "shareholdersType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdersTypeLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholders_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeLike(String value) {
            addCriterion("shareholders_type like", value, "shareholdersType");
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeNotLike(String value) {
            addCriterion("shareholders_type not like", value, "shareholdersType");
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeIn(List<String> values) {
            addCriterion("shareholders_type in", values, "shareholdersType");
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeNotIn(List<String> values) {
            addCriterion("shareholders_type not in", values, "shareholdersType");
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeBetween(String value1, String value2) {
            addCriterion("shareholders_type between", value1, value2, "shareholdersType");
            return (Criteria) this;
        }

        public Criteria andShareholdersTypeNotBetween(String value1, String value2) {
            addCriterion("shareholders_type not between", value1, value2, "shareholdersType");
            return (Criteria) this;
        }

        public Criteria andCertificateTypeIsNull() {
            addCriterion("certificate_type is null");
            return (Criteria) this;
        }

        public Criteria andCertificateTypeIsNotNull() {
            addCriterion("certificate_type is not null");
            return (Criteria) this;
        }

        public Criteria andCertificateTypeEqualTo(String value) {
            addCriterion("certificate_type =", value, "certificateType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateTypeEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateTypeNotEqualTo(String value) {
            addCriterion("certificate_type <>", value, "certificateType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateTypeNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateTypeGreaterThan(String value) {
            addCriterion("certificate_type >", value, "certificateType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateTypeGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateTypeGreaterThanOrEqualTo(String value) {
            addCriterion("certificate_type >=", value, "certificateType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateTypeGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateTypeLessThan(String value) {
            addCriterion("certificate_type <", value, "certificateType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateTypeLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateTypeLessThanOrEqualTo(String value) {
            addCriterion("certificate_type <=", value, "certificateType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateTypeLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateTypeLike(String value) {
            addCriterion("certificate_type like", value, "certificateType");
            return (Criteria) this;
        }

        public Criteria andCertificateTypeNotLike(String value) {
            addCriterion("certificate_type not like", value, "certificateType");
            return (Criteria) this;
        }

        public Criteria andCertificateTypeIn(List<String> values) {
            addCriterion("certificate_type in", values, "certificateType");
            return (Criteria) this;
        }

        public Criteria andCertificateTypeNotIn(List<String> values) {
            addCriterion("certificate_type not in", values, "certificateType");
            return (Criteria) this;
        }

        public Criteria andCertificateTypeBetween(String value1, String value2) {
            addCriterion("certificate_type between", value1, value2, "certificateType");
            return (Criteria) this;
        }

        public Criteria andCertificateTypeNotBetween(String value1, String value2) {
            addCriterion("certificate_type not between", value1, value2, "certificateType");
            return (Criteria) this;
        }

        public Criteria andCertificateNumberIsNull() {
            addCriterion("certificate_number is null");
            return (Criteria) this;
        }

        public Criteria andCertificateNumberIsNotNull() {
            addCriterion("certificate_number is not null");
            return (Criteria) this;
        }

        public Criteria andCertificateNumberEqualTo(String value) {
            addCriterion("certificate_number =", value, "certificateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateNumberEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateNumberNotEqualTo(String value) {
            addCriterion("certificate_number <>", value, "certificateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateNumberNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateNumberGreaterThan(String value) {
            addCriterion("certificate_number >", value, "certificateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateNumberGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateNumberGreaterThanOrEqualTo(String value) {
            addCriterion("certificate_number >=", value, "certificateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateNumberGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateNumberLessThan(String value) {
            addCriterion("certificate_number <", value, "certificateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateNumberLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateNumberLessThanOrEqualTo(String value) {
            addCriterion("certificate_number <=", value, "certificateNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCertificateNumberLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("certificate_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCertificateNumberLike(String value) {
            addCriterion("certificate_number like", value, "certificateNumber");
            return (Criteria) this;
        }

        public Criteria andCertificateNumberNotLike(String value) {
            addCriterion("certificate_number not like", value, "certificateNumber");
            return (Criteria) this;
        }

        public Criteria andCertificateNumberIn(List<String> values) {
            addCriterion("certificate_number in", values, "certificateNumber");
            return (Criteria) this;
        }

        public Criteria andCertificateNumberNotIn(List<String> values) {
            addCriterion("certificate_number not in", values, "certificateNumber");
            return (Criteria) this;
        }

        public Criteria andCertificateNumberBetween(String value1, String value2) {
            addCriterion("certificate_number between", value1, value2, "certificateNumber");
            return (Criteria) this;
        }

        public Criteria andCertificateNumberNotBetween(String value1, String value2) {
            addCriterion("certificate_number not between", value1, value2, "certificateNumber");
            return (Criteria) this;
        }

        public Criteria andCountryIsNull() {
            addCriterion("country is null");
            return (Criteria) this;
        }

        public Criteria andCountryIsNotNull() {
            addCriterion("country is not null");
            return (Criteria) this;
        }

        public Criteria andCountryEqualTo(String value) {
            addCriterion("country =", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCountryEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("country = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryNotEqualTo(String value) {
            addCriterion("country <>", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCountryNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("country <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryGreaterThan(String value) {
            addCriterion("country >", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCountryGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("country > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryGreaterThanOrEqualTo(String value) {
            addCriterion("country >=", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCountryGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("country >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryLessThan(String value) {
            addCriterion("country <", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCountryLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("country < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryLessThanOrEqualTo(String value) {
            addCriterion("country <=", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCountryLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("country <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryLike(String value) {
            addCriterion("country like", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotLike(String value) {
            addCriterion("country not like", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryIn(List<String> values) {
            addCriterion("country in", values, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotIn(List<String> values) {
            addCriterion("country not in", values, "country");
            return (Criteria) this;
        }

        public Criteria andCountryBetween(String value1, String value2) {
            addCriterion("country between", value1, value2, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotBetween(String value1, String value2) {
            addCriterion("country not between", value1, value2, "country");
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountIsNull() {
            addCriterion("registered_amount is null");
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountIsNotNull() {
            addCriterion("registered_amount is not null");
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountEqualTo(BigDecimal value) {
            addCriterion("registered_amount =", value, "registeredAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andRegisteredAmountEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("registered_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountNotEqualTo(BigDecimal value) {
            addCriterion("registered_amount <>", value, "registeredAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andRegisteredAmountNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("registered_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountGreaterThan(BigDecimal value) {
            addCriterion("registered_amount >", value, "registeredAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andRegisteredAmountGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("registered_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("registered_amount >=", value, "registeredAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andRegisteredAmountGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("registered_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountLessThan(BigDecimal value) {
            addCriterion("registered_amount <", value, "registeredAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andRegisteredAmountLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("registered_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("registered_amount <=", value, "registeredAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andRegisteredAmountLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("registered_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountIn(List<BigDecimal> values) {
            addCriterion("registered_amount in", values, "registeredAmount");
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountNotIn(List<BigDecimal> values) {
            addCriterion("registered_amount not in", values, "registeredAmount");
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("registered_amount between", value1, value2, "registeredAmount");
            return (Criteria) this;
        }

        public Criteria andRegisteredAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("registered_amount not between", value1, value2, "registeredAmount");
            return (Criteria) this;
        }

        public Criteria andInvestWayIsNull() {
            addCriterion("invest_way is null");
            return (Criteria) this;
        }

        public Criteria andInvestWayIsNotNull() {
            addCriterion("invest_way is not null");
            return (Criteria) this;
        }

        public Criteria andInvestWayEqualTo(String value) {
            addCriterion("invest_way =", value, "investWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andInvestWayEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("invest_way = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestWayNotEqualTo(String value) {
            addCriterion("invest_way <>", value, "investWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andInvestWayNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("invest_way <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestWayGreaterThan(String value) {
            addCriterion("invest_way >", value, "investWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andInvestWayGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("invest_way > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestWayGreaterThanOrEqualTo(String value) {
            addCriterion("invest_way >=", value, "investWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andInvestWayGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("invest_way >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestWayLessThan(String value) {
            addCriterion("invest_way <", value, "investWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andInvestWayLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("invest_way < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestWayLessThanOrEqualTo(String value) {
            addCriterion("invest_way <=", value, "investWay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andInvestWayLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("invest_way <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestWayLike(String value) {
            addCriterion("invest_way like", value, "investWay");
            return (Criteria) this;
        }

        public Criteria andInvestWayNotLike(String value) {
            addCriterion("invest_way not like", value, "investWay");
            return (Criteria) this;
        }

        public Criteria andInvestWayIn(List<String> values) {
            addCriterion("invest_way in", values, "investWay");
            return (Criteria) this;
        }

        public Criteria andInvestWayNotIn(List<String> values) {
            addCriterion("invest_way not in", values, "investWay");
            return (Criteria) this;
        }

        public Criteria andInvestWayBetween(String value1, String value2) {
            addCriterion("invest_way between", value1, value2, "investWay");
            return (Criteria) this;
        }

        public Criteria andInvestWayNotBetween(String value1, String value2) {
            addCriterion("invest_way not between", value1, value2, "investWay");
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioIsNull() {
            addCriterion("shareholding_ratio is null");
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioIsNotNull() {
            addCriterion("shareholding_ratio is not null");
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioEqualTo(BigDecimal value) {
            addCriterion("shareholding_ratio =", value, "shareholdingRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdingRatioEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholding_ratio = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioNotEqualTo(BigDecimal value) {
            addCriterion("shareholding_ratio <>", value, "shareholdingRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdingRatioNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholding_ratio <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioGreaterThan(BigDecimal value) {
            addCriterion("shareholding_ratio >", value, "shareholdingRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdingRatioGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholding_ratio > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("shareholding_ratio >=", value, "shareholdingRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdingRatioGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholding_ratio >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioLessThan(BigDecimal value) {
            addCriterion("shareholding_ratio <", value, "shareholdingRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdingRatioLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholding_ratio < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioLessThanOrEqualTo(BigDecimal value) {
            addCriterion("shareholding_ratio <=", value, "shareholdingRatio");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andShareholdingRatioLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("shareholding_ratio <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioIn(List<BigDecimal> values) {
            addCriterion("shareholding_ratio in", values, "shareholdingRatio");
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioNotIn(List<BigDecimal> values) {
            addCriterion("shareholding_ratio not in", values, "shareholdingRatio");
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("shareholding_ratio between", value1, value2, "shareholdingRatio");
            return (Criteria) this;
        }

        public Criteria andShareholdingRatioNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("shareholding_ratio not between", value1, value2, "shareholdingRatio");
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadIsNull() {
            addCriterion("subscribed_forehead is null");
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadIsNotNull() {
            addCriterion("subscribed_forehead is not null");
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadEqualTo(BigDecimal value) {
            addCriterion("subscribed_forehead =", value, "subscribedForehead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andSubscribedForeheadEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("subscribed_forehead = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadNotEqualTo(BigDecimal value) {
            addCriterion("subscribed_forehead <>", value, "subscribedForehead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andSubscribedForeheadNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("subscribed_forehead <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadGreaterThan(BigDecimal value) {
            addCriterion("subscribed_forehead >", value, "subscribedForehead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andSubscribedForeheadGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("subscribed_forehead > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("subscribed_forehead >=", value, "subscribedForehead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andSubscribedForeheadGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("subscribed_forehead >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadLessThan(BigDecimal value) {
            addCriterion("subscribed_forehead <", value, "subscribedForehead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andSubscribedForeheadLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("subscribed_forehead < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadLessThanOrEqualTo(BigDecimal value) {
            addCriterion("subscribed_forehead <=", value, "subscribedForehead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andSubscribedForeheadLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("subscribed_forehead <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadIn(List<BigDecimal> values) {
            addCriterion("subscribed_forehead in", values, "subscribedForehead");
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadNotIn(List<BigDecimal> values) {
            addCriterion("subscribed_forehead not in", values, "subscribedForehead");
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("subscribed_forehead between", value1, value2, "subscribedForehead");
            return (Criteria) this;
        }

        public Criteria andSubscribedForeheadNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("subscribed_forehead not between", value1, value2, "subscribedForehead");
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeIsNull() {
            addCriterion("fund_currency_type is null");
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeIsNotNull() {
            addCriterion("fund_currency_type is not null");
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeEqualTo(String value) {
            addCriterion("fund_currency_type =", value, "fundCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundCurrencyTypeEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_currency_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeNotEqualTo(String value) {
            addCriterion("fund_currency_type <>", value, "fundCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundCurrencyTypeNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_currency_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeGreaterThan(String value) {
            addCriterion("fund_currency_type >", value, "fundCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundCurrencyTypeGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_currency_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeGreaterThanOrEqualTo(String value) {
            addCriterion("fund_currency_type >=", value, "fundCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundCurrencyTypeGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_currency_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeLessThan(String value) {
            addCriterion("fund_currency_type <", value, "fundCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundCurrencyTypeLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_currency_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeLessThanOrEqualTo(String value) {
            addCriterion("fund_currency_type <=", value, "fundCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundCurrencyTypeLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_currency_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeLike(String value) {
            addCriterion("fund_currency_type like", value, "fundCurrencyType");
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeNotLike(String value) {
            addCriterion("fund_currency_type not like", value, "fundCurrencyType");
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeIn(List<String> values) {
            addCriterion("fund_currency_type in", values, "fundCurrencyType");
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeNotIn(List<String> values) {
            addCriterion("fund_currency_type not in", values, "fundCurrencyType");
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeBetween(String value1, String value2) {
            addCriterion("fund_currency_type between", value1, value2, "fundCurrencyType");
            return (Criteria) this;
        }

        public Criteria andFundCurrencyTypeNotBetween(String value1, String value2) {
            addCriterion("fund_currency_type not between", value1, value2, "fundCurrencyType");
            return (Criteria) this;
        }

        public Criteria andFundDateIsNull() {
            addCriterion("fund_date is null");
            return (Criteria) this;
        }

        public Criteria andFundDateIsNotNull() {
            addCriterion("fund_date is not null");
            return (Criteria) this;
        }

        public Criteria andFundDateEqualTo(LocalDate value) {
            addCriterion("fund_date =", value, "fundDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundDateEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundDateNotEqualTo(LocalDate value) {
            addCriterion("fund_date <>", value, "fundDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundDateNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundDateGreaterThan(LocalDate value) {
            addCriterion("fund_date >", value, "fundDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundDateGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("fund_date >=", value, "fundDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundDateGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundDateLessThan(LocalDate value) {
            addCriterion("fund_date <", value, "fundDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundDateLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("fund_date <=", value, "fundDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andFundDateLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("fund_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFundDateIn(List<LocalDate> values) {
            addCriterion("fund_date in", values, "fundDate");
            return (Criteria) this;
        }

        public Criteria andFundDateNotIn(List<LocalDate> values) {
            addCriterion("fund_date not in", values, "fundDate");
            return (Criteria) this;
        }

        public Criteria andFundDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("fund_date between", value1, value2, "fundDate");
            return (Criteria) this;
        }

        public Criteria andFundDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("fund_date not between", value1, value2, "fundDate");
            return (Criteria) this;
        }

        public Criteria andAmountPaidIsNull() {
            addCriterion("amount_paid is null");
            return (Criteria) this;
        }

        public Criteria andAmountPaidIsNotNull() {
            addCriterion("amount_paid is not null");
            return (Criteria) this;
        }

        public Criteria andAmountPaidEqualTo(BigDecimal value) {
            addCriterion("amount_paid =", value, "amountPaid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountPaidEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_paid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountPaidNotEqualTo(BigDecimal value) {
            addCriterion("amount_paid <>", value, "amountPaid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountPaidNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_paid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountPaidGreaterThan(BigDecimal value) {
            addCriterion("amount_paid >", value, "amountPaid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountPaidGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_paid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountPaidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("amount_paid >=", value, "amountPaid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountPaidGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_paid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountPaidLessThan(BigDecimal value) {
            addCriterion("amount_paid <", value, "amountPaid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountPaidLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_paid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountPaidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("amount_paid <=", value, "amountPaid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountPaidLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_paid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountPaidIn(List<BigDecimal> values) {
            addCriterion("amount_paid in", values, "amountPaid");
            return (Criteria) this;
        }

        public Criteria andAmountPaidNotIn(List<BigDecimal> values) {
            addCriterion("amount_paid not in", values, "amountPaid");
            return (Criteria) this;
        }

        public Criteria andAmountPaidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount_paid between", value1, value2, "amountPaid");
            return (Criteria) this;
        }

        public Criteria andAmountPaidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount_paid not between", value1, value2, "amountPaid");
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeIsNull() {
            addCriterion("amount_currency_type is null");
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeIsNotNull() {
            addCriterion("amount_currency_type is not null");
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeEqualTo(String value) {
            addCriterion("amount_currency_type =", value, "amountCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountCurrencyTypeEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_currency_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeNotEqualTo(String value) {
            addCriterion("amount_currency_type <>", value, "amountCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountCurrencyTypeNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_currency_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeGreaterThan(String value) {
            addCriterion("amount_currency_type >", value, "amountCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountCurrencyTypeGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_currency_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeGreaterThanOrEqualTo(String value) {
            addCriterion("amount_currency_type >=", value, "amountCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountCurrencyTypeGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_currency_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeLessThan(String value) {
            addCriterion("amount_currency_type <", value, "amountCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountCurrencyTypeLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_currency_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeLessThanOrEqualTo(String value) {
            addCriterion("amount_currency_type <=", value, "amountCurrencyType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountCurrencyTypeLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_currency_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeLike(String value) {
            addCriterion("amount_currency_type like", value, "amountCurrencyType");
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeNotLike(String value) {
            addCriterion("amount_currency_type not like", value, "amountCurrencyType");
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeIn(List<String> values) {
            addCriterion("amount_currency_type in", values, "amountCurrencyType");
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeNotIn(List<String> values) {
            addCriterion("amount_currency_type not in", values, "amountCurrencyType");
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeBetween(String value1, String value2) {
            addCriterion("amount_currency_type between", value1, value2, "amountCurrencyType");
            return (Criteria) this;
        }

        public Criteria andAmountCurrencyTypeNotBetween(String value1, String value2) {
            addCriterion("amount_currency_type not between", value1, value2, "amountCurrencyType");
            return (Criteria) this;
        }

        public Criteria andAmountDateIsNull() {
            addCriterion("amount_date is null");
            return (Criteria) this;
        }

        public Criteria andAmountDateIsNotNull() {
            addCriterion("amount_date is not null");
            return (Criteria) this;
        }

        public Criteria andAmountDateEqualTo(LocalDate value) {
            addCriterion("amount_date =", value, "amountDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountDateEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDateNotEqualTo(LocalDate value) {
            addCriterion("amount_date <>", value, "amountDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountDateNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDateGreaterThan(LocalDate value) {
            addCriterion("amount_date >", value, "amountDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountDateGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("amount_date >=", value, "amountDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountDateGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDateLessThan(LocalDate value) {
            addCriterion("amount_date <", value, "amountDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountDateLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("amount_date <=", value, "amountDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andAmountDateLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("amount_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountDateIn(List<LocalDate> values) {
            addCriterion("amount_date in", values, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateNotIn(List<LocalDate> values) {
            addCriterion("amount_date not in", values, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("amount_date between", value1, value2, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("amount_date not between", value1, value2, "amountDate");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyShareholdersConstitute.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        private TCpyShareholdersConstituteExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        protected Criteria(TCpyShareholdersConstituteExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public TCpyShareholdersConstituteExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_shareholders_constitute
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_shareholders_constitute
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_shareholders_constitute
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyShareholdersConstituteExample example);
    }
}