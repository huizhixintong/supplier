package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyAssetsLiabilitiesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public TCpyAssetsLiabilitiesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public TCpyAssetsLiabilitiesExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public TCpyAssetsLiabilitiesExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyAssetsLiabilitiesExample example = new TCpyAssetsLiabilitiesExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public TCpyAssetsLiabilitiesExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public TCpyAssetsLiabilitiesExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Integer value1, Integer value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("`year` is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("`year` is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(String value) {
            addCriterion("`year` =", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andYearEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("`year` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(String value) {
            addCriterion("`year` <>", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andYearNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("`year` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(String value) {
            addCriterion("`year` >", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("`year` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(String value) {
            addCriterion("`year` >=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("`year` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThan(String value) {
            addCriterion("`year` <", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("`year` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(String value) {
            addCriterion("`year` <=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("`year` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLike(String value) {
            addCriterion("`year` like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotLike(String value) {
            addCriterion("`year` not like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<String> values) {
            addCriterion("`year` in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<String> values) {
            addCriterion("`year` not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(String value1, String value2) {
            addCriterion("`year` between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(String value1, String value2) {
            addCriterion("`year` not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsIsNull() {
            addCriterion("current_assets is null");
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsIsNotNull() {
            addCriterion("current_assets is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsEqualTo(BigDecimal value) {
            addCriterion("current_assets =", value, "currentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsNotEqualTo(BigDecimal value) {
            addCriterion("current_assets <>", value, "currentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsGreaterThan(BigDecimal value) {
            addCriterion("current_assets >", value, "currentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("current_assets >=", value, "currentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsLessThan(BigDecimal value) {
            addCriterion("current_assets <", value, "currentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("current_assets <=", value, "currentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsIn(List<BigDecimal> values) {
            addCriterion("current_assets in", values, "currentAssets");
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsNotIn(List<BigDecimal> values) {
            addCriterion("current_assets not in", values, "currentAssets");
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_assets between", value1, value2, "currentAssets");
            return (Criteria) this;
        }

        public Criteria andCurrentAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_assets not between", value1, value2, "currentAssets");
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsIsNull() {
            addCriterion("monetary_funds is null");
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsIsNotNull() {
            addCriterion("monetary_funds is not null");
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsEqualTo(BigDecimal value) {
            addCriterion("monetary_funds =", value, "monetaryFunds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andMonetaryFundsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("monetary_funds = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsNotEqualTo(BigDecimal value) {
            addCriterion("monetary_funds <>", value, "monetaryFunds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andMonetaryFundsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("monetary_funds <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsGreaterThan(BigDecimal value) {
            addCriterion("monetary_funds >", value, "monetaryFunds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andMonetaryFundsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("monetary_funds > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("monetary_funds >=", value, "monetaryFunds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andMonetaryFundsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("monetary_funds >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsLessThan(BigDecimal value) {
            addCriterion("monetary_funds <", value, "monetaryFunds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andMonetaryFundsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("monetary_funds < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("monetary_funds <=", value, "monetaryFunds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andMonetaryFundsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("monetary_funds <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsIn(List<BigDecimal> values) {
            addCriterion("monetary_funds in", values, "monetaryFunds");
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsNotIn(List<BigDecimal> values) {
            addCriterion("monetary_funds not in", values, "monetaryFunds");
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("monetary_funds between", value1, value2, "monetaryFunds");
            return (Criteria) this;
        }

        public Criteria andMonetaryFundsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("monetary_funds not between", value1, value2, "monetaryFunds");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsIsNull() {
            addCriterion("transactional_financial_assets is null");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsIsNotNull() {
            addCriterion("transactional_financial_assets is not null");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsEqualTo(BigDecimal value) {
            addCriterion("transactional_financial_assets =", value, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsNotEqualTo(BigDecimal value) {
            addCriterion("transactional_financial_assets <>", value, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsGreaterThan(BigDecimal value) {
            addCriterion("transactional_financial_assets >", value, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("transactional_financial_assets >=", value, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsLessThan(BigDecimal value) {
            addCriterion("transactional_financial_assets <", value, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("transactional_financial_assets <=", value, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsIn(List<BigDecimal> values) {
            addCriterion("transactional_financial_assets in", values, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsNotIn(List<BigDecimal> values) {
            addCriterion("transactional_financial_assets not in", values, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("transactional_financial_assets between", value1, value2, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("transactional_financial_assets not between", value1, value2, "transactionalFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsIsNull() {
            addCriterion("derivative_financial_assets is null");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsIsNotNull() {
            addCriterion("derivative_financial_assets is not null");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsEqualTo(BigDecimal value) {
            addCriterion("derivative_financial_assets =", value, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsNotEqualTo(BigDecimal value) {
            addCriterion("derivative_financial_assets <>", value, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsGreaterThan(BigDecimal value) {
            addCriterion("derivative_financial_assets >", value, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("derivative_financial_assets >=", value, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsLessThan(BigDecimal value) {
            addCriterion("derivative_financial_assets <", value, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("derivative_financial_assets <=", value, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsIn(List<BigDecimal> values) {
            addCriterion("derivative_financial_assets in", values, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsNotIn(List<BigDecimal> values) {
            addCriterion("derivative_financial_assets not in", values, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("derivative_financial_assets between", value1, value2, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("derivative_financial_assets not between", value1, value2, "derivativeFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsIsNull() {
            addCriterion("receivable_notes_accounts is null");
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsIsNotNull() {
            addCriterion("receivable_notes_accounts is not null");
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsEqualTo(Long value) {
            addCriterion("receivable_notes_accounts =", value, "receivableNotesAccounts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andReceivableNotesAccountsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("receivable_notes_accounts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsNotEqualTo(Long value) {
            addCriterion("receivable_notes_accounts <>", value, "receivableNotesAccounts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andReceivableNotesAccountsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("receivable_notes_accounts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsGreaterThan(Long value) {
            addCriterion("receivable_notes_accounts >", value, "receivableNotesAccounts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andReceivableNotesAccountsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("receivable_notes_accounts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsGreaterThanOrEqualTo(Long value) {
            addCriterion("receivable_notes_accounts >=", value, "receivableNotesAccounts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andReceivableNotesAccountsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("receivable_notes_accounts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsLessThan(Long value) {
            addCriterion("receivable_notes_accounts <", value, "receivableNotesAccounts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andReceivableNotesAccountsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("receivable_notes_accounts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsLessThanOrEqualTo(Long value) {
            addCriterion("receivable_notes_accounts <=", value, "receivableNotesAccounts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andReceivableNotesAccountsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("receivable_notes_accounts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsIn(List<Long> values) {
            addCriterion("receivable_notes_accounts in", values, "receivableNotesAccounts");
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsNotIn(List<Long> values) {
            addCriterion("receivable_notes_accounts not in", values, "receivableNotesAccounts");
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsBetween(Long value1, Long value2) {
            addCriterion("receivable_notes_accounts between", value1, value2, "receivableNotesAccounts");
            return (Criteria) this;
        }

        public Criteria andReceivableNotesAccountsNotBetween(Long value1, Long value2) {
            addCriterion("receivable_notes_accounts not between", value1, value2, "receivableNotesAccounts");
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableIsNull() {
            addCriterion("accounts_receivable is null");
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableIsNotNull() {
            addCriterion("accounts_receivable is not null");
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableEqualTo(Long value) {
            addCriterion("accounts_receivable =", value, "accountsReceivable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsReceivableEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_receivable = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableNotEqualTo(Long value) {
            addCriterion("accounts_receivable <>", value, "accountsReceivable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsReceivableNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_receivable <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableGreaterThan(Long value) {
            addCriterion("accounts_receivable >", value, "accountsReceivable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsReceivableGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_receivable > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableGreaterThanOrEqualTo(Long value) {
            addCriterion("accounts_receivable >=", value, "accountsReceivable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsReceivableGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_receivable >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableLessThan(Long value) {
            addCriterion("accounts_receivable <", value, "accountsReceivable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsReceivableLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_receivable < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableLessThanOrEqualTo(Long value) {
            addCriterion("accounts_receivable <=", value, "accountsReceivable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsReceivableLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_receivable <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableIn(List<Long> values) {
            addCriterion("accounts_receivable in", values, "accountsReceivable");
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableNotIn(List<Long> values) {
            addCriterion("accounts_receivable not in", values, "accountsReceivable");
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableBetween(Long value1, Long value2) {
            addCriterion("accounts_receivable between", value1, value2, "accountsReceivable");
            return (Criteria) this;
        }

        public Criteria andAccountsReceivableNotBetween(Long value1, Long value2) {
            addCriterion("accounts_receivable not between", value1, value2, "accountsReceivable");
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeIsNull() {
            addCriterion("advance_charge is null");
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeIsNotNull() {
            addCriterion("advance_charge is not null");
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeEqualTo(BigDecimal value) {
            addCriterion("advance_charge =", value, "advanceCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceChargeEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_charge = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeNotEqualTo(BigDecimal value) {
            addCriterion("advance_charge <>", value, "advanceCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceChargeNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_charge <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeGreaterThan(BigDecimal value) {
            addCriterion("advance_charge >", value, "advanceCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceChargeGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_charge > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("advance_charge >=", value, "advanceCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceChargeGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_charge >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeLessThan(BigDecimal value) {
            addCriterion("advance_charge <", value, "advanceCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceChargeLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_charge < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("advance_charge <=", value, "advanceCharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceChargeLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_charge <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeIn(List<BigDecimal> values) {
            addCriterion("advance_charge in", values, "advanceCharge");
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeNotIn(List<BigDecimal> values) {
            addCriterion("advance_charge not in", values, "advanceCharge");
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("advance_charge between", value1, value2, "advanceCharge");
            return (Criteria) this;
        }

        public Criteria andAdvanceChargeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("advance_charge not between", value1, value2, "advanceCharge");
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsIsNull() {
            addCriterion("other_receipts is null");
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsIsNotNull() {
            addCriterion("other_receipts is not null");
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsEqualTo(BigDecimal value) {
            addCriterion("other_receipts =", value, "otherReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherReceiptsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_receipts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsNotEqualTo(BigDecimal value) {
            addCriterion("other_receipts <>", value, "otherReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherReceiptsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_receipts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsGreaterThan(BigDecimal value) {
            addCriterion("other_receipts >", value, "otherReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherReceiptsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_receipts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_receipts >=", value, "otherReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherReceiptsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_receipts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsLessThan(BigDecimal value) {
            addCriterion("other_receipts <", value, "otherReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherReceiptsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_receipts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_receipts <=", value, "otherReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherReceiptsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_receipts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsIn(List<BigDecimal> values) {
            addCriterion("other_receipts in", values, "otherReceipts");
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsNotIn(List<BigDecimal> values) {
            addCriterion("other_receipts not in", values, "otherReceipts");
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_receipts between", value1, value2, "otherReceipts");
            return (Criteria) this;
        }

        public Criteria andOtherReceiptsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_receipts not between", value1, value2, "otherReceipts");
            return (Criteria) this;
        }

        public Criteria andContractAssetsIsNull() {
            addCriterion("contract_assets is null");
            return (Criteria) this;
        }

        public Criteria andContractAssetsIsNotNull() {
            addCriterion("contract_assets is not null");
            return (Criteria) this;
        }

        public Criteria andContractAssetsEqualTo(BigDecimal value) {
            addCriterion("contract_assets =", value, "contractAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractAssetsNotEqualTo(BigDecimal value) {
            addCriterion("contract_assets <>", value, "contractAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractAssetsGreaterThan(BigDecimal value) {
            addCriterion("contract_assets >", value, "contractAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("contract_assets >=", value, "contractAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractAssetsLessThan(BigDecimal value) {
            addCriterion("contract_assets <", value, "contractAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("contract_assets <=", value, "contractAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractAssetsIn(List<BigDecimal> values) {
            addCriterion("contract_assets in", values, "contractAssets");
            return (Criteria) this;
        }

        public Criteria andContractAssetsNotIn(List<BigDecimal> values) {
            addCriterion("contract_assets not in", values, "contractAssets");
            return (Criteria) this;
        }

        public Criteria andContractAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("contract_assets between", value1, value2, "contractAssets");
            return (Criteria) this;
        }

        public Criteria andContractAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("contract_assets not between", value1, value2, "contractAssets");
            return (Criteria) this;
        }

        public Criteria andInventoryIsNull() {
            addCriterion("inventory is null");
            return (Criteria) this;
        }

        public Criteria andInventoryIsNotNull() {
            addCriterion("inventory is not null");
            return (Criteria) this;
        }

        public Criteria andInventoryEqualTo(BigDecimal value) {
            addCriterion("inventory =", value, "inventory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInventoryEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("inventory = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInventoryNotEqualTo(BigDecimal value) {
            addCriterion("inventory <>", value, "inventory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInventoryNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("inventory <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInventoryGreaterThan(BigDecimal value) {
            addCriterion("inventory >", value, "inventory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInventoryGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("inventory > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInventoryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("inventory >=", value, "inventory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInventoryGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("inventory >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInventoryLessThan(BigDecimal value) {
            addCriterion("inventory <", value, "inventory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInventoryLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("inventory < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInventoryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("inventory <=", value, "inventory");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInventoryLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("inventory <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInventoryIn(List<BigDecimal> values) {
            addCriterion("inventory in", values, "inventory");
            return (Criteria) this;
        }

        public Criteria andInventoryNotIn(List<BigDecimal> values) {
            addCriterion("inventory not in", values, "inventory");
            return (Criteria) this;
        }

        public Criteria andInventoryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("inventory between", value1, value2, "inventory");
            return (Criteria) this;
        }

        public Criteria andInventoryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("inventory not between", value1, value2, "inventory");
            return (Criteria) this;
        }

        public Criteria andSaleAssetsIsNull() {
            addCriterion("sale_assets is null");
            return (Criteria) this;
        }

        public Criteria andSaleAssetsIsNotNull() {
            addCriterion("sale_assets is not null");
            return (Criteria) this;
        }

        public Criteria andSaleAssetsEqualTo(BigDecimal value) {
            addCriterion("sale_assets =", value, "saleAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleAssetsNotEqualTo(BigDecimal value) {
            addCriterion("sale_assets <>", value, "saleAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleAssetsGreaterThan(BigDecimal value) {
            addCriterion("sale_assets >", value, "saleAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("sale_assets >=", value, "saleAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleAssetsLessThan(BigDecimal value) {
            addCriterion("sale_assets <", value, "saleAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("sale_assets <=", value, "saleAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleAssetsIn(List<BigDecimal> values) {
            addCriterion("sale_assets in", values, "saleAssets");
            return (Criteria) this;
        }

        public Criteria andSaleAssetsNotIn(List<BigDecimal> values) {
            addCriterion("sale_assets not in", values, "saleAssets");
            return (Criteria) this;
        }

        public Criteria andSaleAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sale_assets between", value1, value2, "saleAssets");
            return (Criteria) this;
        }

        public Criteria andSaleAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sale_assets not between", value1, value2, "saleAssets");
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsIsNull() {
            addCriterion("one_year_assets is null");
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsIsNotNull() {
            addCriterion("one_year_assets is not null");
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsEqualTo(BigDecimal value) {
            addCriterion("one_year_assets =", value, "oneYearAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneYearAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("one_year_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsNotEqualTo(BigDecimal value) {
            addCriterion("one_year_assets <>", value, "oneYearAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneYearAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("one_year_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsGreaterThan(BigDecimal value) {
            addCriterion("one_year_assets >", value, "oneYearAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneYearAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("one_year_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("one_year_assets >=", value, "oneYearAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneYearAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("one_year_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsLessThan(BigDecimal value) {
            addCriterion("one_year_assets <", value, "oneYearAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneYearAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("one_year_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("one_year_assets <=", value, "oneYearAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneYearAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("one_year_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsIn(List<BigDecimal> values) {
            addCriterion("one_year_assets in", values, "oneYearAssets");
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsNotIn(List<BigDecimal> values) {
            addCriterion("one_year_assets not in", values, "oneYearAssets");
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("one_year_assets between", value1, value2, "oneYearAssets");
            return (Criteria) this;
        }

        public Criteria andOneYearAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("one_year_assets not between", value1, value2, "oneYearAssets");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsIsNull() {
            addCriterion("other_current_assets is null");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsIsNotNull() {
            addCriterion("other_current_assets is not null");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsEqualTo(BigDecimal value) {
            addCriterion("other_current_assets =", value, "otherCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsNotEqualTo(BigDecimal value) {
            addCriterion("other_current_assets <>", value, "otherCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsGreaterThan(BigDecimal value) {
            addCriterion("other_current_assets >", value, "otherCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_current_assets >=", value, "otherCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsLessThan(BigDecimal value) {
            addCriterion("other_current_assets <", value, "otherCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_current_assets <=", value, "otherCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsIn(List<BigDecimal> values) {
            addCriterion("other_current_assets in", values, "otherCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsNotIn(List<BigDecimal> values) {
            addCriterion("other_current_assets not in", values, "otherCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_current_assets between", value1, value2, "otherCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_current_assets not between", value1, value2, "otherCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsIsNull() {
            addCriterion("other_total_current_assets is null");
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsIsNotNull() {
            addCriterion("other_total_current_assets is not null");
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsEqualTo(BigDecimal value) {
            addCriterion("other_total_current_assets =", value, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalCurrentAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_current_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsNotEqualTo(BigDecimal value) {
            addCriterion("other_total_current_assets <>", value, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalCurrentAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_current_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsGreaterThan(BigDecimal value) {
            addCriterion("other_total_current_assets >", value, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalCurrentAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_current_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_total_current_assets >=", value, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalCurrentAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_current_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsLessThan(BigDecimal value) {
            addCriterion("other_total_current_assets <", value, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalCurrentAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_current_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_total_current_assets <=", value, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalCurrentAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_current_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsIn(List<BigDecimal> values) {
            addCriterion("other_total_current_assets in", values, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsNotIn(List<BigDecimal> values) {
            addCriterion("other_total_current_assets not in", values, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_total_current_assets between", value1, value2, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherTotalCurrentAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_total_current_assets not between", value1, value2, "otherTotalCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsIsNull() {
            addCriterion("non_current_assets is null");
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsIsNotNull() {
            addCriterion("non_current_assets is not null");
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsEqualTo(BigDecimal value) {
            addCriterion("non_current_assets =", value, "nonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsNotEqualTo(BigDecimal value) {
            addCriterion("non_current_assets <>", value, "nonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsGreaterThan(BigDecimal value) {
            addCriterion("non_current_assets >", value, "nonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("non_current_assets >=", value, "nonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsLessThan(BigDecimal value) {
            addCriterion("non_current_assets <", value, "nonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("non_current_assets <=", value, "nonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsIn(List<BigDecimal> values) {
            addCriterion("non_current_assets in", values, "nonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsNotIn(List<BigDecimal> values) {
            addCriterion("non_current_assets not in", values, "nonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("non_current_assets between", value1, value2, "nonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andNonCurrentAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("non_current_assets not between", value1, value2, "nonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentIsNull() {
            addCriterion("obligatory_right_investment is null");
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentIsNotNull() {
            addCriterion("obligatory_right_investment is not null");
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentEqualTo(BigDecimal value) {
            addCriterion("obligatory_right_investment =", value, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andObligatoryRightInvestmentEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("obligatory_right_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("obligatory_right_investment <>", value, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andObligatoryRightInvestmentNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("obligatory_right_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentGreaterThan(BigDecimal value) {
            addCriterion("obligatory_right_investment >", value, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andObligatoryRightInvestmentGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("obligatory_right_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("obligatory_right_investment >=", value, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andObligatoryRightInvestmentGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("obligatory_right_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentLessThan(BigDecimal value) {
            addCriterion("obligatory_right_investment <", value, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andObligatoryRightInvestmentLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("obligatory_right_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("obligatory_right_investment <=", value, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andObligatoryRightInvestmentLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("obligatory_right_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentIn(List<BigDecimal> values) {
            addCriterion("obligatory_right_investment in", values, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("obligatory_right_investment not in", values, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("obligatory_right_investment between", value1, value2, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        public Criteria andObligatoryRightInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("obligatory_right_investment not between", value1, value2, "obligatoryRightInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentIsNull() {
            addCriterion("other_obligatory_right_investment is null");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentIsNotNull() {
            addCriterion("other_obligatory_right_investment is not null");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentEqualTo(BigDecimal value) {
            addCriterion("other_obligatory_right_investment =", value, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("other_obligatory_right_investment <>", value, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentGreaterThan(BigDecimal value) {
            addCriterion("other_obligatory_right_investment >", value, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_obligatory_right_investment >=", value, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentLessThan(BigDecimal value) {
            addCriterion("other_obligatory_right_investment <", value, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_obligatory_right_investment <=", value, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentIn(List<BigDecimal> values) {
            addCriterion("other_obligatory_right_investment in", values, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("other_obligatory_right_investment not in", values, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_obligatory_right_investment between", value1, value2, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_obligatory_right_investment not between", value1, value2, "otherObligatoryRightInvestment");
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesIsNull() {
            addCriterion("long_term_receivables is null");
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesIsNotNull() {
            addCriterion("long_term_receivables is not null");
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesEqualTo(BigDecimal value) {
            addCriterion("long_term_receivables =", value, "longTermReceivables");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermReceivablesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_receivables = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesNotEqualTo(BigDecimal value) {
            addCriterion("long_term_receivables <>", value, "longTermReceivables");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermReceivablesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_receivables <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesGreaterThan(BigDecimal value) {
            addCriterion("long_term_receivables >", value, "longTermReceivables");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermReceivablesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_receivables > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("long_term_receivables >=", value, "longTermReceivables");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermReceivablesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_receivables >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesLessThan(BigDecimal value) {
            addCriterion("long_term_receivables <", value, "longTermReceivables");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermReceivablesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_receivables < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("long_term_receivables <=", value, "longTermReceivables");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermReceivablesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_receivables <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesIn(List<BigDecimal> values) {
            addCriterion("long_term_receivables in", values, "longTermReceivables");
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesNotIn(List<BigDecimal> values) {
            addCriterion("long_term_receivables not in", values, "longTermReceivables");
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_term_receivables between", value1, value2, "longTermReceivables");
            return (Criteria) this;
        }

        public Criteria andLongTermReceivablesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_term_receivables not between", value1, value2, "longTermReceivables");
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentIsNull() {
            addCriterion("long_term_investment is null");
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentIsNotNull() {
            addCriterion("long_term_investment is not null");
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentEqualTo(BigDecimal value) {
            addCriterion("long_term_investment =", value, "longTermInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermInvestmentEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("long_term_investment <>", value, "longTermInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermInvestmentNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentGreaterThan(BigDecimal value) {
            addCriterion("long_term_investment >", value, "longTermInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermInvestmentGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("long_term_investment >=", value, "longTermInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermInvestmentGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentLessThan(BigDecimal value) {
            addCriterion("long_term_investment <", value, "longTermInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermInvestmentLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("long_term_investment <=", value, "longTermInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermInvestmentLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentIn(List<BigDecimal> values) {
            addCriterion("long_term_investment in", values, "longTermInvestment");
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("long_term_investment not in", values, "longTermInvestment");
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_term_investment between", value1, value2, "longTermInvestment");
            return (Criteria) this;
        }

        public Criteria andLongTermInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_term_investment not between", value1, value2, "longTermInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentIsNull() {
            addCriterion("other_equity_investment is null");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentIsNotNull() {
            addCriterion("other_equity_investment is not null");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentEqualTo(BigDecimal value) {
            addCriterion("other_equity_investment =", value, "otherEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInvestmentEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("other_equity_investment <>", value, "otherEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInvestmentNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentGreaterThan(BigDecimal value) {
            addCriterion("other_equity_investment >", value, "otherEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInvestmentGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_equity_investment >=", value, "otherEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInvestmentGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentLessThan(BigDecimal value) {
            addCriterion("other_equity_investment <", value, "otherEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInvestmentLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_equity_investment <=", value, "otherEquityInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInvestmentLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentIn(List<BigDecimal> values) {
            addCriterion("other_equity_investment in", values, "otherEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("other_equity_investment not in", values, "otherEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_equity_investment between", value1, value2, "otherEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_equity_investment not between", value1, value2, "otherEquityInvestment");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsIsNull() {
            addCriterion("other_non_current_financial_assets is null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsIsNotNull() {
            addCriterion("other_non_current_financial_assets is not null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsEqualTo(BigDecimal value) {
            addCriterion("other_non_current_financial_assets =", value, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentFinancialAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_financial_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsNotEqualTo(BigDecimal value) {
            addCriterion("other_non_current_financial_assets <>", value, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentFinancialAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_financial_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsGreaterThan(BigDecimal value) {
            addCriterion("other_non_current_financial_assets >", value, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentFinancialAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_financial_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_financial_assets >=", value, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentFinancialAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_financial_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsLessThan(BigDecimal value) {
            addCriterion("other_non_current_financial_assets <", value, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentFinancialAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_financial_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_financial_assets <=", value, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentFinancialAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_financial_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsIn(List<BigDecimal> values) {
            addCriterion("other_non_current_financial_assets in", values, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsNotIn(List<BigDecimal> values) {
            addCriterion("other_non_current_financial_assets not in", values, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_financial_assets between", value1, value2, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentFinancialAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_financial_assets not between", value1, value2, "otherNonCurrentFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyIsNull() {
            addCriterion("investment_property is null");
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyIsNotNull() {
            addCriterion("investment_property is not null");
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyEqualTo(BigDecimal value) {
            addCriterion("investment_property =", value, "investmentProperty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInvestmentPropertyEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("investment_property = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyNotEqualTo(BigDecimal value) {
            addCriterion("investment_property <>", value, "investmentProperty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInvestmentPropertyNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("investment_property <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyGreaterThan(BigDecimal value) {
            addCriterion("investment_property >", value, "investmentProperty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInvestmentPropertyGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("investment_property > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_property >=", value, "investmentProperty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInvestmentPropertyGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("investment_property >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyLessThan(BigDecimal value) {
            addCriterion("investment_property <", value, "investmentProperty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInvestmentPropertyLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("investment_property < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_property <=", value, "investmentProperty");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andInvestmentPropertyLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("investment_property <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyIn(List<BigDecimal> values) {
            addCriterion("investment_property in", values, "investmentProperty");
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyNotIn(List<BigDecimal> values) {
            addCriterion("investment_property not in", values, "investmentProperty");
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_property between", value1, value2, "investmentProperty");
            return (Criteria) this;
        }

        public Criteria andInvestmentPropertyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_property not between", value1, value2, "investmentProperty");
            return (Criteria) this;
        }

        public Criteria andFixedAssetsIsNull() {
            addCriterion("fixed_assets is null");
            return (Criteria) this;
        }

        public Criteria andFixedAssetsIsNotNull() {
            addCriterion("fixed_assets is not null");
            return (Criteria) this;
        }

        public Criteria andFixedAssetsEqualTo(BigDecimal value) {
            addCriterion("fixed_assets =", value, "fixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFixedAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("fixed_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFixedAssetsNotEqualTo(BigDecimal value) {
            addCriterion("fixed_assets <>", value, "fixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFixedAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("fixed_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFixedAssetsGreaterThan(BigDecimal value) {
            addCriterion("fixed_assets >", value, "fixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFixedAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("fixed_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFixedAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("fixed_assets >=", value, "fixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFixedAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("fixed_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFixedAssetsLessThan(BigDecimal value) {
            addCriterion("fixed_assets <", value, "fixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFixedAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("fixed_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFixedAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("fixed_assets <=", value, "fixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFixedAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("fixed_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFixedAssetsIn(List<BigDecimal> values) {
            addCriterion("fixed_assets in", values, "fixedAssets");
            return (Criteria) this;
        }

        public Criteria andFixedAssetsNotIn(List<BigDecimal> values) {
            addCriterion("fixed_assets not in", values, "fixedAssets");
            return (Criteria) this;
        }

        public Criteria andFixedAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fixed_assets between", value1, value2, "fixedAssets");
            return (Criteria) this;
        }

        public Criteria andFixedAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fixed_assets not between", value1, value2, "fixedAssets");
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressIsNull() {
            addCriterion("construction_in_progress is null");
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressIsNotNull() {
            addCriterion("construction_in_progress is not null");
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressEqualTo(BigDecimal value) {
            addCriterion("construction_in_progress =", value, "constructionInProgress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andConstructionInProgressEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("construction_in_progress = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressNotEqualTo(BigDecimal value) {
            addCriterion("construction_in_progress <>", value, "constructionInProgress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andConstructionInProgressNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("construction_in_progress <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressGreaterThan(BigDecimal value) {
            addCriterion("construction_in_progress >", value, "constructionInProgress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andConstructionInProgressGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("construction_in_progress > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("construction_in_progress >=", value, "constructionInProgress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andConstructionInProgressGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("construction_in_progress >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressLessThan(BigDecimal value) {
            addCriterion("construction_in_progress <", value, "constructionInProgress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andConstructionInProgressLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("construction_in_progress < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressLessThanOrEqualTo(BigDecimal value) {
            addCriterion("construction_in_progress <=", value, "constructionInProgress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andConstructionInProgressLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("construction_in_progress <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressIn(List<BigDecimal> values) {
            addCriterion("construction_in_progress in", values, "constructionInProgress");
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressNotIn(List<BigDecimal> values) {
            addCriterion("construction_in_progress not in", values, "constructionInProgress");
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("construction_in_progress between", value1, value2, "constructionInProgress");
            return (Criteria) this;
        }

        public Criteria andConstructionInProgressNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("construction_in_progress not between", value1, value2, "constructionInProgress");
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsIsNull() {
            addCriterion("productive_biological_assets is null");
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsIsNotNull() {
            addCriterion("productive_biological_assets is not null");
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsEqualTo(BigDecimal value) {
            addCriterion("productive_biological_assets =", value, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProductiveBiologicalAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("productive_biological_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsNotEqualTo(BigDecimal value) {
            addCriterion("productive_biological_assets <>", value, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProductiveBiologicalAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("productive_biological_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsGreaterThan(BigDecimal value) {
            addCriterion("productive_biological_assets >", value, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProductiveBiologicalAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("productive_biological_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("productive_biological_assets >=", value, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProductiveBiologicalAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("productive_biological_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsLessThan(BigDecimal value) {
            addCriterion("productive_biological_assets <", value, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProductiveBiologicalAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("productive_biological_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("productive_biological_assets <=", value, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProductiveBiologicalAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("productive_biological_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsIn(List<BigDecimal> values) {
            addCriterion("productive_biological_assets in", values, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsNotIn(List<BigDecimal> values) {
            addCriterion("productive_biological_assets not in", values, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("productive_biological_assets between", value1, value2, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        public Criteria andProductiveBiologicalAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("productive_biological_assets not between", value1, value2, "productiveBiologicalAssets");
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsIsNull() {
            addCriterion("oil_gas_assets is null");
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsIsNotNull() {
            addCriterion("oil_gas_assets is not null");
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsEqualTo(BigDecimal value) {
            addCriterion("oil_gas_assets =", value, "oilGasAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOilGasAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oil_gas_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsNotEqualTo(BigDecimal value) {
            addCriterion("oil_gas_assets <>", value, "oilGasAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOilGasAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oil_gas_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsGreaterThan(BigDecimal value) {
            addCriterion("oil_gas_assets >", value, "oilGasAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOilGasAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oil_gas_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("oil_gas_assets >=", value, "oilGasAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOilGasAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oil_gas_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsLessThan(BigDecimal value) {
            addCriterion("oil_gas_assets <", value, "oilGasAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOilGasAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oil_gas_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("oil_gas_assets <=", value, "oilGasAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOilGasAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oil_gas_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsIn(List<BigDecimal> values) {
            addCriterion("oil_gas_assets in", values, "oilGasAssets");
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsNotIn(List<BigDecimal> values) {
            addCriterion("oil_gas_assets not in", values, "oilGasAssets");
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("oil_gas_assets between", value1, value2, "oilGasAssets");
            return (Criteria) this;
        }

        public Criteria andOilGasAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("oil_gas_assets not between", value1, value2, "oilGasAssets");
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsIsNull() {
            addCriterion("five_star_assets is null");
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsIsNotNull() {
            addCriterion("five_star_assets is not null");
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsEqualTo(BigDecimal value) {
            addCriterion("five_star_assets =", value, "fiveStarAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFiveStarAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("five_star_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsNotEqualTo(BigDecimal value) {
            addCriterion("five_star_assets <>", value, "fiveStarAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFiveStarAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("five_star_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsGreaterThan(BigDecimal value) {
            addCriterion("five_star_assets >", value, "fiveStarAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFiveStarAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("five_star_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("five_star_assets >=", value, "fiveStarAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFiveStarAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("five_star_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsLessThan(BigDecimal value) {
            addCriterion("five_star_assets <", value, "fiveStarAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFiveStarAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("five_star_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("five_star_assets <=", value, "fiveStarAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andFiveStarAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("five_star_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsIn(List<BigDecimal> values) {
            addCriterion("five_star_assets in", values, "fiveStarAssets");
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsNotIn(List<BigDecimal> values) {
            addCriterion("five_star_assets not in", values, "fiveStarAssets");
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("five_star_assets between", value1, value2, "fiveStarAssets");
            return (Criteria) this;
        }

        public Criteria andFiveStarAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("five_star_assets not between", value1, value2, "fiveStarAssets");
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureIsNull() {
            addCriterion("development_expenditure is null");
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureIsNotNull() {
            addCriterion("development_expenditure is not null");
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureEqualTo(BigDecimal value) {
            addCriterion("development_expenditure =", value, "developmentExpenditure");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDevelopmentExpenditureEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("development_expenditure = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureNotEqualTo(BigDecimal value) {
            addCriterion("development_expenditure <>", value, "developmentExpenditure");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDevelopmentExpenditureNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("development_expenditure <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureGreaterThan(BigDecimal value) {
            addCriterion("development_expenditure >", value, "developmentExpenditure");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDevelopmentExpenditureGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("development_expenditure > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("development_expenditure >=", value, "developmentExpenditure");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDevelopmentExpenditureGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("development_expenditure >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureLessThan(BigDecimal value) {
            addCriterion("development_expenditure <", value, "developmentExpenditure");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDevelopmentExpenditureLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("development_expenditure < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureLessThanOrEqualTo(BigDecimal value) {
            addCriterion("development_expenditure <=", value, "developmentExpenditure");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDevelopmentExpenditureLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("development_expenditure <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureIn(List<BigDecimal> values) {
            addCriterion("development_expenditure in", values, "developmentExpenditure");
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureNotIn(List<BigDecimal> values) {
            addCriterion("development_expenditure not in", values, "developmentExpenditure");
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("development_expenditure between", value1, value2, "developmentExpenditure");
            return (Criteria) this;
        }

        public Criteria andDevelopmentExpenditureNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("development_expenditure not between", value1, value2, "developmentExpenditure");
            return (Criteria) this;
        }

        public Criteria andGoodwillIsNull() {
            addCriterion("goodwill is null");
            return (Criteria) this;
        }

        public Criteria andGoodwillIsNotNull() {
            addCriterion("goodwill is not null");
            return (Criteria) this;
        }

        public Criteria andGoodwillEqualTo(BigDecimal value) {
            addCriterion("goodwill =", value, "goodwill");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andGoodwillEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("goodwill = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodwillNotEqualTo(BigDecimal value) {
            addCriterion("goodwill <>", value, "goodwill");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andGoodwillNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("goodwill <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodwillGreaterThan(BigDecimal value) {
            addCriterion("goodwill >", value, "goodwill");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andGoodwillGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("goodwill > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodwillGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("goodwill >=", value, "goodwill");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andGoodwillGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("goodwill >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodwillLessThan(BigDecimal value) {
            addCriterion("goodwill <", value, "goodwill");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andGoodwillLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("goodwill < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodwillLessThanOrEqualTo(BigDecimal value) {
            addCriterion("goodwill <=", value, "goodwill");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andGoodwillLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("goodwill <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodwillIn(List<BigDecimal> values) {
            addCriterion("goodwill in", values, "goodwill");
            return (Criteria) this;
        }

        public Criteria andGoodwillNotIn(List<BigDecimal> values) {
            addCriterion("goodwill not in", values, "goodwill");
            return (Criteria) this;
        }

        public Criteria andGoodwillBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("goodwill between", value1, value2, "goodwill");
            return (Criteria) this;
        }

        public Criteria andGoodwillNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("goodwill not between", value1, value2, "goodwill");
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionIsNull() {
            addCriterion("long_expected_contribution is null");
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionIsNotNull() {
            addCriterion("long_expected_contribution is not null");
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionEqualTo(BigDecimal value) {
            addCriterion("long_expected_contribution =", value, "longExpectedContribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongExpectedContributionEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_expected_contribution = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionNotEqualTo(BigDecimal value) {
            addCriterion("long_expected_contribution <>", value, "longExpectedContribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongExpectedContributionNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_expected_contribution <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionGreaterThan(BigDecimal value) {
            addCriterion("long_expected_contribution >", value, "longExpectedContribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongExpectedContributionGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_expected_contribution > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("long_expected_contribution >=", value, "longExpectedContribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongExpectedContributionGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_expected_contribution >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionLessThan(BigDecimal value) {
            addCriterion("long_expected_contribution <", value, "longExpectedContribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongExpectedContributionLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_expected_contribution < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionLessThanOrEqualTo(BigDecimal value) {
            addCriterion("long_expected_contribution <=", value, "longExpectedContribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongExpectedContributionLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_expected_contribution <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionIn(List<BigDecimal> values) {
            addCriterion("long_expected_contribution in", values, "longExpectedContribution");
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionNotIn(List<BigDecimal> values) {
            addCriterion("long_expected_contribution not in", values, "longExpectedContribution");
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_expected_contribution between", value1, value2, "longExpectedContribution");
            return (Criteria) this;
        }

        public Criteria andLongExpectedContributionNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_expected_contribution not between", value1, value2, "longExpectedContribution");
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesIsNull() {
            addCriterion("deferredincome_taxcharges is null");
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesIsNotNull() {
            addCriterion("deferredincome_taxcharges is not null");
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesEqualTo(BigDecimal value) {
            addCriterion("deferredincome_taxcharges =", value, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredincomeTaxchargesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferredincome_taxcharges = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesNotEqualTo(BigDecimal value) {
            addCriterion("deferredincome_taxcharges <>", value, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredincomeTaxchargesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferredincome_taxcharges <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesGreaterThan(BigDecimal value) {
            addCriterion("deferredincome_taxcharges >", value, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredincomeTaxchargesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferredincome_taxcharges > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("deferredincome_taxcharges >=", value, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredincomeTaxchargesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferredincome_taxcharges >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesLessThan(BigDecimal value) {
            addCriterion("deferredincome_taxcharges <", value, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredincomeTaxchargesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferredincome_taxcharges < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("deferredincome_taxcharges <=", value, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredincomeTaxchargesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferredincome_taxcharges <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesIn(List<BigDecimal> values) {
            addCriterion("deferredincome_taxcharges in", values, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesNotIn(List<BigDecimal> values) {
            addCriterion("deferredincome_taxcharges not in", values, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deferredincome_taxcharges between", value1, value2, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        public Criteria andDeferredincomeTaxchargesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deferredincome_taxcharges not between", value1, value2, "deferredincomeTaxcharges");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsIsNull() {
            addCriterion("other_non_current_assets is null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsIsNotNull() {
            addCriterion("other_non_current_assets is not null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsEqualTo(BigDecimal value) {
            addCriterion("other_non_current_assets =", value, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsNotEqualTo(BigDecimal value) {
            addCriterion("other_non_current_assets <>", value, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsGreaterThan(BigDecimal value) {
            addCriterion("other_non_current_assets >", value, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_assets >=", value, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsLessThan(BigDecimal value) {
            addCriterion("other_non_current_assets <", value, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_assets <=", value, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsIn(List<BigDecimal> values) {
            addCriterion("other_non_current_assets in", values, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsNotIn(List<BigDecimal> values) {
            addCriterion("other_non_current_assets not in", values, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_assets between", value1, value2, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_assets not between", value1, value2, "otherNonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsIsNull() {
            addCriterion("other_total_non_current_assets is null");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsIsNotNull() {
            addCriterion("other_total_non_current_assets is not null");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsEqualTo(BigDecimal value) {
            addCriterion("other_total_non_current_assets =", value, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsNotEqualTo(BigDecimal value) {
            addCriterion("other_total_non_current_assets <>", value, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsGreaterThan(BigDecimal value) {
            addCriterion("other_total_non_current_assets >", value, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_total_non_current_assets >=", value, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsLessThan(BigDecimal value) {
            addCriterion("other_total_non_current_assets <", value, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_total_non_current_assets <=", value, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsIn(List<BigDecimal> values) {
            addCriterion("other_total_non_current_assets in", values, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsNotIn(List<BigDecimal> values) {
            addCriterion("other_total_non_current_assets not in", values, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_total_non_current_assets between", value1, value2, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_total_non_current_assets not between", value1, value2, "otherTotalNonCurrentAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsIsNull() {
            addCriterion("other_non_current_assets_total_assets is null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsIsNotNull() {
            addCriterion("other_non_current_assets_total_assets is not null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsEqualTo(BigDecimal value) {
            addCriterion("other_non_current_assets_total_assets =", value, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsTotalAssetsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets_total_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsNotEqualTo(BigDecimal value) {
            addCriterion("other_non_current_assets_total_assets <>", value, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsTotalAssetsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets_total_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsGreaterThan(BigDecimal value) {
            addCriterion("other_non_current_assets_total_assets >", value, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsTotalAssetsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets_total_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_assets_total_assets >=", value, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsTotalAssetsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets_total_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsLessThan(BigDecimal value) {
            addCriterion("other_non_current_assets_total_assets <", value, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsTotalAssetsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets_total_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_assets_total_assets <=", value, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentAssetsTotalAssetsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_assets_total_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsIn(List<BigDecimal> values) {
            addCriterion("other_non_current_assets_total_assets in", values, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsNotIn(List<BigDecimal> values) {
            addCriterion("other_non_current_assets_total_assets not in", values, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_assets_total_assets between", value1, value2, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentAssetsTotalAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_assets_total_assets not between", value1, value2, "otherNonCurrentAssetsTotalAssets");
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesIsNull() {
            addCriterion("current_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesIsNotNull() {
            addCriterion("current_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("current_liabilities =", value, "currentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("current_liabilities <>", value, "currentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("current_liabilities >", value, "currentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("current_liabilities >=", value, "currentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesLessThan(BigDecimal value) {
            addCriterion("current_liabilities <", value, "currentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("current_liabilities <=", value, "currentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCurrentLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("current_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("current_liabilities in", values, "currentLiabilities");
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("current_liabilities not in", values, "currentLiabilities");
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_liabilities between", value1, value2, "currentLiabilities");
            return (Criteria) this;
        }

        public Criteria andCurrentLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_liabilities not between", value1, value2, "currentLiabilities");
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingIsNull() {
            addCriterion("short_term_borrowing is null");
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingIsNotNull() {
            addCriterion("short_term_borrowing is not null");
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingEqualTo(BigDecimal value) {
            addCriterion("short_term_borrowing =", value, "shortTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andShortTermBorrowingEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("short_term_borrowing = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingNotEqualTo(BigDecimal value) {
            addCriterion("short_term_borrowing <>", value, "shortTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andShortTermBorrowingNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("short_term_borrowing <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingGreaterThan(BigDecimal value) {
            addCriterion("short_term_borrowing >", value, "shortTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andShortTermBorrowingGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("short_term_borrowing > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("short_term_borrowing >=", value, "shortTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andShortTermBorrowingGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("short_term_borrowing >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingLessThan(BigDecimal value) {
            addCriterion("short_term_borrowing <", value, "shortTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andShortTermBorrowingLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("short_term_borrowing < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingLessThanOrEqualTo(BigDecimal value) {
            addCriterion("short_term_borrowing <=", value, "shortTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andShortTermBorrowingLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("short_term_borrowing <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingIn(List<BigDecimal> values) {
            addCriterion("short_term_borrowing in", values, "shortTermBorrowing");
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingNotIn(List<BigDecimal> values) {
            addCriterion("short_term_borrowing not in", values, "shortTermBorrowing");
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("short_term_borrowing between", value1, value2, "shortTermBorrowing");
            return (Criteria) this;
        }

        public Criteria andShortTermBorrowingNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("short_term_borrowing not between", value1, value2, "shortTermBorrowing");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesIsNull() {
            addCriterion("transactional_financial_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesIsNotNull() {
            addCriterion("transactional_financial_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("transactional_financial_liabilities =", value, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("transactional_financial_liabilities <>", value, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("transactional_financial_liabilities >", value, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("transactional_financial_liabilities >=", value, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesLessThan(BigDecimal value) {
            addCriterion("transactional_financial_liabilities <", value, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("transactional_financial_liabilities <=", value, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTransactionalFinancialLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("transactional_financial_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("transactional_financial_liabilities in", values, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("transactional_financial_liabilities not in", values, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("transactional_financial_liabilities between", value1, value2, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        public Criteria andTransactionalFinancialLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("transactional_financial_liabilities not between", value1, value2, "transactionalFinancialLiabilities");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesIsNull() {
            addCriterion("derivative_financial_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesIsNotNull() {
            addCriterion("derivative_financial_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("derivative_financial_liabilities =", value, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("derivative_financial_liabilities <>", value, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("derivative_financial_liabilities >", value, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("derivative_financial_liabilities >=", value, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesLessThan(BigDecimal value) {
            addCriterion("derivative_financial_liabilities <", value, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("derivative_financial_liabilities <=", value, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDerivativeFinancialLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("derivative_financial_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("derivative_financial_liabilities in", values, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("derivative_financial_liabilities not in", values, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("derivative_financial_liabilities between", value1, value2, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        public Criteria andDerivativeFinancialLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("derivative_financial_liabilities not between", value1, value2, "derivativeFinancialLiabilities");
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesIsNull() {
            addCriterion("payable_accounts_notes is null");
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesIsNotNull() {
            addCriterion("payable_accounts_notes is not null");
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesEqualTo(Long value) {
            addCriterion("payable_accounts_notes =", value, "payableAccountsNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayableAccountsNotesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("payable_accounts_notes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesNotEqualTo(Long value) {
            addCriterion("payable_accounts_notes <>", value, "payableAccountsNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayableAccountsNotesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("payable_accounts_notes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesGreaterThan(Long value) {
            addCriterion("payable_accounts_notes >", value, "payableAccountsNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayableAccountsNotesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("payable_accounts_notes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesGreaterThanOrEqualTo(Long value) {
            addCriterion("payable_accounts_notes >=", value, "payableAccountsNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayableAccountsNotesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("payable_accounts_notes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesLessThan(Long value) {
            addCriterion("payable_accounts_notes <", value, "payableAccountsNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayableAccountsNotesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("payable_accounts_notes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesLessThanOrEqualTo(Long value) {
            addCriterion("payable_accounts_notes <=", value, "payableAccountsNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayableAccountsNotesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("payable_accounts_notes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesIn(List<Long> values) {
            addCriterion("payable_accounts_notes in", values, "payableAccountsNotes");
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesNotIn(List<Long> values) {
            addCriterion("payable_accounts_notes not in", values, "payableAccountsNotes");
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesBetween(Long value1, Long value2) {
            addCriterion("payable_accounts_notes between", value1, value2, "payableAccountsNotes");
            return (Criteria) this;
        }

        public Criteria andPayableAccountsNotesNotBetween(Long value1, Long value2) {
            addCriterion("payable_accounts_notes not between", value1, value2, "payableAccountsNotes");
            return (Criteria) this;
        }

        public Criteria andAccountsPayableIsNull() {
            addCriterion("accounts_payable is null");
            return (Criteria) this;
        }

        public Criteria andAccountsPayableIsNotNull() {
            addCriterion("accounts_payable is not null");
            return (Criteria) this;
        }

        public Criteria andAccountsPayableEqualTo(Long value) {
            addCriterion("accounts_payable =", value, "accountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsPayableEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_payable = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsPayableNotEqualTo(Long value) {
            addCriterion("accounts_payable <>", value, "accountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsPayableNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_payable <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsPayableGreaterThan(Long value) {
            addCriterion("accounts_payable >", value, "accountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsPayableGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_payable > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsPayableGreaterThanOrEqualTo(Long value) {
            addCriterion("accounts_payable >=", value, "accountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsPayableGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_payable >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsPayableLessThan(Long value) {
            addCriterion("accounts_payable <", value, "accountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsPayableLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_payable < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsPayableLessThanOrEqualTo(Long value) {
            addCriterion("accounts_payable <=", value, "accountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAccountsPayableLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("accounts_payable <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountsPayableIn(List<Long> values) {
            addCriterion("accounts_payable in", values, "accountsPayable");
            return (Criteria) this;
        }

        public Criteria andAccountsPayableNotIn(List<Long> values) {
            addCriterion("accounts_payable not in", values, "accountsPayable");
            return (Criteria) this;
        }

        public Criteria andAccountsPayableBetween(Long value1, Long value2) {
            addCriterion("accounts_payable between", value1, value2, "accountsPayable");
            return (Criteria) this;
        }

        public Criteria andAccountsPayableNotBetween(Long value1, Long value2) {
            addCriterion("accounts_payable not between", value1, value2, "accountsPayable");
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsIsNull() {
            addCriterion("advance_receipts is null");
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsIsNotNull() {
            addCriterion("advance_receipts is not null");
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsEqualTo(BigDecimal value) {
            addCriterion("advance_receipts =", value, "advanceReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceReceiptsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_receipts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsNotEqualTo(BigDecimal value) {
            addCriterion("advance_receipts <>", value, "advanceReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceReceiptsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_receipts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsGreaterThan(BigDecimal value) {
            addCriterion("advance_receipts >", value, "advanceReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceReceiptsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_receipts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("advance_receipts >=", value, "advanceReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceReceiptsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_receipts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsLessThan(BigDecimal value) {
            addCriterion("advance_receipts <", value, "advanceReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceReceiptsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_receipts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("advance_receipts <=", value, "advanceReceipts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andAdvanceReceiptsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("advance_receipts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsIn(List<BigDecimal> values) {
            addCriterion("advance_receipts in", values, "advanceReceipts");
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsNotIn(List<BigDecimal> values) {
            addCriterion("advance_receipts not in", values, "advanceReceipts");
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("advance_receipts between", value1, value2, "advanceReceipts");
            return (Criteria) this;
        }

        public Criteria andAdvanceReceiptsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("advance_receipts not between", value1, value2, "advanceReceipts");
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesIsNull() {
            addCriterion("contract_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesIsNotNull() {
            addCriterion("contract_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("contract_liabilities =", value, "contractLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("contract_liabilities <>", value, "contractLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("contract_liabilities >", value, "contractLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("contract_liabilities >=", value, "contractLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesLessThan(BigDecimal value) {
            addCriterion("contract_liabilities <", value, "contractLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("contract_liabilities <=", value, "contractLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andContractLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("contract_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("contract_liabilities in", values, "contractLiabilities");
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("contract_liabilities not in", values, "contractLiabilities");
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("contract_liabilities between", value1, value2, "contractLiabilities");
            return (Criteria) this;
        }

        public Criteria andContractLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("contract_liabilities not between", value1, value2, "contractLiabilities");
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryIsNull() {
            addCriterion("paid_workers_salary is null");
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryIsNotNull() {
            addCriterion("paid_workers_salary is not null");
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryEqualTo(BigDecimal value) {
            addCriterion("paid_workers_salary =", value, "paidWorkersSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidWorkersSalaryEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_workers_salary = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryNotEqualTo(BigDecimal value) {
            addCriterion("paid_workers_salary <>", value, "paidWorkersSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidWorkersSalaryNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_workers_salary <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryGreaterThan(BigDecimal value) {
            addCriterion("paid_workers_salary >", value, "paidWorkersSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidWorkersSalaryGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_workers_salary > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("paid_workers_salary >=", value, "paidWorkersSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidWorkersSalaryGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_workers_salary >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryLessThan(BigDecimal value) {
            addCriterion("paid_workers_salary <", value, "paidWorkersSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidWorkersSalaryLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_workers_salary < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("paid_workers_salary <=", value, "paidWorkersSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidWorkersSalaryLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_workers_salary <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryIn(List<BigDecimal> values) {
            addCriterion("paid_workers_salary in", values, "paidWorkersSalary");
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryNotIn(List<BigDecimal> values) {
            addCriterion("paid_workers_salary not in", values, "paidWorkersSalary");
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("paid_workers_salary between", value1, value2, "paidWorkersSalary");
            return (Criteria) this;
        }

        public Criteria andPaidWorkersSalaryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("paid_workers_salary not between", value1, value2, "paidWorkersSalary");
            return (Criteria) this;
        }

        public Criteria andTaxPayableIsNull() {
            addCriterion("tax_payable is null");
            return (Criteria) this;
        }

        public Criteria andTaxPayableIsNotNull() {
            addCriterion("tax_payable is not null");
            return (Criteria) this;
        }

        public Criteria andTaxPayableEqualTo(BigDecimal value) {
            addCriterion("tax_payable =", value, "taxPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTaxPayableEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("tax_payable = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPayableNotEqualTo(BigDecimal value) {
            addCriterion("tax_payable <>", value, "taxPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTaxPayableNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("tax_payable <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPayableGreaterThan(BigDecimal value) {
            addCriterion("tax_payable >", value, "taxPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTaxPayableGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("tax_payable > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPayableGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_payable >=", value, "taxPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTaxPayableGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("tax_payable >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPayableLessThan(BigDecimal value) {
            addCriterion("tax_payable <", value, "taxPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTaxPayableLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("tax_payable < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPayableLessThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_payable <=", value, "taxPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTaxPayableLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("tax_payable <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPayableIn(List<BigDecimal> values) {
            addCriterion("tax_payable in", values, "taxPayable");
            return (Criteria) this;
        }

        public Criteria andTaxPayableNotIn(List<BigDecimal> values) {
            addCriterion("tax_payable not in", values, "taxPayable");
            return (Criteria) this;
        }

        public Criteria andTaxPayableBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_payable between", value1, value2, "taxPayable");
            return (Criteria) this;
        }

        public Criteria andTaxPayableNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_payable not between", value1, value2, "taxPayable");
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableIsNull() {
            addCriterion("other_accounts_payable is null");
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableIsNotNull() {
            addCriterion("other_accounts_payable is not null");
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableEqualTo(BigDecimal value) {
            addCriterion("other_accounts_payable =", value, "otherAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherAccountsPayableEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_accounts_payable = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableNotEqualTo(BigDecimal value) {
            addCriterion("other_accounts_payable <>", value, "otherAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherAccountsPayableNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_accounts_payable <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableGreaterThan(BigDecimal value) {
            addCriterion("other_accounts_payable >", value, "otherAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherAccountsPayableGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_accounts_payable > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_accounts_payable >=", value, "otherAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherAccountsPayableGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_accounts_payable >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableLessThan(BigDecimal value) {
            addCriterion("other_accounts_payable <", value, "otherAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherAccountsPayableLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_accounts_payable < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_accounts_payable <=", value, "otherAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherAccountsPayableLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_accounts_payable <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableIn(List<BigDecimal> values) {
            addCriterion("other_accounts_payable in", values, "otherAccountsPayable");
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableNotIn(List<BigDecimal> values) {
            addCriterion("other_accounts_payable not in", values, "otherAccountsPayable");
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_accounts_payable between", value1, value2, "otherAccountsPayable");
            return (Criteria) this;
        }

        public Criteria andOtherAccountsPayableNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_accounts_payable not between", value1, value2, "otherAccountsPayable");
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesIsNull() {
            addCriterion("sale_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesIsNotNull() {
            addCriterion("sale_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("sale_liabilities =", value, "saleLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("sale_liabilities <>", value, "saleLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("sale_liabilities >", value, "saleLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("sale_liabilities >=", value, "saleLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesLessThan(BigDecimal value) {
            addCriterion("sale_liabilities <", value, "saleLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("sale_liabilities <=", value, "saleLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSaleLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("sale_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("sale_liabilities in", values, "saleLiabilities");
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("sale_liabilities not in", values, "saleLiabilities");
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sale_liabilities between", value1, value2, "saleLiabilities");
            return (Criteria) this;
        }

        public Criteria andSaleLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sale_liabilities not between", value1, value2, "saleLiabilities");
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityIsNull() {
            addCriterion("oneYear_non_current_liability is null");
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityIsNotNull() {
            addCriterion("oneYear_non_current_liability is not null");
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityEqualTo(BigDecimal value) {
            addCriterion("oneYear_non_current_liability =", value, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneyearNonCurrentLiabilityEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oneYear_non_current_liability = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityNotEqualTo(BigDecimal value) {
            addCriterion("oneYear_non_current_liability <>", value, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneyearNonCurrentLiabilityNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oneYear_non_current_liability <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityGreaterThan(BigDecimal value) {
            addCriterion("oneYear_non_current_liability >", value, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneyearNonCurrentLiabilityGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oneYear_non_current_liability > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("oneYear_non_current_liability >=", value, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneyearNonCurrentLiabilityGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oneYear_non_current_liability >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityLessThan(BigDecimal value) {
            addCriterion("oneYear_non_current_liability <", value, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneyearNonCurrentLiabilityLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oneYear_non_current_liability < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("oneYear_non_current_liability <=", value, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOneyearNonCurrentLiabilityLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("oneYear_non_current_liability <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityIn(List<BigDecimal> values) {
            addCriterion("oneYear_non_current_liability in", values, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityNotIn(List<BigDecimal> values) {
            addCriterion("oneYear_non_current_liability not in", values, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("oneYear_non_current_liability between", value1, value2, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        public Criteria andOneyearNonCurrentLiabilityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("oneYear_non_current_liability not between", value1, value2, "oneyearNonCurrentLiability");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesIsNull() {
            addCriterion("other_current_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesIsNotNull() {
            addCriterion("other_current_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("other_current_liabilities =", value, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("other_current_liabilities <>", value, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("other_current_liabilities >", value, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_current_liabilities >=", value, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesLessThan(BigDecimal value) {
            addCriterion("other_current_liabilities <", value, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_current_liabilities <=", value, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherCurrentLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_current_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("other_current_liabilities in", values, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("other_current_liabilities not in", values, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_current_liabilities between", value1, value2, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherCurrentLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_current_liabilities not between", value1, value2, "otherCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesIsNull() {
            addCriterion("total_current_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesIsNotNull() {
            addCriterion("total_current_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("total_current_liabilities =", value, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalCurrentLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_current_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("total_current_liabilities <>", value, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalCurrentLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_current_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("total_current_liabilities >", value, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalCurrentLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_current_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_current_liabilities >=", value, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalCurrentLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_current_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesLessThan(BigDecimal value) {
            addCriterion("total_current_liabilities <", value, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalCurrentLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_current_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_current_liabilities <=", value, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalCurrentLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_current_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("total_current_liabilities in", values, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("total_current_liabilities not in", values, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_current_liabilities between", value1, value2, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andTotalCurrentLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_current_liabilities not between", value1, value2, "totalCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesIsNull() {
            addCriterion("non_current_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesIsNotNull() {
            addCriterion("non_current_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("non_current_liabilities =", value, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("non_current_liabilities <>", value, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("non_current_liabilities >", value, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("non_current_liabilities >=", value, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesLessThan(BigDecimal value) {
            addCriterion("non_current_liabilities <", value, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("non_current_liabilities <=", value, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andNonCurrentLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("non_current_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("non_current_liabilities in", values, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("non_current_liabilities not in", values, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("non_current_liabilities between", value1, value2, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andNonCurrentLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("non_current_liabilities not between", value1, value2, "nonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingIsNull() {
            addCriterion("long_term_borrowing is null");
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingIsNotNull() {
            addCriterion("long_term_borrowing is not null");
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingEqualTo(BigDecimal value) {
            addCriterion("long_term_borrowing =", value, "longTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermBorrowingEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_borrowing = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingNotEqualTo(BigDecimal value) {
            addCriterion("long_term_borrowing <>", value, "longTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermBorrowingNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_borrowing <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingGreaterThan(BigDecimal value) {
            addCriterion("long_term_borrowing >", value, "longTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermBorrowingGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_borrowing > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("long_term_borrowing >=", value, "longTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermBorrowingGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_borrowing >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingLessThan(BigDecimal value) {
            addCriterion("long_term_borrowing <", value, "longTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermBorrowingLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_borrowing < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingLessThanOrEqualTo(BigDecimal value) {
            addCriterion("long_term_borrowing <=", value, "longTermBorrowing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermBorrowingLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_borrowing <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingIn(List<BigDecimal> values) {
            addCriterion("long_term_borrowing in", values, "longTermBorrowing");
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingNotIn(List<BigDecimal> values) {
            addCriterion("long_term_borrowing not in", values, "longTermBorrowing");
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_term_borrowing between", value1, value2, "longTermBorrowing");
            return (Criteria) this;
        }

        public Criteria andLongTermBorrowingNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_term_borrowing not between", value1, value2, "longTermBorrowing");
            return (Criteria) this;
        }

        public Criteria andPayBondIsNull() {
            addCriterion("pay_bond is null");
            return (Criteria) this;
        }

        public Criteria andPayBondIsNotNull() {
            addCriterion("pay_bond is not null");
            return (Criteria) this;
        }

        public Criteria andPayBondEqualTo(BigDecimal value) {
            addCriterion("pay_bond =", value, "payBond");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondNotEqualTo(BigDecimal value) {
            addCriterion("pay_bond <>", value, "payBond");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondGreaterThan(BigDecimal value) {
            addCriterion("pay_bond >", value, "payBond");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_bond >=", value, "payBond");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondLessThan(BigDecimal value) {
            addCriterion("pay_bond <", value, "payBond");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_bond <=", value, "payBond");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondIn(List<BigDecimal> values) {
            addCriterion("pay_bond in", values, "payBond");
            return (Criteria) this;
        }

        public Criteria andPayBondNotIn(List<BigDecimal> values) {
            addCriterion("pay_bond not in", values, "payBond");
            return (Criteria) this;
        }

        public Criteria andPayBondBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_bond between", value1, value2, "payBond");
            return (Criteria) this;
        }

        public Criteria andPayBondNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_bond not between", value1, value2, "payBond");
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockIsNull() {
            addCriterion("pay_bond_preferred_stock is null");
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockIsNotNull() {
            addCriterion("pay_bond_preferred_stock is not null");
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockEqualTo(BigDecimal value) {
            addCriterion("pay_bond_preferred_stock =", value, "payBondPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondPreferredStockEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_preferred_stock = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockNotEqualTo(BigDecimal value) {
            addCriterion("pay_bond_preferred_stock <>", value, "payBondPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondPreferredStockNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_preferred_stock <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockGreaterThan(BigDecimal value) {
            addCriterion("pay_bond_preferred_stock >", value, "payBondPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondPreferredStockGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_preferred_stock > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_bond_preferred_stock >=", value, "payBondPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondPreferredStockGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_preferred_stock >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockLessThan(BigDecimal value) {
            addCriterion("pay_bond_preferred_stock <", value, "payBondPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondPreferredStockLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_preferred_stock < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_bond_preferred_stock <=", value, "payBondPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondPreferredStockLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_preferred_stock <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockIn(List<BigDecimal> values) {
            addCriterion("pay_bond_preferred_stock in", values, "payBondPreferredStock");
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockNotIn(List<BigDecimal> values) {
            addCriterion("pay_bond_preferred_stock not in", values, "payBondPreferredStock");
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_bond_preferred_stock between", value1, value2, "payBondPreferredStock");
            return (Criteria) this;
        }

        public Criteria andPayBondPreferredStockNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_bond_preferred_stock not between", value1, value2, "payBondPreferredStock");
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsIsNull() {
            addCriterion("pay_bond_sustainable_debts is null");
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsIsNotNull() {
            addCriterion("pay_bond_sustainable_debts is not null");
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsEqualTo(BigDecimal value) {
            addCriterion("pay_bond_sustainable_debts =", value, "payBondSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondSustainableDebtsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_sustainable_debts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsNotEqualTo(BigDecimal value) {
            addCriterion("pay_bond_sustainable_debts <>", value, "payBondSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondSustainableDebtsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_sustainable_debts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsGreaterThan(BigDecimal value) {
            addCriterion("pay_bond_sustainable_debts >", value, "payBondSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondSustainableDebtsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_sustainable_debts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_bond_sustainable_debts >=", value, "payBondSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondSustainableDebtsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_sustainable_debts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsLessThan(BigDecimal value) {
            addCriterion("pay_bond_sustainable_debts <", value, "payBondSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondSustainableDebtsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_sustainable_debts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_bond_sustainable_debts <=", value, "payBondSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPayBondSustainableDebtsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("pay_bond_sustainable_debts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsIn(List<BigDecimal> values) {
            addCriterion("pay_bond_sustainable_debts in", values, "payBondSustainableDebts");
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsNotIn(List<BigDecimal> values) {
            addCriterion("pay_bond_sustainable_debts not in", values, "payBondSustainableDebts");
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_bond_sustainable_debts between", value1, value2, "payBondSustainableDebts");
            return (Criteria) this;
        }

        public Criteria andPayBondSustainableDebtsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_bond_sustainable_debts not between", value1, value2, "payBondSustainableDebts");
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableIsNull() {
            addCriterion("long_term_accounts_payable is null");
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableIsNotNull() {
            addCriterion("long_term_accounts_payable is not null");
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableEqualTo(BigDecimal value) {
            addCriterion("long_term_accounts_payable =", value, "longTermAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermAccountsPayableEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_accounts_payable = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableNotEqualTo(BigDecimal value) {
            addCriterion("long_term_accounts_payable <>", value, "longTermAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermAccountsPayableNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_accounts_payable <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableGreaterThan(BigDecimal value) {
            addCriterion("long_term_accounts_payable >", value, "longTermAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermAccountsPayableGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_accounts_payable > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("long_term_accounts_payable >=", value, "longTermAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermAccountsPayableGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_accounts_payable >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableLessThan(BigDecimal value) {
            addCriterion("long_term_accounts_payable <", value, "longTermAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermAccountsPayableLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_accounts_payable < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableLessThanOrEqualTo(BigDecimal value) {
            addCriterion("long_term_accounts_payable <=", value, "longTermAccountsPayable");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andLongTermAccountsPayableLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("long_term_accounts_payable <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableIn(List<BigDecimal> values) {
            addCriterion("long_term_accounts_payable in", values, "longTermAccountsPayable");
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableNotIn(List<BigDecimal> values) {
            addCriterion("long_term_accounts_payable not in", values, "longTermAccountsPayable");
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_term_accounts_payable between", value1, value2, "longTermAccountsPayable");
            return (Criteria) this;
        }

        public Criteria andLongTermAccountsPayableNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("long_term_accounts_payable not between", value1, value2, "longTermAccountsPayable");
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesIsNull() {
            addCriterion("projected_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesIsNotNull() {
            addCriterion("projected_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("projected_liabilities =", value, "projectedLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProjectedLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("projected_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("projected_liabilities <>", value, "projectedLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProjectedLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("projected_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("projected_liabilities >", value, "projectedLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProjectedLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("projected_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("projected_liabilities >=", value, "projectedLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProjectedLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("projected_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesLessThan(BigDecimal value) {
            addCriterion("projected_liabilities <", value, "projectedLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProjectedLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("projected_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("projected_liabilities <=", value, "projectedLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andProjectedLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("projected_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("projected_liabilities in", values, "projectedLiabilities");
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("projected_liabilities not in", values, "projectedLiabilities");
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("projected_liabilities between", value1, value2, "projectedLiabilities");
            return (Criteria) this;
        }

        public Criteria andProjectedLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("projected_liabilities not between", value1, value2, "projectedLiabilities");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeIsNull() {
            addCriterion("deferred_income is null");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeIsNotNull() {
            addCriterion("deferred_income is not null");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeEqualTo(BigDecimal value) {
            addCriterion("deferred_income =", value, "deferredIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeNotEqualTo(BigDecimal value) {
            addCriterion("deferred_income <>", value, "deferredIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeGreaterThan(BigDecimal value) {
            addCriterion("deferred_income >", value, "deferredIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("deferred_income >=", value, "deferredIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeLessThan(BigDecimal value) {
            addCriterion("deferred_income <", value, "deferredIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("deferred_income <=", value, "deferredIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeIn(List<BigDecimal> values) {
            addCriterion("deferred_income in", values, "deferredIncome");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeNotIn(List<BigDecimal> values) {
            addCriterion("deferred_income not in", values, "deferredIncome");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deferred_income between", value1, value2, "deferredIncome");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deferred_income not between", value1, value2, "deferredIncome");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesIsNull() {
            addCriterion("deferred_income_tax_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesIsNotNull() {
            addCriterion("deferred_income_tax_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("deferred_income_tax_liabilities =", value, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeTaxLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income_tax_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("deferred_income_tax_liabilities <>", value, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeTaxLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income_tax_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("deferred_income_tax_liabilities >", value, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeTaxLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income_tax_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("deferred_income_tax_liabilities >=", value, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeTaxLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income_tax_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesLessThan(BigDecimal value) {
            addCriterion("deferred_income_tax_liabilities <", value, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeTaxLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income_tax_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("deferred_income_tax_liabilities <=", value, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDeferredIncomeTaxLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("deferred_income_tax_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("deferred_income_tax_liabilities in", values, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("deferred_income_tax_liabilities not in", values, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deferred_income_tax_liabilities between", value1, value2, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        public Criteria andDeferredIncomeTaxLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deferred_income_tax_liabilities not between", value1, value2, "deferredIncomeTaxLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesIsNull() {
            addCriterion("other_non_current_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesIsNotNull() {
            addCriterion("other_non_current_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("other_non_current_liabilities =", value, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("other_non_current_liabilities <>", value, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("other_non_current_liabilities >", value, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_liabilities >=", value, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesLessThan(BigDecimal value) {
            addCriterion("other_non_current_liabilities <", value, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_liabilities <=", value, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("other_non_current_liabilities in", values, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("other_non_current_liabilities not in", values, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_liabilities between", value1, value2, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_liabilities not between", value1, value2, "otherNonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesIsNull() {
            addCriterion("other_total_non_current_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesIsNotNull() {
            addCriterion("other_total_non_current_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("other_total_non_current_liabilities =", value, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("other_total_non_current_liabilities <>", value, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("other_total_non_current_liabilities >", value, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_total_non_current_liabilities >=", value, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesLessThan(BigDecimal value) {
            addCriterion("other_total_non_current_liabilities <", value, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_total_non_current_liabilities <=", value, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherTotalNonCurrentLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_total_non_current_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("other_total_non_current_liabilities in", values, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("other_total_non_current_liabilities not in", values, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_total_non_current_liabilities between", value1, value2, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherTotalNonCurrentLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_total_non_current_liabilities not between", value1, value2, "otherTotalNonCurrentLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesIsNull() {
            addCriterion("other_non_current_liabilities_total_liabilities is null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesIsNotNull() {
            addCriterion("other_non_current_liabilities_total_liabilities is not null");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesEqualTo(BigDecimal value) {
            addCriterion("other_non_current_liabilities_total_liabilities =", value, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities_total_liabilities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesNotEqualTo(BigDecimal value) {
            addCriterion("other_non_current_liabilities_total_liabilities <>", value, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities_total_liabilities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesGreaterThan(BigDecimal value) {
            addCriterion("other_non_current_liabilities_total_liabilities >", value, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities_total_liabilities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_liabilities_total_liabilities >=", value, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities_total_liabilities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesLessThan(BigDecimal value) {
            addCriterion("other_non_current_liabilities_total_liabilities <", value, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities_total_liabilities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_current_liabilities_total_liabilities <=", value, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_non_current_liabilities_total_liabilities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesIn(List<BigDecimal> values) {
            addCriterion("other_non_current_liabilities_total_liabilities in", values, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesNotIn(List<BigDecimal> values) {
            addCriterion("other_non_current_liabilities_total_liabilities not in", values, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_liabilities_total_liabilities between", value1, value2, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        public Criteria andOtherNonCurrentLiabilitiesTotalLiabilitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_current_liabilities_total_liabilities not between", value1, value2, "otherNonCurrentLiabilitiesTotalLiabilities");
            return (Criteria) this;
        }

        public Criteria andOwnersEquityIsNull() {
            addCriterion("owners_equity is null");
            return (Criteria) this;
        }

        public Criteria andOwnersEquityIsNotNull() {
            addCriterion("owners_equity is not null");
            return (Criteria) this;
        }

        public Criteria andOwnersEquityEqualTo(BigDecimal value) {
            addCriterion("owners_equity =", value, "ownersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOwnersEquityEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("owners_equity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnersEquityNotEqualTo(BigDecimal value) {
            addCriterion("owners_equity <>", value, "ownersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOwnersEquityNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("owners_equity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnersEquityGreaterThan(BigDecimal value) {
            addCriterion("owners_equity >", value, "ownersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOwnersEquityGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("owners_equity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnersEquityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("owners_equity >=", value, "ownersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOwnersEquityGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("owners_equity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnersEquityLessThan(BigDecimal value) {
            addCriterion("owners_equity <", value, "ownersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOwnersEquityLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("owners_equity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnersEquityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("owners_equity <=", value, "ownersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOwnersEquityLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("owners_equity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOwnersEquityIn(List<BigDecimal> values) {
            addCriterion("owners_equity in", values, "ownersEquity");
            return (Criteria) this;
        }

        public Criteria andOwnersEquityNotIn(List<BigDecimal> values) {
            addCriterion("owners_equity not in", values, "ownersEquity");
            return (Criteria) this;
        }

        public Criteria andOwnersEquityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("owners_equity between", value1, value2, "ownersEquity");
            return (Criteria) this;
        }

        public Criteria andOwnersEquityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("owners_equity not between", value1, value2, "ownersEquity");
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalIsNull() {
            addCriterion("paid_in_capital is null");
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalIsNotNull() {
            addCriterion("paid_in_capital is not null");
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalEqualTo(BigDecimal value) {
            addCriterion("paid_in_capital =", value, "paidInCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidInCapitalEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_in_capital = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalNotEqualTo(BigDecimal value) {
            addCriterion("paid_in_capital <>", value, "paidInCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidInCapitalNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_in_capital <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalGreaterThan(BigDecimal value) {
            addCriterion("paid_in_capital >", value, "paidInCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidInCapitalGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_in_capital > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("paid_in_capital >=", value, "paidInCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidInCapitalGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_in_capital >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalLessThan(BigDecimal value) {
            addCriterion("paid_in_capital <", value, "paidInCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidInCapitalLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_in_capital < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("paid_in_capital <=", value, "paidInCapital");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andPaidInCapitalLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("paid_in_capital <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalIn(List<BigDecimal> values) {
            addCriterion("paid_in_capital in", values, "paidInCapital");
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalNotIn(List<BigDecimal> values) {
            addCriterion("paid_in_capital not in", values, "paidInCapital");
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("paid_in_capital between", value1, value2, "paidInCapital");
            return (Criteria) this;
        }

        public Criteria andPaidInCapitalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("paid_in_capital not between", value1, value2, "paidInCapital");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsIsNull() {
            addCriterion("other_equity_instruments is null");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsIsNotNull() {
            addCriterion("other_equity_instruments is not null");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsEqualTo(BigDecimal value) {
            addCriterion("other_equity_instruments =", value, "otherEquityInstruments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInstrumentsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_instruments = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsNotEqualTo(BigDecimal value) {
            addCriterion("other_equity_instruments <>", value, "otherEquityInstruments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInstrumentsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_instruments <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsGreaterThan(BigDecimal value) {
            addCriterion("other_equity_instruments >", value, "otherEquityInstruments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInstrumentsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_instruments > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_equity_instruments >=", value, "otherEquityInstruments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInstrumentsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_instruments >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsLessThan(BigDecimal value) {
            addCriterion("other_equity_instruments <", value, "otherEquityInstruments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInstrumentsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_instruments < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_equity_instruments <=", value, "otherEquityInstruments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherEquityInstrumentsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_equity_instruments <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsIn(List<BigDecimal> values) {
            addCriterion("other_equity_instruments in", values, "otherEquityInstruments");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsNotIn(List<BigDecimal> values) {
            addCriterion("other_equity_instruments not in", values, "otherEquityInstruments");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_equity_instruments between", value1, value2, "otherEquityInstruments");
            return (Criteria) this;
        }

        public Criteria andOtherEquityInstrumentsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_equity_instruments not between", value1, value2, "otherEquityInstruments");
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockIsNull() {
            addCriterion("other_preferred_stock is null");
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockIsNotNull() {
            addCriterion("other_preferred_stock is not null");
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockEqualTo(BigDecimal value) {
            addCriterion("other_preferred_stock =", value, "otherPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherPreferredStockEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_preferred_stock = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockNotEqualTo(BigDecimal value) {
            addCriterion("other_preferred_stock <>", value, "otherPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherPreferredStockNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_preferred_stock <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockGreaterThan(BigDecimal value) {
            addCriterion("other_preferred_stock >", value, "otherPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherPreferredStockGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_preferred_stock > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_preferred_stock >=", value, "otherPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherPreferredStockGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_preferred_stock >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockLessThan(BigDecimal value) {
            addCriterion("other_preferred_stock <", value, "otherPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherPreferredStockLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_preferred_stock < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_preferred_stock <=", value, "otherPreferredStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherPreferredStockLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_preferred_stock <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockIn(List<BigDecimal> values) {
            addCriterion("other_preferred_stock in", values, "otherPreferredStock");
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockNotIn(List<BigDecimal> values) {
            addCriterion("other_preferred_stock not in", values, "otherPreferredStock");
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_preferred_stock between", value1, value2, "otherPreferredStock");
            return (Criteria) this;
        }

        public Criteria andOtherPreferredStockNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_preferred_stock not between", value1, value2, "otherPreferredStock");
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsIsNull() {
            addCriterion("other_sustainable_debts is null");
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsIsNotNull() {
            addCriterion("other_sustainable_debts is not null");
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsEqualTo(BigDecimal value) {
            addCriterion("other_sustainable_debts =", value, "otherSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherSustainableDebtsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_sustainable_debts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsNotEqualTo(BigDecimal value) {
            addCriterion("other_sustainable_debts <>", value, "otherSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherSustainableDebtsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_sustainable_debts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsGreaterThan(BigDecimal value) {
            addCriterion("other_sustainable_debts >", value, "otherSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherSustainableDebtsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_sustainable_debts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_sustainable_debts >=", value, "otherSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherSustainableDebtsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_sustainable_debts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsLessThan(BigDecimal value) {
            addCriterion("other_sustainable_debts <", value, "otherSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherSustainableDebtsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_sustainable_debts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_sustainable_debts <=", value, "otherSustainableDebts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherSustainableDebtsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_sustainable_debts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsIn(List<BigDecimal> values) {
            addCriterion("other_sustainable_debts in", values, "otherSustainableDebts");
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsNotIn(List<BigDecimal> values) {
            addCriterion("other_sustainable_debts not in", values, "otherSustainableDebts");
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_sustainable_debts between", value1, value2, "otherSustainableDebts");
            return (Criteria) this;
        }

        public Criteria andOtherSustainableDebtsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_sustainable_debts not between", value1, value2, "otherSustainableDebts");
            return (Criteria) this;
        }

        public Criteria andCapitalReserveIsNull() {
            addCriterion("capital_reserve is null");
            return (Criteria) this;
        }

        public Criteria andCapitalReserveIsNotNull() {
            addCriterion("capital_reserve is not null");
            return (Criteria) this;
        }

        public Criteria andCapitalReserveEqualTo(BigDecimal value) {
            addCriterion("capital_reserve =", value, "capitalReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCapitalReserveEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("capital_reserve = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalReserveNotEqualTo(BigDecimal value) {
            addCriterion("capital_reserve <>", value, "capitalReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCapitalReserveNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("capital_reserve <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalReserveGreaterThan(BigDecimal value) {
            addCriterion("capital_reserve >", value, "capitalReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCapitalReserveGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("capital_reserve > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalReserveGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("capital_reserve >=", value, "capitalReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCapitalReserveGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("capital_reserve >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalReserveLessThan(BigDecimal value) {
            addCriterion("capital_reserve <", value, "capitalReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCapitalReserveLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("capital_reserve < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalReserveLessThanOrEqualTo(BigDecimal value) {
            addCriterion("capital_reserve <=", value, "capitalReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCapitalReserveLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("capital_reserve <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalReserveIn(List<BigDecimal> values) {
            addCriterion("capital_reserve in", values, "capitalReserve");
            return (Criteria) this;
        }

        public Criteria andCapitalReserveNotIn(List<BigDecimal> values) {
            addCriterion("capital_reserve not in", values, "capitalReserve");
            return (Criteria) this;
        }

        public Criteria andCapitalReserveBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("capital_reserve between", value1, value2, "capitalReserve");
            return (Criteria) this;
        }

        public Criteria andCapitalReserveNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("capital_reserve not between", value1, value2, "capitalReserve");
            return (Criteria) this;
        }

        public Criteria andTreasuryStockIsNull() {
            addCriterion("treasury_stock is null");
            return (Criteria) this;
        }

        public Criteria andTreasuryStockIsNotNull() {
            addCriterion("treasury_stock is not null");
            return (Criteria) this;
        }

        public Criteria andTreasuryStockEqualTo(BigDecimal value) {
            addCriterion("treasury_stock =", value, "treasuryStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTreasuryStockEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("treasury_stock = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTreasuryStockNotEqualTo(BigDecimal value) {
            addCriterion("treasury_stock <>", value, "treasuryStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTreasuryStockNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("treasury_stock <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTreasuryStockGreaterThan(BigDecimal value) {
            addCriterion("treasury_stock >", value, "treasuryStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTreasuryStockGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("treasury_stock > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTreasuryStockGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("treasury_stock >=", value, "treasuryStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTreasuryStockGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("treasury_stock >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTreasuryStockLessThan(BigDecimal value) {
            addCriterion("treasury_stock <", value, "treasuryStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTreasuryStockLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("treasury_stock < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTreasuryStockLessThanOrEqualTo(BigDecimal value) {
            addCriterion("treasury_stock <=", value, "treasuryStock");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTreasuryStockLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("treasury_stock <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTreasuryStockIn(List<BigDecimal> values) {
            addCriterion("treasury_stock in", values, "treasuryStock");
            return (Criteria) this;
        }

        public Criteria andTreasuryStockNotIn(List<BigDecimal> values) {
            addCriterion("treasury_stock not in", values, "treasuryStock");
            return (Criteria) this;
        }

        public Criteria andTreasuryStockBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("treasury_stock between", value1, value2, "treasuryStock");
            return (Criteria) this;
        }

        public Criteria andTreasuryStockNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("treasury_stock not between", value1, value2, "treasuryStock");
            return (Criteria) this;
        }

        public Criteria andSurplusReserveIsNull() {
            addCriterion("surplus_reserve is null");
            return (Criteria) this;
        }

        public Criteria andSurplusReserveIsNotNull() {
            addCriterion("surplus_reserve is not null");
            return (Criteria) this;
        }

        public Criteria andSurplusReserveEqualTo(BigDecimal value) {
            addCriterion("surplus_reserve =", value, "surplusReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSurplusReserveEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("surplus_reserve = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSurplusReserveNotEqualTo(BigDecimal value) {
            addCriterion("surplus_reserve <>", value, "surplusReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSurplusReserveNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("surplus_reserve <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSurplusReserveGreaterThan(BigDecimal value) {
            addCriterion("surplus_reserve >", value, "surplusReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSurplusReserveGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("surplus_reserve > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSurplusReserveGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("surplus_reserve >=", value, "surplusReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSurplusReserveGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("surplus_reserve >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSurplusReserveLessThan(BigDecimal value) {
            addCriterion("surplus_reserve <", value, "surplusReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSurplusReserveLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("surplus_reserve < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSurplusReserveLessThanOrEqualTo(BigDecimal value) {
            addCriterion("surplus_reserve <=", value, "surplusReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andSurplusReserveLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("surplus_reserve <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSurplusReserveIn(List<BigDecimal> values) {
            addCriterion("surplus_reserve in", values, "surplusReserve");
            return (Criteria) this;
        }

        public Criteria andSurplusReserveNotIn(List<BigDecimal> values) {
            addCriterion("surplus_reserve not in", values, "surplusReserve");
            return (Criteria) this;
        }

        public Criteria andSurplusReserveBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("surplus_reserve between", value1, value2, "surplusReserve");
            return (Criteria) this;
        }

        public Criteria andSurplusReserveNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("surplus_reserve not between", value1, value2, "surplusReserve");
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeIsNull() {
            addCriterion("other_comprehensive_income is null");
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeIsNotNull() {
            addCriterion("other_comprehensive_income is not null");
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeEqualTo(BigDecimal value) {
            addCriterion("other_comprehensive_income =", value, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherComprehensiveIncomeEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_comprehensive_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeNotEqualTo(BigDecimal value) {
            addCriterion("other_comprehensive_income <>", value, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherComprehensiveIncomeNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_comprehensive_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeGreaterThan(BigDecimal value) {
            addCriterion("other_comprehensive_income >", value, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherComprehensiveIncomeGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_comprehensive_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_comprehensive_income >=", value, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherComprehensiveIncomeGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_comprehensive_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeLessThan(BigDecimal value) {
            addCriterion("other_comprehensive_income <", value, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherComprehensiveIncomeLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_comprehensive_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_comprehensive_income <=", value, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andOtherComprehensiveIncomeLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("other_comprehensive_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeIn(List<BigDecimal> values) {
            addCriterion("other_comprehensive_income in", values, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeNotIn(List<BigDecimal> values) {
            addCriterion("other_comprehensive_income not in", values, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_comprehensive_income between", value1, value2, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        public Criteria andOtherComprehensiveIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_comprehensive_income not between", value1, value2, "otherComprehensiveIncome");
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsIsNull() {
            addCriterion("undistributed_profits is null");
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsIsNotNull() {
            addCriterion("undistributed_profits is not null");
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsEqualTo(BigDecimal value) {
            addCriterion("undistributed_profits =", value, "undistributedProfits");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andUndistributedProfitsEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("undistributed_profits = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsNotEqualTo(BigDecimal value) {
            addCriterion("undistributed_profits <>", value, "undistributedProfits");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andUndistributedProfitsNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("undistributed_profits <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsGreaterThan(BigDecimal value) {
            addCriterion("undistributed_profits >", value, "undistributedProfits");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andUndistributedProfitsGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("undistributed_profits > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("undistributed_profits >=", value, "undistributedProfits");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andUndistributedProfitsGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("undistributed_profits >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsLessThan(BigDecimal value) {
            addCriterion("undistributed_profits <", value, "undistributedProfits");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andUndistributedProfitsLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("undistributed_profits < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("undistributed_profits <=", value, "undistributedProfits");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andUndistributedProfitsLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("undistributed_profits <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsIn(List<BigDecimal> values) {
            addCriterion("undistributed_profits in", values, "undistributedProfits");
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsNotIn(List<BigDecimal> values) {
            addCriterion("undistributed_profits not in", values, "undistributedProfits");
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("undistributed_profits between", value1, value2, "undistributedProfits");
            return (Criteria) this;
        }

        public Criteria andUndistributedProfitsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("undistributed_profits not between", value1, value2, "undistributedProfits");
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityIsNull() {
            addCriterion("total_owners_equity is null");
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityIsNotNull() {
            addCriterion("total_owners_equity is not null");
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityEqualTo(BigDecimal value) {
            addCriterion("total_owners_equity =", value, "totalOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalOwnersEquityEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_owners_equity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityNotEqualTo(BigDecimal value) {
            addCriterion("total_owners_equity <>", value, "totalOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalOwnersEquityNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_owners_equity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityGreaterThan(BigDecimal value) {
            addCriterion("total_owners_equity >", value, "totalOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalOwnersEquityGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_owners_equity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_owners_equity >=", value, "totalOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalOwnersEquityGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_owners_equity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityLessThan(BigDecimal value) {
            addCriterion("total_owners_equity <", value, "totalOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalOwnersEquityLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_owners_equity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_owners_equity <=", value, "totalOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalOwnersEquityLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_owners_equity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityIn(List<BigDecimal> values) {
            addCriterion("total_owners_equity in", values, "totalOwnersEquity");
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityNotIn(List<BigDecimal> values) {
            addCriterion("total_owners_equity not in", values, "totalOwnersEquity");
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_owners_equity between", value1, value2, "totalOwnersEquity");
            return (Criteria) this;
        }

        public Criteria andTotalOwnersEquityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_owners_equity not between", value1, value2, "totalOwnersEquity");
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityIsNull() {
            addCriterion("total_liability_owners_equity is null");
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityIsNotNull() {
            addCriterion("total_liability_owners_equity is not null");
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityEqualTo(BigDecimal value) {
            addCriterion("total_liability_owners_equity =", value, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalLiabilityOwnersEquityEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_liability_owners_equity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityNotEqualTo(BigDecimal value) {
            addCriterion("total_liability_owners_equity <>", value, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalLiabilityOwnersEquityNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_liability_owners_equity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityGreaterThan(BigDecimal value) {
            addCriterion("total_liability_owners_equity >", value, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalLiabilityOwnersEquityGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_liability_owners_equity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_liability_owners_equity >=", value, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalLiabilityOwnersEquityGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_liability_owners_equity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityLessThan(BigDecimal value) {
            addCriterion("total_liability_owners_equity <", value, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalLiabilityOwnersEquityLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_liability_owners_equity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_liability_owners_equity <=", value, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andTotalLiabilityOwnersEquityLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("total_liability_owners_equity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityIn(List<BigDecimal> values) {
            addCriterion("total_liability_owners_equity in", values, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityNotIn(List<BigDecimal> values) {
            addCriterion("total_liability_owners_equity not in", values, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_liability_owners_equity between", value1, value2, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        public Criteria andTotalLiabilityOwnersEquityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_liability_owners_equity not between", value1, value2, "totalLiabilityOwnersEquity");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyAssetsLiabilities.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        private TCpyAssetsLiabilitiesExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        protected Criteria(TCpyAssetsLiabilitiesExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public TCpyAssetsLiabilitiesExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_assets_liabilities
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_assets_liabilities
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_assets_liabilities
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyAssetsLiabilitiesExample example);
    }
}