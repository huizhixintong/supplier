package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyTaxArrearExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public TCpyTaxArrearExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public TCpyTaxArrearExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public TCpyTaxArrearExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyTaxArrearExample example = new TCpyTaxArrearExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public TCpyTaxArrearExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public TCpyTaxArrearExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Integer value1, Integer value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgIsNull() {
            addCriterion("main_tax_org is null");
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgIsNotNull() {
            addCriterion("main_tax_org is not null");
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgEqualTo(String value) {
            addCriterion("main_tax_org =", value, "mainTaxOrg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andMainTaxOrgEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("main_tax_org = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgNotEqualTo(String value) {
            addCriterion("main_tax_org <>", value, "mainTaxOrg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andMainTaxOrgNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("main_tax_org <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgGreaterThan(String value) {
            addCriterion("main_tax_org >", value, "mainTaxOrg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andMainTaxOrgGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("main_tax_org > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgGreaterThanOrEqualTo(String value) {
            addCriterion("main_tax_org >=", value, "mainTaxOrg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andMainTaxOrgGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("main_tax_org >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgLessThan(String value) {
            addCriterion("main_tax_org <", value, "mainTaxOrg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andMainTaxOrgLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("main_tax_org < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgLessThanOrEqualTo(String value) {
            addCriterion("main_tax_org <=", value, "mainTaxOrg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andMainTaxOrgLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("main_tax_org <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgLike(String value) {
            addCriterion("main_tax_org like", value, "mainTaxOrg");
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgNotLike(String value) {
            addCriterion("main_tax_org not like", value, "mainTaxOrg");
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgIn(List<String> values) {
            addCriterion("main_tax_org in", values, "mainTaxOrg");
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgNotIn(List<String> values) {
            addCriterion("main_tax_org not in", values, "mainTaxOrg");
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgBetween(String value1, String value2) {
            addCriterion("main_tax_org between", value1, value2, "mainTaxOrg");
            return (Criteria) this;
        }

        public Criteria andMainTaxOrgNotBetween(String value1, String value2) {
            addCriterion("main_tax_org not between", value1, value2, "mainTaxOrg");
            return (Criteria) this;
        }

        public Criteria andTaxArrearsIsNull() {
            addCriterion("tax_arrears is null");
            return (Criteria) this;
        }

        public Criteria andTaxArrearsIsNotNull() {
            addCriterion("tax_arrears is not null");
            return (Criteria) this;
        }

        public Criteria andTaxArrearsEqualTo(String value) {
            addCriterion("tax_arrears =", value, "taxArrears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxArrearsEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_arrears = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxArrearsNotEqualTo(String value) {
            addCriterion("tax_arrears <>", value, "taxArrears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxArrearsNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_arrears <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxArrearsGreaterThan(String value) {
            addCriterion("tax_arrears >", value, "taxArrears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxArrearsGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_arrears > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxArrearsGreaterThanOrEqualTo(String value) {
            addCriterion("tax_arrears >=", value, "taxArrears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxArrearsGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_arrears >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxArrearsLessThan(String value) {
            addCriterion("tax_arrears <", value, "taxArrears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxArrearsLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_arrears < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxArrearsLessThanOrEqualTo(String value) {
            addCriterion("tax_arrears <=", value, "taxArrears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxArrearsLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_arrears <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxArrearsLike(String value) {
            addCriterion("tax_arrears like", value, "taxArrears");
            return (Criteria) this;
        }

        public Criteria andTaxArrearsNotLike(String value) {
            addCriterion("tax_arrears not like", value, "taxArrears");
            return (Criteria) this;
        }

        public Criteria andTaxArrearsIn(List<String> values) {
            addCriterion("tax_arrears in", values, "taxArrears");
            return (Criteria) this;
        }

        public Criteria andTaxArrearsNotIn(List<String> values) {
            addCriterion("tax_arrears not in", values, "taxArrears");
            return (Criteria) this;
        }

        public Criteria andTaxArrearsBetween(String value1, String value2) {
            addCriterion("tax_arrears between", value1, value2, "taxArrears");
            return (Criteria) this;
        }

        public Criteria andTaxArrearsNotBetween(String value1, String value2) {
            addCriterion("tax_arrears not between", value1, value2, "taxArrears");
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceIsNull() {
            addCriterion("current_tax_balance is null");
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceIsNotNull() {
            addCriterion("current_tax_balance is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceEqualTo(BigDecimal value) {
            addCriterion("current_tax_balance =", value, "currentTaxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCurrentTaxBalanceEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("current_tax_balance = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceNotEqualTo(BigDecimal value) {
            addCriterion("current_tax_balance <>", value, "currentTaxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCurrentTaxBalanceNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("current_tax_balance <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceGreaterThan(BigDecimal value) {
            addCriterion("current_tax_balance >", value, "currentTaxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCurrentTaxBalanceGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("current_tax_balance > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("current_tax_balance >=", value, "currentTaxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCurrentTaxBalanceGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("current_tax_balance >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceLessThan(BigDecimal value) {
            addCriterion("current_tax_balance <", value, "currentTaxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCurrentTaxBalanceLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("current_tax_balance < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("current_tax_balance <=", value, "currentTaxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCurrentTaxBalanceLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("current_tax_balance <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceIn(List<BigDecimal> values) {
            addCriterion("current_tax_balance in", values, "currentTaxBalance");
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceNotIn(List<BigDecimal> values) {
            addCriterion("current_tax_balance not in", values, "currentTaxBalance");
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_tax_balance between", value1, value2, "currentTaxBalance");
            return (Criteria) this;
        }

        public Criteria andCurrentTaxBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("current_tax_balance not between", value1, value2, "currentTaxBalance");
            return (Criteria) this;
        }

        public Criteria andTaxBalanceIsNull() {
            addCriterion("tax_balance is null");
            return (Criteria) this;
        }

        public Criteria andTaxBalanceIsNotNull() {
            addCriterion("tax_balance is not null");
            return (Criteria) this;
        }

        public Criteria andTaxBalanceEqualTo(BigDecimal value) {
            addCriterion("tax_balance =", value, "taxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxBalanceEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_balance = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxBalanceNotEqualTo(BigDecimal value) {
            addCriterion("tax_balance <>", value, "taxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxBalanceNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_balance <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxBalanceGreaterThan(BigDecimal value) {
            addCriterion("tax_balance >", value, "taxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxBalanceGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_balance > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_balance >=", value, "taxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxBalanceGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_balance >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxBalanceLessThan(BigDecimal value) {
            addCriterion("tax_balance <", value, "taxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxBalanceLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_balance < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_balance <=", value, "taxBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxBalanceLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_balance <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxBalanceIn(List<BigDecimal> values) {
            addCriterion("tax_balance in", values, "taxBalance");
            return (Criteria) this;
        }

        public Criteria andTaxBalanceNotIn(List<BigDecimal> values) {
            addCriterion("tax_balance not in", values, "taxBalance");
            return (Criteria) this;
        }

        public Criteria andTaxBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_balance between", value1, value2, "taxBalance");
            return (Criteria) this;
        }

        public Criteria andTaxBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_balance not between", value1, value2, "taxBalance");
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateIsNull() {
            addCriterion("tax_payment_date is null");
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateIsNotNull() {
            addCriterion("tax_payment_date is not null");
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateEqualTo(LocalDate value) {
            addCriterion("tax_payment_date =", value, "taxPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxPaymentDateEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_payment_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateNotEqualTo(LocalDate value) {
            addCriterion("tax_payment_date <>", value, "taxPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxPaymentDateNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_payment_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateGreaterThan(LocalDate value) {
            addCriterion("tax_payment_date >", value, "taxPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxPaymentDateGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_payment_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("tax_payment_date >=", value, "taxPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxPaymentDateGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_payment_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateLessThan(LocalDate value) {
            addCriterion("tax_payment_date <", value, "taxPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxPaymentDateLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_payment_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("tax_payment_date <=", value, "taxPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxPaymentDateLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_payment_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateIn(List<LocalDate> values) {
            addCriterion("tax_payment_date in", values, "taxPaymentDate");
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateNotIn(List<LocalDate> values) {
            addCriterion("tax_payment_date not in", values, "taxPaymentDate");
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("tax_payment_date between", value1, value2, "taxPaymentDate");
            return (Criteria) this;
        }

        public Criteria andTaxPaymentDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("tax_payment_date not between", value1, value2, "taxPaymentDate");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyIsNull() {
            addCriterion("tax_delay_charge_money is null");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyIsNotNull() {
            addCriterion("tax_delay_charge_money is not null");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyEqualTo(BigDecimal value) {
            addCriterion("tax_delay_charge_money =", value, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeMoneyEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_money = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyNotEqualTo(BigDecimal value) {
            addCriterion("tax_delay_charge_money <>", value, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeMoneyNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_money <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyGreaterThan(BigDecimal value) {
            addCriterion("tax_delay_charge_money >", value, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeMoneyGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_money > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_delay_charge_money >=", value, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeMoneyGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_money >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyLessThan(BigDecimal value) {
            addCriterion("tax_delay_charge_money <", value, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeMoneyLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_money < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_delay_charge_money <=", value, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeMoneyLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_money <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyIn(List<BigDecimal> values) {
            addCriterion("tax_delay_charge_money in", values, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyNotIn(List<BigDecimal> values) {
            addCriterion("tax_delay_charge_money not in", values, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_delay_charge_money between", value1, value2, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_delay_charge_money not between", value1, value2, "taxDelayChargeMoney");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateIsNull() {
            addCriterion("tax_delay_charge_startdate is null");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateIsNotNull() {
            addCriterion("tax_delay_charge_startdate is not null");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateEqualTo(LocalDate value) {
            addCriterion("tax_delay_charge_startdate =", value, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeStartdateEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_startdate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateNotEqualTo(LocalDate value) {
            addCriterion("tax_delay_charge_startdate <>", value, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeStartdateNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_startdate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateGreaterThan(LocalDate value) {
            addCriterion("tax_delay_charge_startdate >", value, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeStartdateGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_startdate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("tax_delay_charge_startdate >=", value, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeStartdateGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_startdate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateLessThan(LocalDate value) {
            addCriterion("tax_delay_charge_startdate <", value, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeStartdateLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_startdate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateLessThanOrEqualTo(LocalDate value) {
            addCriterion("tax_delay_charge_startdate <=", value, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeStartdateLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_startdate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateIn(List<LocalDate> values) {
            addCriterion("tax_delay_charge_startdate in", values, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateNotIn(List<LocalDate> values) {
            addCriterion("tax_delay_charge_startdate not in", values, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("tax_delay_charge_startdate between", value1, value2, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeStartdateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("tax_delay_charge_startdate not between", value1, value2, "taxDelayChargeStartdate");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateIsNull() {
            addCriterion("tax_delay_charge_overpaydate is null");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateIsNotNull() {
            addCriterion("tax_delay_charge_overpaydate is not null");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateEqualTo(LocalDate value) {
            addCriterion("tax_delay_charge_overpaydate =", value, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeOverpaydateEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_overpaydate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateNotEqualTo(LocalDate value) {
            addCriterion("tax_delay_charge_overpaydate <>", value, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeOverpaydateNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_overpaydate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateGreaterThan(LocalDate value) {
            addCriterion("tax_delay_charge_overpaydate >", value, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeOverpaydateGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_overpaydate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("tax_delay_charge_overpaydate >=", value, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeOverpaydateGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_overpaydate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateLessThan(LocalDate value) {
            addCriterion("tax_delay_charge_overpaydate <", value, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeOverpaydateLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_overpaydate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateLessThanOrEqualTo(LocalDate value) {
            addCriterion("tax_delay_charge_overpaydate <=", value, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andTaxDelayChargeOverpaydateLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("tax_delay_charge_overpaydate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateIn(List<LocalDate> values) {
            addCriterion("tax_delay_charge_overpaydate in", values, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateNotIn(List<LocalDate> values) {
            addCriterion("tax_delay_charge_overpaydate not in", values, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("tax_delay_charge_overpaydate between", value1, value2, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        public Criteria andTaxDelayChargeOverpaydateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("tax_delay_charge_overpaydate not between", value1, value2, "taxDelayChargeOverpaydate");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyTaxArrear.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        private TCpyTaxArrearExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        protected Criteria(TCpyTaxArrearExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public TCpyTaxArrearExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_tax_arrear
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_tax_arrear
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_tax_arrear
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyTaxArrearExample example);
    }
}