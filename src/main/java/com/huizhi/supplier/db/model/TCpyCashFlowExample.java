package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyCashFlowExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public TCpyCashFlowExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public TCpyCashFlowExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public TCpyCashFlowExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyCashFlowExample example = new TCpyCashFlowExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public TCpyCashFlowExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public TCpyCashFlowExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("`year` is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("`year` is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(String value) {
            addCriterion("`year` =", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andYearEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("`year` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(String value) {
            addCriterion("`year` <>", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andYearNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("`year` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(String value) {
            addCriterion("`year` >", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("`year` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(String value) {
            addCriterion("`year` >=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("`year` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThan(String value) {
            addCriterion("`year` <", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("`year` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(String value) {
            addCriterion("`year` <=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("`year` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLike(String value) {
            addCriterion("`year` like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotLike(String value) {
            addCriterion("`year` not like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<String> values) {
            addCriterion("`year` in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<String> values) {
            addCriterion("`year` not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(String value1, String value2) {
            addCriterion("`year` between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(String value1, String value2) {
            addCriterion("`year` not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashIsNull() {
            addCriterion("business_activities_cash is null");
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashIsNotNull() {
            addCriterion("business_activities_cash is not null");
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashEqualTo(BigDecimal value) {
            addCriterion("business_activities_cash =", value, "businessActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andBusinessActivitiesCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("business_activities_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashNotEqualTo(BigDecimal value) {
            addCriterion("business_activities_cash <>", value, "businessActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andBusinessActivitiesCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("business_activities_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashGreaterThan(BigDecimal value) {
            addCriterion("business_activities_cash >", value, "businessActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andBusinessActivitiesCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("business_activities_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("business_activities_cash >=", value, "businessActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andBusinessActivitiesCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("business_activities_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashLessThan(BigDecimal value) {
            addCriterion("business_activities_cash <", value, "businessActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andBusinessActivitiesCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("business_activities_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("business_activities_cash <=", value, "businessActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andBusinessActivitiesCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("business_activities_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashIn(List<BigDecimal> values) {
            addCriterion("business_activities_cash in", values, "businessActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashNotIn(List<BigDecimal> values) {
            addCriterion("business_activities_cash not in", values, "businessActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("business_activities_cash between", value1, value2, "businessActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andBusinessActivitiesCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("business_activities_cash not between", value1, value2, "businessActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesIsNull() {
            addCriterion("cash_received_sales is null");
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesIsNotNull() {
            addCriterion("cash_received_sales is not null");
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesEqualTo(BigDecimal value) {
            addCriterion("cash_received_sales =", value, "cashReceivedSales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedSalesEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_sales = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesNotEqualTo(BigDecimal value) {
            addCriterion("cash_received_sales <>", value, "cashReceivedSales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedSalesNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_sales <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesGreaterThan(BigDecimal value) {
            addCriterion("cash_received_sales >", value, "cashReceivedSales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedSalesGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_sales > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_received_sales >=", value, "cashReceivedSales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedSalesGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_sales >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesLessThan(BigDecimal value) {
            addCriterion("cash_received_sales <", value, "cashReceivedSales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedSalesLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_sales < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_received_sales <=", value, "cashReceivedSales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedSalesLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_sales <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesIn(List<BigDecimal> values) {
            addCriterion("cash_received_sales in", values, "cashReceivedSales");
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesNotIn(List<BigDecimal> values) {
            addCriterion("cash_received_sales not in", values, "cashReceivedSales");
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_received_sales between", value1, value2, "cashReceivedSales");
            return (Criteria) this;
        }

        public Criteria andCashReceivedSalesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_received_sales not between", value1, value2, "cashReceivedSales");
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedIsNull() {
            addCriterion("tax_refunds_received is null");
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedIsNotNull() {
            addCriterion("tax_refunds_received is not null");
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedEqualTo(BigDecimal value) {
            addCriterion("tax_refunds_received =", value, "taxRefundsReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andTaxRefundsReceivedEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("tax_refunds_received = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedNotEqualTo(BigDecimal value) {
            addCriterion("tax_refunds_received <>", value, "taxRefundsReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andTaxRefundsReceivedNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("tax_refunds_received <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedGreaterThan(BigDecimal value) {
            addCriterion("tax_refunds_received >", value, "taxRefundsReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andTaxRefundsReceivedGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("tax_refunds_received > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_refunds_received >=", value, "taxRefundsReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andTaxRefundsReceivedGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("tax_refunds_received >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedLessThan(BigDecimal value) {
            addCriterion("tax_refunds_received <", value, "taxRefundsReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andTaxRefundsReceivedLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("tax_refunds_received < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedLessThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_refunds_received <=", value, "taxRefundsReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andTaxRefundsReceivedLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("tax_refunds_received <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedIn(List<BigDecimal> values) {
            addCriterion("tax_refunds_received in", values, "taxRefundsReceived");
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedNotIn(List<BigDecimal> values) {
            addCriterion("tax_refunds_received not in", values, "taxRefundsReceived");
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_refunds_received between", value1, value2, "taxRefundsReceived");
            return (Criteria) this;
        }

        public Criteria andTaxRefundsReceivedNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_refunds_received not between", value1, value2, "taxRefundsReceived");
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashIsNull() {
            addCriterion("other_related_cash is null");
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashIsNotNull() {
            addCriterion("other_related_cash is not null");
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashEqualTo(BigDecimal value) {
            addCriterion("other_related_cash =", value, "otherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherRelatedCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_related_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashNotEqualTo(BigDecimal value) {
            addCriterion("other_related_cash <>", value, "otherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherRelatedCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_related_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashGreaterThan(BigDecimal value) {
            addCriterion("other_related_cash >", value, "otherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherRelatedCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_related_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_related_cash >=", value, "otherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherRelatedCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_related_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashLessThan(BigDecimal value) {
            addCriterion("other_related_cash <", value, "otherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherRelatedCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_related_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_related_cash <=", value, "otherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherRelatedCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_related_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashIn(List<BigDecimal> values) {
            addCriterion("other_related_cash in", values, "otherRelatedCash");
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashNotIn(List<BigDecimal> values) {
            addCriterion("other_related_cash not in", values, "otherRelatedCash");
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_related_cash between", value1, value2, "otherRelatedCash");
            return (Criteria) this;
        }

        public Criteria andOtherRelatedCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_related_cash not between", value1, value2, "otherRelatedCash");
            return (Criteria) this;
        }

        public Criteria andCashInflowsIsNull() {
            addCriterion("cash_inflows is null");
            return (Criteria) this;
        }

        public Criteria andCashInflowsIsNotNull() {
            addCriterion("cash_inflows is not null");
            return (Criteria) this;
        }

        public Criteria andCashInflowsEqualTo(BigDecimal value) {
            addCriterion("cash_inflows =", value, "cashInflows");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInflowsEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_inflows = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInflowsNotEqualTo(BigDecimal value) {
            addCriterion("cash_inflows <>", value, "cashInflows");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInflowsNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_inflows <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInflowsGreaterThan(BigDecimal value) {
            addCriterion("cash_inflows >", value, "cashInflows");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInflowsGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_inflows > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInflowsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_inflows >=", value, "cashInflows");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInflowsGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_inflows >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInflowsLessThan(BigDecimal value) {
            addCriterion("cash_inflows <", value, "cashInflows");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInflowsLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_inflows < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInflowsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_inflows <=", value, "cashInflows");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInflowsLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_inflows <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInflowsIn(List<BigDecimal> values) {
            addCriterion("cash_inflows in", values, "cashInflows");
            return (Criteria) this;
        }

        public Criteria andCashInflowsNotIn(List<BigDecimal> values) {
            addCriterion("cash_inflows not in", values, "cashInflows");
            return (Criteria) this;
        }

        public Criteria andCashInflowsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_inflows between", value1, value2, "cashInflows");
            return (Criteria) this;
        }

        public Criteria andCashInflowsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_inflows not between", value1, value2, "cashInflows");
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsIsNull() {
            addCriterion("cash_paid_goods is null");
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsIsNotNull() {
            addCriterion("cash_paid_goods is not null");
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsEqualTo(BigDecimal value) {
            addCriterion("cash_paid_goods =", value, "cashPaidGoods");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidGoodsEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_goods = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsNotEqualTo(BigDecimal value) {
            addCriterion("cash_paid_goods <>", value, "cashPaidGoods");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidGoodsNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_goods <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsGreaterThan(BigDecimal value) {
            addCriterion("cash_paid_goods >", value, "cashPaidGoods");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidGoodsGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_goods > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_paid_goods >=", value, "cashPaidGoods");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidGoodsGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_goods >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsLessThan(BigDecimal value) {
            addCriterion("cash_paid_goods <", value, "cashPaidGoods");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidGoodsLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_goods < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_paid_goods <=", value, "cashPaidGoods");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidGoodsLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_goods <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsIn(List<BigDecimal> values) {
            addCriterion("cash_paid_goods in", values, "cashPaidGoods");
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsNotIn(List<BigDecimal> values) {
            addCriterion("cash_paid_goods not in", values, "cashPaidGoods");
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_paid_goods between", value1, value2, "cashPaidGoods");
            return (Criteria) this;
        }

        public Criteria andCashPaidGoodsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_paid_goods not between", value1, value2, "cashPaidGoods");
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesIsNull() {
            addCriterion("cash_paid_employees is null");
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesIsNotNull() {
            addCriterion("cash_paid_employees is not null");
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesEqualTo(BigDecimal value) {
            addCriterion("cash_paid_employees =", value, "cashPaidEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidEmployeesEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_employees = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesNotEqualTo(BigDecimal value) {
            addCriterion("cash_paid_employees <>", value, "cashPaidEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidEmployeesNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_employees <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesGreaterThan(BigDecimal value) {
            addCriterion("cash_paid_employees >", value, "cashPaidEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidEmployeesGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_employees > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_paid_employees >=", value, "cashPaidEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidEmployeesGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_employees >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesLessThan(BigDecimal value) {
            addCriterion("cash_paid_employees <", value, "cashPaidEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidEmployeesLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_employees < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_paid_employees <=", value, "cashPaidEmployees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidEmployeesLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_employees <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesIn(List<BigDecimal> values) {
            addCriterion("cash_paid_employees in", values, "cashPaidEmployees");
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesNotIn(List<BigDecimal> values) {
            addCriterion("cash_paid_employees not in", values, "cashPaidEmployees");
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_paid_employees between", value1, value2, "cashPaidEmployees");
            return (Criteria) this;
        }

        public Criteria andCashPaidEmployeesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_paid_employees not between", value1, value2, "cashPaidEmployees");
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesIsNull() {
            addCriterion("pay_various_taxes is null");
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesIsNotNull() {
            addCriterion("pay_various_taxes is not null");
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesEqualTo(BigDecimal value) {
            addCriterion("pay_various_taxes =", value, "payVariousTaxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayVariousTaxesEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_various_taxes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesNotEqualTo(BigDecimal value) {
            addCriterion("pay_various_taxes <>", value, "payVariousTaxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayVariousTaxesNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_various_taxes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesGreaterThan(BigDecimal value) {
            addCriterion("pay_various_taxes >", value, "payVariousTaxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayVariousTaxesGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_various_taxes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_various_taxes >=", value, "payVariousTaxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayVariousTaxesGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_various_taxes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesLessThan(BigDecimal value) {
            addCriterion("pay_various_taxes <", value, "payVariousTaxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayVariousTaxesLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_various_taxes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_various_taxes <=", value, "payVariousTaxes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayVariousTaxesLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_various_taxes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesIn(List<BigDecimal> values) {
            addCriterion("pay_various_taxes in", values, "payVariousTaxes");
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesNotIn(List<BigDecimal> values) {
            addCriterion("pay_various_taxes not in", values, "payVariousTaxes");
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_various_taxes between", value1, value2, "payVariousTaxes");
            return (Criteria) this;
        }

        public Criteria andPayVariousTaxesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_various_taxes not between", value1, value2, "payVariousTaxes");
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashIsNull() {
            addCriterion("pay_operating_cash is null");
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashIsNotNull() {
            addCriterion("pay_operating_cash is not null");
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashEqualTo(BigDecimal value) {
            addCriterion("pay_operating_cash =", value, "payOperatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOperatingCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_operating_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashNotEqualTo(BigDecimal value) {
            addCriterion("pay_operating_cash <>", value, "payOperatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOperatingCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_operating_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashGreaterThan(BigDecimal value) {
            addCriterion("pay_operating_cash >", value, "payOperatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOperatingCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_operating_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_operating_cash >=", value, "payOperatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOperatingCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_operating_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashLessThan(BigDecimal value) {
            addCriterion("pay_operating_cash <", value, "payOperatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOperatingCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_operating_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_operating_cash <=", value, "payOperatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOperatingCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_operating_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashIn(List<BigDecimal> values) {
            addCriterion("pay_operating_cash in", values, "payOperatingCash");
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashNotIn(List<BigDecimal> values) {
            addCriterion("pay_operating_cash not in", values, "payOperatingCash");
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_operating_cash between", value1, value2, "payOperatingCash");
            return (Criteria) this;
        }

        public Criteria andPayOperatingCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_operating_cash not between", value1, value2, "payOperatingCash");
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalIsNull() {
            addCriterion("cash_outflows_subtotal is null");
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalIsNotNull() {
            addCriterion("cash_outflows_subtotal is not null");
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalEqualTo(BigDecimal value) {
            addCriterion("cash_outflows_subtotal =", value, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashOutflowsSubtotalEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_outflows_subtotal = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalNotEqualTo(BigDecimal value) {
            addCriterion("cash_outflows_subtotal <>", value, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashOutflowsSubtotalNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_outflows_subtotal <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalGreaterThan(BigDecimal value) {
            addCriterion("cash_outflows_subtotal >", value, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashOutflowsSubtotalGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_outflows_subtotal > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_outflows_subtotal >=", value, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashOutflowsSubtotalGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_outflows_subtotal >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalLessThan(BigDecimal value) {
            addCriterion("cash_outflows_subtotal <", value, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashOutflowsSubtotalLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_outflows_subtotal < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_outflows_subtotal <=", value, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashOutflowsSubtotalLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_outflows_subtotal <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalIn(List<BigDecimal> values) {
            addCriterion("cash_outflows_subtotal in", values, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalNotIn(List<BigDecimal> values) {
            addCriterion("cash_outflows_subtotal not in", values, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_outflows_subtotal between", value1, value2, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        public Criteria andCashOutflowsSubtotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_outflows_subtotal not between", value1, value2, "cashOutflowsSubtotal");
            return (Criteria) this;
        }

        public Criteria andOperatingCashIsNull() {
            addCriterion("operating_cash is null");
            return (Criteria) this;
        }

        public Criteria andOperatingCashIsNotNull() {
            addCriterion("operating_cash is not null");
            return (Criteria) this;
        }

        public Criteria andOperatingCashEqualTo(BigDecimal value) {
            addCriterion("operating_cash =", value, "operatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOperatingCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("operating_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCashNotEqualTo(BigDecimal value) {
            addCriterion("operating_cash <>", value, "operatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOperatingCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("operating_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCashGreaterThan(BigDecimal value) {
            addCriterion("operating_cash >", value, "operatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOperatingCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("operating_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("operating_cash >=", value, "operatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOperatingCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("operating_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCashLessThan(BigDecimal value) {
            addCriterion("operating_cash <", value, "operatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOperatingCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("operating_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("operating_cash <=", value, "operatingCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOperatingCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("operating_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCashIn(List<BigDecimal> values) {
            addCriterion("operating_cash in", values, "operatingCash");
            return (Criteria) this;
        }

        public Criteria andOperatingCashNotIn(List<BigDecimal> values) {
            addCriterion("operating_cash not in", values, "operatingCash");
            return (Criteria) this;
        }

        public Criteria andOperatingCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("operating_cash between", value1, value2, "operatingCash");
            return (Criteria) this;
        }

        public Criteria andOperatingCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("operating_cash not between", value1, value2, "operatingCash");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashIsNull() {
            addCriterion("investment_activities_produce_cash is null");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashIsNotNull() {
            addCriterion("investment_activities_produce_cash is not null");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashEqualTo(BigDecimal value) {
            addCriterion("investment_activities_produce_cash =", value, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesProduceCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_produce_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashNotEqualTo(BigDecimal value) {
            addCriterion("investment_activities_produce_cash <>", value, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesProduceCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_produce_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashGreaterThan(BigDecimal value) {
            addCriterion("investment_activities_produce_cash >", value, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesProduceCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_produce_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_activities_produce_cash >=", value, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesProduceCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_produce_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashLessThan(BigDecimal value) {
            addCriterion("investment_activities_produce_cash <", value, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesProduceCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_produce_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_activities_produce_cash <=", value, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesProduceCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_produce_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashIn(List<BigDecimal> values) {
            addCriterion("investment_activities_produce_cash in", values, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashNotIn(List<BigDecimal> values) {
            addCriterion("investment_activities_produce_cash not in", values, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_activities_produce_cash between", value1, value2, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesProduceCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_activities_produce_cash not between", value1, value2, "investmentActivitiesProduceCash");
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedIsNull() {
            addCriterion("collect_cash_received is null");
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedIsNotNull() {
            addCriterion("collect_cash_received is not null");
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedEqualTo(BigDecimal value) {
            addCriterion("collect_cash_received =", value, "collectCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCollectCashReceivedEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("collect_cash_received = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedNotEqualTo(BigDecimal value) {
            addCriterion("collect_cash_received <>", value, "collectCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCollectCashReceivedNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("collect_cash_received <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedGreaterThan(BigDecimal value) {
            addCriterion("collect_cash_received >", value, "collectCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCollectCashReceivedGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("collect_cash_received > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("collect_cash_received >=", value, "collectCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCollectCashReceivedGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("collect_cash_received >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedLessThan(BigDecimal value) {
            addCriterion("collect_cash_received <", value, "collectCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCollectCashReceivedLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("collect_cash_received < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedLessThanOrEqualTo(BigDecimal value) {
            addCriterion("collect_cash_received <=", value, "collectCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCollectCashReceivedLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("collect_cash_received <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedIn(List<BigDecimal> values) {
            addCriterion("collect_cash_received in", values, "collectCashReceived");
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedNotIn(List<BigDecimal> values) {
            addCriterion("collect_cash_received not in", values, "collectCashReceived");
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("collect_cash_received between", value1, value2, "collectCashReceived");
            return (Criteria) this;
        }

        public Criteria andCollectCashReceivedNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("collect_cash_received not between", value1, value2, "collectCashReceived");
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeIsNull() {
            addCriterion("cash_from_investment_income is null");
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeIsNotNull() {
            addCriterion("cash_from_investment_income is not null");
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeEqualTo(BigDecimal value) {
            addCriterion("cash_from_investment_income =", value, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFromInvestmentIncomeEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_from_investment_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeNotEqualTo(BigDecimal value) {
            addCriterion("cash_from_investment_income <>", value, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFromInvestmentIncomeNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_from_investment_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeGreaterThan(BigDecimal value) {
            addCriterion("cash_from_investment_income >", value, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFromInvestmentIncomeGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_from_investment_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_from_investment_income >=", value, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFromInvestmentIncomeGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_from_investment_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeLessThan(BigDecimal value) {
            addCriterion("cash_from_investment_income <", value, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFromInvestmentIncomeLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_from_investment_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_from_investment_income <=", value, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFromInvestmentIncomeLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_from_investment_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeIn(List<BigDecimal> values) {
            addCriterion("cash_from_investment_income in", values, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeNotIn(List<BigDecimal> values) {
            addCriterion("cash_from_investment_income not in", values, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_from_investment_income between", value1, value2, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        public Criteria andCashFromInvestmentIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_from_investment_income not between", value1, value2, "cashFromInvestmentIncome");
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashIsNull() {
            addCriterion("net_recovered_cash is null");
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashIsNotNull() {
            addCriterion("net_recovered_cash is not null");
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashEqualTo(BigDecimal value) {
            addCriterion("net_recovered_cash =", value, "netRecoveredCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetRecoveredCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_recovered_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashNotEqualTo(BigDecimal value) {
            addCriterion("net_recovered_cash <>", value, "netRecoveredCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetRecoveredCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_recovered_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashGreaterThan(BigDecimal value) {
            addCriterion("net_recovered_cash >", value, "netRecoveredCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetRecoveredCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_recovered_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("net_recovered_cash >=", value, "netRecoveredCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetRecoveredCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_recovered_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashLessThan(BigDecimal value) {
            addCriterion("net_recovered_cash <", value, "netRecoveredCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetRecoveredCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_recovered_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("net_recovered_cash <=", value, "netRecoveredCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetRecoveredCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_recovered_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashIn(List<BigDecimal> values) {
            addCriterion("net_recovered_cash in", values, "netRecoveredCash");
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashNotIn(List<BigDecimal> values) {
            addCriterion("net_recovered_cash not in", values, "netRecoveredCash");
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_recovered_cash between", value1, value2, "netRecoveredCash");
            return (Criteria) this;
        }

        public Criteria andNetRecoveredCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_recovered_cash not between", value1, value2, "netRecoveredCash");
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedIsNull() {
            addCriterion("other_units_net_cash_received is null");
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedIsNotNull() {
            addCriterion("other_units_net_cash_received is not null");
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedEqualTo(BigDecimal value) {
            addCriterion("other_units_net_cash_received =", value, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherUnitsNetCashReceivedEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_units_net_cash_received = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedNotEqualTo(BigDecimal value) {
            addCriterion("other_units_net_cash_received <>", value, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherUnitsNetCashReceivedNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_units_net_cash_received <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedGreaterThan(BigDecimal value) {
            addCriterion("other_units_net_cash_received >", value, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherUnitsNetCashReceivedGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_units_net_cash_received > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_units_net_cash_received >=", value, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherUnitsNetCashReceivedGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_units_net_cash_received >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedLessThan(BigDecimal value) {
            addCriterion("other_units_net_cash_received <", value, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherUnitsNetCashReceivedLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_units_net_cash_received < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_units_net_cash_received <=", value, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOtherUnitsNetCashReceivedLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("other_units_net_cash_received <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedIn(List<BigDecimal> values) {
            addCriterion("other_units_net_cash_received in", values, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedNotIn(List<BigDecimal> values) {
            addCriterion("other_units_net_cash_received not in", values, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_units_net_cash_received between", value1, value2, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        public Criteria andOtherUnitsNetCashReceivedNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_units_net_cash_received not between", value1, value2, "otherUnitsNetCashReceived");
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesIsNull() {
            addCriterion("cash_investment_activities is null");
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesIsNotNull() {
            addCriterion("cash_investment_activities is not null");
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesEqualTo(BigDecimal value) {
            addCriterion("cash_investment_activities =", value, "cashInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInvestmentActivitiesEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_investment_activities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesNotEqualTo(BigDecimal value) {
            addCriterion("cash_investment_activities <>", value, "cashInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInvestmentActivitiesNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_investment_activities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesGreaterThan(BigDecimal value) {
            addCriterion("cash_investment_activities >", value, "cashInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInvestmentActivitiesGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_investment_activities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_investment_activities >=", value, "cashInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInvestmentActivitiesGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_investment_activities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesLessThan(BigDecimal value) {
            addCriterion("cash_investment_activities <", value, "cashInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInvestmentActivitiesLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_investment_activities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_investment_activities <=", value, "cashInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashInvestmentActivitiesLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_investment_activities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesIn(List<BigDecimal> values) {
            addCriterion("cash_investment_activities in", values, "cashInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesNotIn(List<BigDecimal> values) {
            addCriterion("cash_investment_activities not in", values, "cashInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_investment_activities between", value1, value2, "cashInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andCashInvestmentActivitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_investment_activities not between", value1, value2, "cashInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesIsNull() {
            addCriterion("subtotal_investment_activities is null");
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesIsNotNull() {
            addCriterion("subtotal_investment_activities is not null");
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesEqualTo(BigDecimal value) {
            addCriterion("subtotal_investment_activities =", value, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andSubtotalInvestmentActivitiesEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("subtotal_investment_activities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesNotEqualTo(BigDecimal value) {
            addCriterion("subtotal_investment_activities <>", value, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andSubtotalInvestmentActivitiesNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("subtotal_investment_activities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesGreaterThan(BigDecimal value) {
            addCriterion("subtotal_investment_activities >", value, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andSubtotalInvestmentActivitiesGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("subtotal_investment_activities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("subtotal_investment_activities >=", value, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andSubtotalInvestmentActivitiesGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("subtotal_investment_activities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesLessThan(BigDecimal value) {
            addCriterion("subtotal_investment_activities <", value, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andSubtotalInvestmentActivitiesLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("subtotal_investment_activities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("subtotal_investment_activities <=", value, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andSubtotalInvestmentActivitiesLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("subtotal_investment_activities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesIn(List<BigDecimal> values) {
            addCriterion("subtotal_investment_activities in", values, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesNotIn(List<BigDecimal> values) {
            addCriterion("subtotal_investment_activities not in", values, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("subtotal_investment_activities between", value1, value2, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andSubtotalInvestmentActivitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("subtotal_investment_activities not between", value1, value2, "subtotalInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsIsNull() {
            addCriterion("cash_paid_fixed_assets is null");
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsIsNotNull() {
            addCriterion("cash_paid_fixed_assets is not null");
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsEqualTo(BigDecimal value) {
            addCriterion("cash_paid_fixed_assets =", value, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidFixedAssetsEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_fixed_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsNotEqualTo(BigDecimal value) {
            addCriterion("cash_paid_fixed_assets <>", value, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidFixedAssetsNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_fixed_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsGreaterThan(BigDecimal value) {
            addCriterion("cash_paid_fixed_assets >", value, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidFixedAssetsGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_fixed_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_paid_fixed_assets >=", value, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidFixedAssetsGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_fixed_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsLessThan(BigDecimal value) {
            addCriterion("cash_paid_fixed_assets <", value, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidFixedAssetsLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_fixed_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_paid_fixed_assets <=", value, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidFixedAssetsLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_fixed_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsIn(List<BigDecimal> values) {
            addCriterion("cash_paid_fixed_assets in", values, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsNotIn(List<BigDecimal> values) {
            addCriterion("cash_paid_fixed_assets not in", values, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_paid_fixed_assets between", value1, value2, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        public Criteria andCashPaidFixedAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_paid_fixed_assets not between", value1, value2, "cashPaidFixedAssets");
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentIsNull() {
            addCriterion("cash_paid_investment is null");
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentIsNotNull() {
            addCriterion("cash_paid_investment is not null");
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentEqualTo(BigDecimal value) {
            addCriterion("cash_paid_investment =", value, "cashPaidInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidInvestmentEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("cash_paid_investment <>", value, "cashPaidInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidInvestmentNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentGreaterThan(BigDecimal value) {
            addCriterion("cash_paid_investment >", value, "cashPaidInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidInvestmentGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_paid_investment >=", value, "cashPaidInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidInvestmentGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentLessThan(BigDecimal value) {
            addCriterion("cash_paid_investment <", value, "cashPaidInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidInvestmentLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_paid_investment <=", value, "cashPaidInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashPaidInvestmentLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_paid_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentIn(List<BigDecimal> values) {
            addCriterion("cash_paid_investment in", values, "cashPaidInvestment");
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("cash_paid_investment not in", values, "cashPaidInvestment");
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_paid_investment between", value1, value2, "cashPaidInvestment");
            return (Criteria) this;
        }

        public Criteria andCashPaidInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_paid_investment not between", value1, value2, "cashPaidInvestment");
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitIsNull() {
            addCriterion("net_cash_paid_unit is null");
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitIsNotNull() {
            addCriterion("net_cash_paid_unit is not null");
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitEqualTo(BigDecimal value) {
            addCriterion("net_cash_paid_unit =", value, "netCashPaidUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetCashPaidUnitEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_cash_paid_unit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitNotEqualTo(BigDecimal value) {
            addCriterion("net_cash_paid_unit <>", value, "netCashPaidUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetCashPaidUnitNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_cash_paid_unit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitGreaterThan(BigDecimal value) {
            addCriterion("net_cash_paid_unit >", value, "netCashPaidUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetCashPaidUnitGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_cash_paid_unit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("net_cash_paid_unit >=", value, "netCashPaidUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetCashPaidUnitGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_cash_paid_unit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitLessThan(BigDecimal value) {
            addCriterion("net_cash_paid_unit <", value, "netCashPaidUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetCashPaidUnitLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_cash_paid_unit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("net_cash_paid_unit <=", value, "netCashPaidUnit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetCashPaidUnitLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_cash_paid_unit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitIn(List<BigDecimal> values) {
            addCriterion("net_cash_paid_unit in", values, "netCashPaidUnit");
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitNotIn(List<BigDecimal> values) {
            addCriterion("net_cash_paid_unit not in", values, "netCashPaidUnit");
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_cash_paid_unit between", value1, value2, "netCashPaidUnit");
            return (Criteria) this;
        }

        public Criteria andNetCashPaidUnitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_cash_paid_unit not between", value1, value2, "netCashPaidUnit");
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesIsNull() {
            addCriterion("cash_related_investment_activities is null");
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesIsNotNull() {
            addCriterion("cash_related_investment_activities is not null");
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesEqualTo(BigDecimal value) {
            addCriterion("cash_related_investment_activities =", value, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashRelatedInvestmentActivitiesEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_related_investment_activities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesNotEqualTo(BigDecimal value) {
            addCriterion("cash_related_investment_activities <>", value, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashRelatedInvestmentActivitiesNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_related_investment_activities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesGreaterThan(BigDecimal value) {
            addCriterion("cash_related_investment_activities >", value, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashRelatedInvestmentActivitiesGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_related_investment_activities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_related_investment_activities >=", value, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashRelatedInvestmentActivitiesGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_related_investment_activities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesLessThan(BigDecimal value) {
            addCriterion("cash_related_investment_activities <", value, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashRelatedInvestmentActivitiesLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_related_investment_activities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_related_investment_activities <=", value, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashRelatedInvestmentActivitiesLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_related_investment_activities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesIn(List<BigDecimal> values) {
            addCriterion("cash_related_investment_activities in", values, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesNotIn(List<BigDecimal> values) {
            addCriterion("cash_related_investment_activities not in", values, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_related_investment_activities between", value1, value2, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andCashRelatedInvestmentActivitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_related_investment_activities not between", value1, value2, "cashRelatedInvestmentActivities");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalIsNull() {
            addCriterion("investment_activities_subtotal is null");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalIsNotNull() {
            addCriterion("investment_activities_subtotal is not null");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalEqualTo(BigDecimal value) {
            addCriterion("investment_activities_subtotal =", value, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesSubtotalEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_subtotal = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalNotEqualTo(BigDecimal value) {
            addCriterion("investment_activities_subtotal <>", value, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesSubtotalNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_subtotal <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalGreaterThan(BigDecimal value) {
            addCriterion("investment_activities_subtotal >", value, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesSubtotalGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_subtotal > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_activities_subtotal >=", value, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesSubtotalGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_subtotal >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalLessThan(BigDecimal value) {
            addCriterion("investment_activities_subtotal <", value, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesSubtotalLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_subtotal < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_activities_subtotal <=", value, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesSubtotalLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("investment_activities_subtotal <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalIn(List<BigDecimal> values) {
            addCriterion("investment_activities_subtotal in", values, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalNotIn(List<BigDecimal> values) {
            addCriterion("investment_activities_subtotal not in", values, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_activities_subtotal between", value1, value2, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesSubtotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_activities_subtotal not between", value1, value2, "investmentActivitiesSubtotal");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashIsNull() {
            addCriterion("Investment_activities_cash is null");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashIsNotNull() {
            addCriterion("Investment_activities_cash is not null");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashEqualTo(BigDecimal value) {
            addCriterion("Investment_activities_cash =", value, "investmentActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("Investment_activities_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashNotEqualTo(BigDecimal value) {
            addCriterion("Investment_activities_cash <>", value, "investmentActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("Investment_activities_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashGreaterThan(BigDecimal value) {
            addCriterion("Investment_activities_cash >", value, "investmentActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("Investment_activities_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("Investment_activities_cash >=", value, "investmentActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("Investment_activities_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashLessThan(BigDecimal value) {
            addCriterion("Investment_activities_cash <", value, "investmentActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("Investment_activities_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("Investment_activities_cash <=", value, "investmentActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andInvestmentActivitiesCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("Investment_activities_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashIn(List<BigDecimal> values) {
            addCriterion("Investment_activities_cash in", values, "investmentActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashNotIn(List<BigDecimal> values) {
            addCriterion("Investment_activities_cash not in", values, "investmentActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Investment_activities_cash between", value1, value2, "investmentActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andInvestmentActivitiesCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Investment_activities_cash not between", value1, value2, "investmentActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashIsNull() {
            addCriterion("financing_activities_cash is null");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashIsNotNull() {
            addCriterion("financing_activities_cash is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashEqualTo(BigDecimal value) {
            addCriterion("financing_activities_cash =", value, "financingActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashNotEqualTo(BigDecimal value) {
            addCriterion("financing_activities_cash <>", value, "financingActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashGreaterThan(BigDecimal value) {
            addCriterion("financing_activities_cash >", value, "financingActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_activities_cash >=", value, "financingActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashLessThan(BigDecimal value) {
            addCriterion("financing_activities_cash <", value, "financingActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_activities_cash <=", value, "financingActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashIn(List<BigDecimal> values) {
            addCriterion("financing_activities_cash in", values, "financingActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashNotIn(List<BigDecimal> values) {
            addCriterion("financing_activities_cash not in", values, "financingActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_activities_cash between", value1, value2, "financingActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_activities_cash not between", value1, value2, "financingActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsIsNull() {
            addCriterion("receive_cash_investments is null");
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsIsNotNull() {
            addCriterion("receive_cash_investments is not null");
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsEqualTo(BigDecimal value) {
            addCriterion("receive_cash_investments =", value, "receiveCashInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andReceiveCashInvestmentsEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("receive_cash_investments = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsNotEqualTo(BigDecimal value) {
            addCriterion("receive_cash_investments <>", value, "receiveCashInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andReceiveCashInvestmentsNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("receive_cash_investments <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsGreaterThan(BigDecimal value) {
            addCriterion("receive_cash_investments >", value, "receiveCashInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andReceiveCashInvestmentsGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("receive_cash_investments > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("receive_cash_investments >=", value, "receiveCashInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andReceiveCashInvestmentsGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("receive_cash_investments >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsLessThan(BigDecimal value) {
            addCriterion("receive_cash_investments <", value, "receiveCashInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andReceiveCashInvestmentsLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("receive_cash_investments < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("receive_cash_investments <=", value, "receiveCashInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andReceiveCashInvestmentsLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("receive_cash_investments <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsIn(List<BigDecimal> values) {
            addCriterion("receive_cash_investments in", values, "receiveCashInvestments");
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsNotIn(List<BigDecimal> values) {
            addCriterion("receive_cash_investments not in", values, "receiveCashInvestments");
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("receive_cash_investments between", value1, value2, "receiveCashInvestments");
            return (Criteria) this;
        }

        public Criteria andReceiveCashInvestmentsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("receive_cash_investments not between", value1, value2, "receiveCashInvestments");
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanIsNull() {
            addCriterion("cash_received_from_loan is null");
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanIsNotNull() {
            addCriterion("cash_received_from_loan is not null");
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanEqualTo(BigDecimal value) {
            addCriterion("cash_received_from_loan =", value, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedFromLoanEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_from_loan = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanNotEqualTo(BigDecimal value) {
            addCriterion("cash_received_from_loan <>", value, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedFromLoanNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_from_loan <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanGreaterThan(BigDecimal value) {
            addCriterion("cash_received_from_loan >", value, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedFromLoanGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_from_loan > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_received_from_loan >=", value, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedFromLoanGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_from_loan >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanLessThan(BigDecimal value) {
            addCriterion("cash_received_from_loan <", value, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedFromLoanLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_from_loan < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_received_from_loan <=", value, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashReceivedFromLoanLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_received_from_loan <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanIn(List<BigDecimal> values) {
            addCriterion("cash_received_from_loan in", values, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanNotIn(List<BigDecimal> values) {
            addCriterion("cash_received_from_loan not in", values, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_received_from_loan between", value1, value2, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        public Criteria andCashReceivedFromLoanNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_received_from_loan not between", value1, value2, "cashReceivedFromLoan");
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesIsNull() {
            addCriterion("cash_financing_activities is null");
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesIsNotNull() {
            addCriterion("cash_financing_activities is not null");
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesEqualTo(BigDecimal value) {
            addCriterion("cash_financing_activities =", value, "cashFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFinancingActivitiesEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_financing_activities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesNotEqualTo(BigDecimal value) {
            addCriterion("cash_financing_activities <>", value, "cashFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFinancingActivitiesNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_financing_activities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesGreaterThan(BigDecimal value) {
            addCriterion("cash_financing_activities >", value, "cashFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFinancingActivitiesGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_financing_activities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_financing_activities >=", value, "cashFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFinancingActivitiesGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_financing_activities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesLessThan(BigDecimal value) {
            addCriterion("cash_financing_activities <", value, "cashFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFinancingActivitiesLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_financing_activities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_financing_activities <=", value, "cashFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashFinancingActivitiesLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_financing_activities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesIn(List<BigDecimal> values) {
            addCriterion("cash_financing_activities in", values, "cashFinancingActivities");
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesNotIn(List<BigDecimal> values) {
            addCriterion("cash_financing_activities not in", values, "cashFinancingActivities");
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_financing_activities between", value1, value2, "cashFinancingActivities");
            return (Criteria) this;
        }

        public Criteria andCashFinancingActivitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_financing_activities not between", value1, value2, "cashFinancingActivities");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalIsNull() {
            addCriterion("financing_activities_subtotal is null");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalIsNotNull() {
            addCriterion("financing_activities_subtotal is not null");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalEqualTo(BigDecimal value) {
            addCriterion("financing_activities_subtotal =", value, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesSubtotalEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_subtotal = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalNotEqualTo(BigDecimal value) {
            addCriterion("financing_activities_subtotal <>", value, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesSubtotalNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_subtotal <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalGreaterThan(BigDecimal value) {
            addCriterion("financing_activities_subtotal >", value, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesSubtotalGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_subtotal > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_activities_subtotal >=", value, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesSubtotalGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_subtotal >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalLessThan(BigDecimal value) {
            addCriterion("financing_activities_subtotal <", value, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesSubtotalLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_subtotal < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("financing_activities_subtotal <=", value, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andFinancingActivitiesSubtotalLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("financing_activities_subtotal <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalIn(List<BigDecimal> values) {
            addCriterion("financing_activities_subtotal in", values, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalNotIn(List<BigDecimal> values) {
            addCriterion("financing_activities_subtotal not in", values, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_activities_subtotal between", value1, value2, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        public Criteria andFinancingActivitiesSubtotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financing_activities_subtotal not between", value1, value2, "financingActivitiesSubtotal");
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtIsNull() {
            addCriterion("payment_for_debt is null");
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtIsNotNull() {
            addCriterion("payment_for_debt is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtEqualTo(BigDecimal value) {
            addCriterion("payment_for_debt =", value, "paymentForDebt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPaymentForDebtEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("payment_for_debt = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtNotEqualTo(BigDecimal value) {
            addCriterion("payment_for_debt <>", value, "paymentForDebt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPaymentForDebtNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("payment_for_debt <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtGreaterThan(BigDecimal value) {
            addCriterion("payment_for_debt >", value, "paymentForDebt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPaymentForDebtGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("payment_for_debt > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("payment_for_debt >=", value, "paymentForDebt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPaymentForDebtGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("payment_for_debt >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtLessThan(BigDecimal value) {
            addCriterion("payment_for_debt <", value, "paymentForDebt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPaymentForDebtLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("payment_for_debt < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtLessThanOrEqualTo(BigDecimal value) {
            addCriterion("payment_for_debt <=", value, "paymentForDebt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPaymentForDebtLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("payment_for_debt <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtIn(List<BigDecimal> values) {
            addCriterion("payment_for_debt in", values, "paymentForDebt");
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtNotIn(List<BigDecimal> values) {
            addCriterion("payment_for_debt not in", values, "paymentForDebt");
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("payment_for_debt between", value1, value2, "paymentForDebt");
            return (Criteria) this;
        }

        public Criteria andPaymentForDebtNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("payment_for_debt not between", value1, value2, "paymentForDebt");
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsIsNull() {
            addCriterion("for_interest_payments is null");
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsIsNotNull() {
            addCriterion("for_interest_payments is not null");
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsEqualTo(BigDecimal value) {
            addCriterion("for_interest_payments =", value, "forInterestPayments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andForInterestPaymentsEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("for_interest_payments = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsNotEqualTo(BigDecimal value) {
            addCriterion("for_interest_payments <>", value, "forInterestPayments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andForInterestPaymentsNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("for_interest_payments <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsGreaterThan(BigDecimal value) {
            addCriterion("for_interest_payments >", value, "forInterestPayments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andForInterestPaymentsGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("for_interest_payments > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("for_interest_payments >=", value, "forInterestPayments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andForInterestPaymentsGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("for_interest_payments >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsLessThan(BigDecimal value) {
            addCriterion("for_interest_payments <", value, "forInterestPayments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andForInterestPaymentsLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("for_interest_payments < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("for_interest_payments <=", value, "forInterestPayments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andForInterestPaymentsLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("for_interest_payments <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsIn(List<BigDecimal> values) {
            addCriterion("for_interest_payments in", values, "forInterestPayments");
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsNotIn(List<BigDecimal> values) {
            addCriterion("for_interest_payments not in", values, "forInterestPayments");
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("for_interest_payments between", value1, value2, "forInterestPayments");
            return (Criteria) this;
        }

        public Criteria andForInterestPaymentsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("for_interest_payments not between", value1, value2, "forInterestPayments");
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashIsNull() {
            addCriterion("pay_other_related_cash is null");
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashIsNotNull() {
            addCriterion("pay_other_related_cash is not null");
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashEqualTo(BigDecimal value) {
            addCriterion("pay_other_related_cash =", value, "payOtherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOtherRelatedCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_other_related_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashNotEqualTo(BigDecimal value) {
            addCriterion("pay_other_related_cash <>", value, "payOtherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOtherRelatedCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_other_related_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashGreaterThan(BigDecimal value) {
            addCriterion("pay_other_related_cash >", value, "payOtherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOtherRelatedCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_other_related_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_other_related_cash >=", value, "payOtherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOtherRelatedCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_other_related_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashLessThan(BigDecimal value) {
            addCriterion("pay_other_related_cash <", value, "payOtherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOtherRelatedCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_other_related_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_other_related_cash <=", value, "payOtherRelatedCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andPayOtherRelatedCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("pay_other_related_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashIn(List<BigDecimal> values) {
            addCriterion("pay_other_related_cash in", values, "payOtherRelatedCash");
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashNotIn(List<BigDecimal> values) {
            addCriterion("pay_other_related_cash not in", values, "payOtherRelatedCash");
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_other_related_cash between", value1, value2, "payOtherRelatedCash");
            return (Criteria) this;
        }

        public Criteria andPayOtherRelatedCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_other_related_cash not between", value1, value2, "payOtherRelatedCash");
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesIsNull() {
            addCriterion("outflow_financing_activities is null");
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesIsNotNull() {
            addCriterion("outflow_financing_activities is not null");
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesEqualTo(BigDecimal value) {
            addCriterion("outflow_financing_activities =", value, "outflowFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOutflowFinancingActivitiesEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("outflow_financing_activities = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesNotEqualTo(BigDecimal value) {
            addCriterion("outflow_financing_activities <>", value, "outflowFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOutflowFinancingActivitiesNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("outflow_financing_activities <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesGreaterThan(BigDecimal value) {
            addCriterion("outflow_financing_activities >", value, "outflowFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOutflowFinancingActivitiesGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("outflow_financing_activities > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("outflow_financing_activities >=", value, "outflowFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOutflowFinancingActivitiesGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("outflow_financing_activities >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesLessThan(BigDecimal value) {
            addCriterion("outflow_financing_activities <", value, "outflowFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOutflowFinancingActivitiesLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("outflow_financing_activities < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("outflow_financing_activities <=", value, "outflowFinancingActivities");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andOutflowFinancingActivitiesLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("outflow_financing_activities <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesIn(List<BigDecimal> values) {
            addCriterion("outflow_financing_activities in", values, "outflowFinancingActivities");
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesNotIn(List<BigDecimal> values) {
            addCriterion("outflow_financing_activities not in", values, "outflowFinancingActivities");
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("outflow_financing_activities between", value1, value2, "outflowFinancingActivities");
            return (Criteria) this;
        }

        public Criteria andOutflowFinancingActivitiesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("outflow_financing_activities not between", value1, value2, "outflowFinancingActivities");
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashIsNull() {
            addCriterion("mobilization_activities_cash is null");
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashIsNotNull() {
            addCriterion("mobilization_activities_cash is not null");
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashEqualTo(BigDecimal value) {
            addCriterion("mobilization_activities_cash =", value, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andMobilizationActivitiesCashEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("mobilization_activities_cash = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashNotEqualTo(BigDecimal value) {
            addCriterion("mobilization_activities_cash <>", value, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andMobilizationActivitiesCashNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("mobilization_activities_cash <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashGreaterThan(BigDecimal value) {
            addCriterion("mobilization_activities_cash >", value, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andMobilizationActivitiesCashGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("mobilization_activities_cash > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("mobilization_activities_cash >=", value, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andMobilizationActivitiesCashGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("mobilization_activities_cash >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashLessThan(BigDecimal value) {
            addCriterion("mobilization_activities_cash <", value, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andMobilizationActivitiesCashLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("mobilization_activities_cash < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("mobilization_activities_cash <=", value, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andMobilizationActivitiesCashLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("mobilization_activities_cash <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashIn(List<BigDecimal> values) {
            addCriterion("mobilization_activities_cash in", values, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashNotIn(List<BigDecimal> values) {
            addCriterion("mobilization_activities_cash not in", values, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("mobilization_activities_cash between", value1, value2, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andMobilizationActivitiesCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("mobilization_activities_cash not between", value1, value2, "mobilizationActivitiesCash");
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsIsNull() {
            addCriterion("effect_cash_equivalents is null");
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsIsNotNull() {
            addCriterion("effect_cash_equivalents is not null");
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsEqualTo(BigDecimal value) {
            addCriterion("effect_cash_equivalents =", value, "effectCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andEffectCashEquivalentsEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("effect_cash_equivalents = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsNotEqualTo(BigDecimal value) {
            addCriterion("effect_cash_equivalents <>", value, "effectCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andEffectCashEquivalentsNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("effect_cash_equivalents <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsGreaterThan(BigDecimal value) {
            addCriterion("effect_cash_equivalents >", value, "effectCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andEffectCashEquivalentsGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("effect_cash_equivalents > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("effect_cash_equivalents >=", value, "effectCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andEffectCashEquivalentsGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("effect_cash_equivalents >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsLessThan(BigDecimal value) {
            addCriterion("effect_cash_equivalents <", value, "effectCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andEffectCashEquivalentsLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("effect_cash_equivalents < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("effect_cash_equivalents <=", value, "effectCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andEffectCashEquivalentsLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("effect_cash_equivalents <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsIn(List<BigDecimal> values) {
            addCriterion("effect_cash_equivalents in", values, "effectCashEquivalents");
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsNotIn(List<BigDecimal> values) {
            addCriterion("effect_cash_equivalents not in", values, "effectCashEquivalents");
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("effect_cash_equivalents between", value1, value2, "effectCashEquivalents");
            return (Criteria) this;
        }

        public Criteria andEffectCashEquivalentsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("effect_cash_equivalents not between", value1, value2, "effectCashEquivalents");
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsIsNull() {
            addCriterion("net_increase_in_cash_equivalents is null");
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsIsNotNull() {
            addCriterion("net_increase_in_cash_equivalents is not null");
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsEqualTo(BigDecimal value) {
            addCriterion("net_increase_in_cash_equivalents =", value, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetIncreaseInCashEquivalentsEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_increase_in_cash_equivalents = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsNotEqualTo(BigDecimal value) {
            addCriterion("net_increase_in_cash_equivalents <>", value, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetIncreaseInCashEquivalentsNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_increase_in_cash_equivalents <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsGreaterThan(BigDecimal value) {
            addCriterion("net_increase_in_cash_equivalents >", value, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetIncreaseInCashEquivalentsGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_increase_in_cash_equivalents > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("net_increase_in_cash_equivalents >=", value, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetIncreaseInCashEquivalentsGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_increase_in_cash_equivalents >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsLessThan(BigDecimal value) {
            addCriterion("net_increase_in_cash_equivalents <", value, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetIncreaseInCashEquivalentsLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_increase_in_cash_equivalents < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("net_increase_in_cash_equivalents <=", value, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andNetIncreaseInCashEquivalentsLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("net_increase_in_cash_equivalents <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsIn(List<BigDecimal> values) {
            addCriterion("net_increase_in_cash_equivalents in", values, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsNotIn(List<BigDecimal> values) {
            addCriterion("net_increase_in_cash_equivalents not in", values, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_increase_in_cash_equivalents between", value1, value2, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        public Criteria andNetIncreaseInCashEquivalentsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_increase_in_cash_equivalents not between", value1, value2, "netIncreaseInCashEquivalents");
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceIsNull() {
            addCriterion("cash_equivalent_balance is null");
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceIsNotNull() {
            addCriterion("cash_equivalent_balance is not null");
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceEqualTo(BigDecimal value) {
            addCriterion("cash_equivalent_balance =", value, "cashEquivalentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashEquivalentBalanceEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_equivalent_balance = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceNotEqualTo(BigDecimal value) {
            addCriterion("cash_equivalent_balance <>", value, "cashEquivalentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashEquivalentBalanceNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_equivalent_balance <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceGreaterThan(BigDecimal value) {
            addCriterion("cash_equivalent_balance >", value, "cashEquivalentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashEquivalentBalanceGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_equivalent_balance > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_equivalent_balance >=", value, "cashEquivalentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashEquivalentBalanceGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_equivalent_balance >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceLessThan(BigDecimal value) {
            addCriterion("cash_equivalent_balance <", value, "cashEquivalentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashEquivalentBalanceLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_equivalent_balance < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_equivalent_balance <=", value, "cashEquivalentBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCashEquivalentBalanceLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("cash_equivalent_balance <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceIn(List<BigDecimal> values) {
            addCriterion("cash_equivalent_balance in", values, "cashEquivalentBalance");
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceNotIn(List<BigDecimal> values) {
            addCriterion("cash_equivalent_balance not in", values, "cashEquivalentBalance");
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_equivalent_balance between", value1, value2, "cashEquivalentBalance");
            return (Criteria) this;
        }

        public Criteria andCashEquivalentBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_equivalent_balance not between", value1, value2, "cashEquivalentBalance");
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceIsNull() {
            addCriterion("closing_cash_balance is null");
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceIsNotNull() {
            addCriterion("closing_cash_balance is not null");
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceEqualTo(BigDecimal value) {
            addCriterion("closing_cash_balance =", value, "closingCashBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andClosingCashBalanceEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("closing_cash_balance = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceNotEqualTo(BigDecimal value) {
            addCriterion("closing_cash_balance <>", value, "closingCashBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andClosingCashBalanceNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("closing_cash_balance <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceGreaterThan(BigDecimal value) {
            addCriterion("closing_cash_balance >", value, "closingCashBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andClosingCashBalanceGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("closing_cash_balance > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("closing_cash_balance >=", value, "closingCashBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andClosingCashBalanceGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("closing_cash_balance >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceLessThan(BigDecimal value) {
            addCriterion("closing_cash_balance <", value, "closingCashBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andClosingCashBalanceLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("closing_cash_balance < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("closing_cash_balance <=", value, "closingCashBalance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andClosingCashBalanceLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("closing_cash_balance <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceIn(List<BigDecimal> values) {
            addCriterion("closing_cash_balance in", values, "closingCashBalance");
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceNotIn(List<BigDecimal> values) {
            addCriterion("closing_cash_balance not in", values, "closingCashBalance");
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("closing_cash_balance between", value1, value2, "closingCashBalance");
            return (Criteria) this;
        }

        public Criteria andClosingCashBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("closing_cash_balance not between", value1, value2, "closingCashBalance");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyCashFlow.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        private TCpyCashFlowExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        protected Criteria(TCpyCashFlowExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public TCpyCashFlowExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_cash_flow
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_cash_flow
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_cash_flow
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyCashFlowExample example);
    }
}