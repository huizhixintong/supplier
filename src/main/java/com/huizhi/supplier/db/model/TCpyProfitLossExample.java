package com.huizhi.supplier.db.model;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyProfitLossExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public TCpyProfitLossExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public TCpyProfitLossExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public TCpyProfitLossExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyProfitLossExample example = new TCpyProfitLossExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public TCpyProfitLossExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public TCpyProfitLossExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Integer value1, Integer value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("`year` is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("`year` is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(String value) {
            addCriterion("`year` =", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andYearEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("`year` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(String value) {
            addCriterion("`year` <>", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andYearNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("`year` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(String value) {
            addCriterion("`year` >", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("`year` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(String value) {
            addCriterion("`year` >=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andYearGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("`year` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThan(String value) {
            addCriterion("`year` <", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("`year` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(String value) {
            addCriterion("`year` <=", value, "year");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andYearLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("`year` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYearLike(String value) {
            addCriterion("`year` like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotLike(String value) {
            addCriterion("`year` not like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<String> values) {
            addCriterion("`year` in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<String> values) {
            addCriterion("`year` not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(String value1, String value2) {
            addCriterion("`year` between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(String value1, String value2) {
            addCriterion("`year` not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeIsNull() {
            addCriterion("operating_income is null");
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeIsNotNull() {
            addCriterion("operating_income is not null");
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeEqualTo(BigDecimal value) {
            addCriterion("operating_income =", value, "operatingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeNotEqualTo(BigDecimal value) {
            addCriterion("operating_income <>", value, "operatingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeGreaterThan(BigDecimal value) {
            addCriterion("operating_income >", value, "operatingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("operating_income >=", value, "operatingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeLessThan(BigDecimal value) {
            addCriterion("operating_income <", value, "operatingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("operating_income <=", value, "operatingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeIn(List<BigDecimal> values) {
            addCriterion("operating_income in", values, "operatingIncome");
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeNotIn(List<BigDecimal> values) {
            addCriterion("operating_income not in", values, "operatingIncome");
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("operating_income between", value1, value2, "operatingIncome");
            return (Criteria) this;
        }

        public Criteria andOperatingIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("operating_income not between", value1, value2, "operatingIncome");
            return (Criteria) this;
        }

        public Criteria andOperatingCostIsNull() {
            addCriterion("operating_cost is null");
            return (Criteria) this;
        }

        public Criteria andOperatingCostIsNotNull() {
            addCriterion("operating_cost is not null");
            return (Criteria) this;
        }

        public Criteria andOperatingCostEqualTo(BigDecimal value) {
            addCriterion("operating_cost =", value, "operatingCost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingCostEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_cost = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCostNotEqualTo(BigDecimal value) {
            addCriterion("operating_cost <>", value, "operatingCost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingCostNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_cost <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCostGreaterThan(BigDecimal value) {
            addCriterion("operating_cost >", value, "operatingCost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingCostGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_cost > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCostGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("operating_cost >=", value, "operatingCost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingCostGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_cost >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCostLessThan(BigDecimal value) {
            addCriterion("operating_cost <", value, "operatingCost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingCostLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_cost < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCostLessThanOrEqualTo(BigDecimal value) {
            addCriterion("operating_cost <=", value, "operatingCost");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingCostLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_cost <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingCostIn(List<BigDecimal> values) {
            addCriterion("operating_cost in", values, "operatingCost");
            return (Criteria) this;
        }

        public Criteria andOperatingCostNotIn(List<BigDecimal> values) {
            addCriterion("operating_cost not in", values, "operatingCost");
            return (Criteria) this;
        }

        public Criteria andOperatingCostBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("operating_cost between", value1, value2, "operatingCost");
            return (Criteria) this;
        }

        public Criteria andOperatingCostNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("operating_cost not between", value1, value2, "operatingCost");
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalIsNull() {
            addCriterion("tax_additional is null");
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalIsNotNull() {
            addCriterion("tax_additional is not null");
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalEqualTo(BigDecimal value) {
            addCriterion("tax_additional =", value, "taxAdditional");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxAdditionalEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_additional = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalNotEqualTo(BigDecimal value) {
            addCriterion("tax_additional <>", value, "taxAdditional");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxAdditionalNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_additional <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalGreaterThan(BigDecimal value) {
            addCriterion("tax_additional >", value, "taxAdditional");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxAdditionalGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_additional > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_additional >=", value, "taxAdditional");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxAdditionalGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_additional >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalLessThan(BigDecimal value) {
            addCriterion("tax_additional <", value, "taxAdditional");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxAdditionalLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_additional < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_additional <=", value, "taxAdditional");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxAdditionalLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_additional <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalIn(List<BigDecimal> values) {
            addCriterion("tax_additional in", values, "taxAdditional");
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalNotIn(List<BigDecimal> values) {
            addCriterion("tax_additional not in", values, "taxAdditional");
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_additional between", value1, value2, "taxAdditional");
            return (Criteria) this;
        }

        public Criteria andTaxAdditionalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_additional not between", value1, value2, "taxAdditional");
            return (Criteria) this;
        }

        public Criteria andSalesCostsIsNull() {
            addCriterion("sales_costs is null");
            return (Criteria) this;
        }

        public Criteria andSalesCostsIsNotNull() {
            addCriterion("sales_costs is not null");
            return (Criteria) this;
        }

        public Criteria andSalesCostsEqualTo(BigDecimal value) {
            addCriterion("sales_costs =", value, "salesCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andSalesCostsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("sales_costs = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesCostsNotEqualTo(BigDecimal value) {
            addCriterion("sales_costs <>", value, "salesCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andSalesCostsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("sales_costs <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesCostsGreaterThan(BigDecimal value) {
            addCriterion("sales_costs >", value, "salesCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andSalesCostsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("sales_costs > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesCostsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("sales_costs >=", value, "salesCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andSalesCostsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("sales_costs >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesCostsLessThan(BigDecimal value) {
            addCriterion("sales_costs <", value, "salesCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andSalesCostsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("sales_costs < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesCostsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("sales_costs <=", value, "salesCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andSalesCostsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("sales_costs <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesCostsIn(List<BigDecimal> values) {
            addCriterion("sales_costs in", values, "salesCosts");
            return (Criteria) this;
        }

        public Criteria andSalesCostsNotIn(List<BigDecimal> values) {
            addCriterion("sales_costs not in", values, "salesCosts");
            return (Criteria) this;
        }

        public Criteria andSalesCostsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sales_costs between", value1, value2, "salesCosts");
            return (Criteria) this;
        }

        public Criteria andSalesCostsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sales_costs not between", value1, value2, "salesCosts");
            return (Criteria) this;
        }

        public Criteria andManagementCostsIsNull() {
            addCriterion("management_costs is null");
            return (Criteria) this;
        }

        public Criteria andManagementCostsIsNotNull() {
            addCriterion("management_costs is not null");
            return (Criteria) this;
        }

        public Criteria andManagementCostsEqualTo(BigDecimal value) {
            addCriterion("management_costs =", value, "managementCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andManagementCostsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("management_costs = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementCostsNotEqualTo(BigDecimal value) {
            addCriterion("management_costs <>", value, "managementCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andManagementCostsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("management_costs <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementCostsGreaterThan(BigDecimal value) {
            addCriterion("management_costs >", value, "managementCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andManagementCostsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("management_costs > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementCostsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("management_costs >=", value, "managementCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andManagementCostsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("management_costs >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementCostsLessThan(BigDecimal value) {
            addCriterion("management_costs <", value, "managementCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andManagementCostsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("management_costs < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementCostsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("management_costs <=", value, "managementCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andManagementCostsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("management_costs <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andManagementCostsIn(List<BigDecimal> values) {
            addCriterion("management_costs in", values, "managementCosts");
            return (Criteria) this;
        }

        public Criteria andManagementCostsNotIn(List<BigDecimal> values) {
            addCriterion("management_costs not in", values, "managementCosts");
            return (Criteria) this;
        }

        public Criteria andManagementCostsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("management_costs between", value1, value2, "managementCosts");
            return (Criteria) this;
        }

        public Criteria andManagementCostsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("management_costs not between", value1, value2, "managementCosts");
            return (Criteria) this;
        }

        public Criteria andResearchCostsIsNull() {
            addCriterion("research_costs is null");
            return (Criteria) this;
        }

        public Criteria andResearchCostsIsNotNull() {
            addCriterion("research_costs is not null");
            return (Criteria) this;
        }

        public Criteria andResearchCostsEqualTo(BigDecimal value) {
            addCriterion("research_costs =", value, "researchCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andResearchCostsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("research_costs = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResearchCostsNotEqualTo(BigDecimal value) {
            addCriterion("research_costs <>", value, "researchCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andResearchCostsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("research_costs <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResearchCostsGreaterThan(BigDecimal value) {
            addCriterion("research_costs >", value, "researchCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andResearchCostsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("research_costs > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResearchCostsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("research_costs >=", value, "researchCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andResearchCostsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("research_costs >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResearchCostsLessThan(BigDecimal value) {
            addCriterion("research_costs <", value, "researchCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andResearchCostsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("research_costs < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResearchCostsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("research_costs <=", value, "researchCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andResearchCostsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("research_costs <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andResearchCostsIn(List<BigDecimal> values) {
            addCriterion("research_costs in", values, "researchCosts");
            return (Criteria) this;
        }

        public Criteria andResearchCostsNotIn(List<BigDecimal> values) {
            addCriterion("research_costs not in", values, "researchCosts");
            return (Criteria) this;
        }

        public Criteria andResearchCostsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("research_costs between", value1, value2, "researchCosts");
            return (Criteria) this;
        }

        public Criteria andResearchCostsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("research_costs not between", value1, value2, "researchCosts");
            return (Criteria) this;
        }

        public Criteria andFinancialCostsIsNull() {
            addCriterion("financial_costs is null");
            return (Criteria) this;
        }

        public Criteria andFinancialCostsIsNotNull() {
            addCriterion("financial_costs is not null");
            return (Criteria) this;
        }

        public Criteria andFinancialCostsEqualTo(BigDecimal value) {
            addCriterion("financial_costs =", value, "financialCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFinancialCostsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("financial_costs = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancialCostsNotEqualTo(BigDecimal value) {
            addCriterion("financial_costs <>", value, "financialCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFinancialCostsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("financial_costs <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancialCostsGreaterThan(BigDecimal value) {
            addCriterion("financial_costs >", value, "financialCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFinancialCostsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("financial_costs > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancialCostsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("financial_costs >=", value, "financialCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFinancialCostsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("financial_costs >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancialCostsLessThan(BigDecimal value) {
            addCriterion("financial_costs <", value, "financialCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFinancialCostsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("financial_costs < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancialCostsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("financial_costs <=", value, "financialCosts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFinancialCostsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("financial_costs <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFinancialCostsIn(List<BigDecimal> values) {
            addCriterion("financial_costs in", values, "financialCosts");
            return (Criteria) this;
        }

        public Criteria andFinancialCostsNotIn(List<BigDecimal> values) {
            addCriterion("financial_costs not in", values, "financialCosts");
            return (Criteria) this;
        }

        public Criteria andFinancialCostsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financial_costs between", value1, value2, "financialCosts");
            return (Criteria) this;
        }

        public Criteria andFinancialCostsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("financial_costs not between", value1, value2, "financialCosts");
            return (Criteria) this;
        }

        public Criteria andCapitalChargesIsNull() {
            addCriterion("capital_charges is null");
            return (Criteria) this;
        }

        public Criteria andCapitalChargesIsNotNull() {
            addCriterion("capital_charges is not null");
            return (Criteria) this;
        }

        public Criteria andCapitalChargesEqualTo(BigDecimal value) {
            addCriterion("capital_charges =", value, "capitalCharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCapitalChargesEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("capital_charges = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalChargesNotEqualTo(BigDecimal value) {
            addCriterion("capital_charges <>", value, "capitalCharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCapitalChargesNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("capital_charges <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalChargesGreaterThan(BigDecimal value) {
            addCriterion("capital_charges >", value, "capitalCharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCapitalChargesGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("capital_charges > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalChargesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("capital_charges >=", value, "capitalCharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCapitalChargesGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("capital_charges >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalChargesLessThan(BigDecimal value) {
            addCriterion("capital_charges <", value, "capitalCharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCapitalChargesLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("capital_charges < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalChargesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("capital_charges <=", value, "capitalCharges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCapitalChargesLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("capital_charges <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCapitalChargesIn(List<BigDecimal> values) {
            addCriterion("capital_charges in", values, "capitalCharges");
            return (Criteria) this;
        }

        public Criteria andCapitalChargesNotIn(List<BigDecimal> values) {
            addCriterion("capital_charges not in", values, "capitalCharges");
            return (Criteria) this;
        }

        public Criteria andCapitalChargesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("capital_charges between", value1, value2, "capitalCharges");
            return (Criteria) this;
        }

        public Criteria andCapitalChargesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("capital_charges not between", value1, value2, "capitalCharges");
            return (Criteria) this;
        }

        public Criteria andInterestRevenueIsNull() {
            addCriterion("interest_revenue is null");
            return (Criteria) this;
        }

        public Criteria andInterestRevenueIsNotNull() {
            addCriterion("interest_revenue is not null");
            return (Criteria) this;
        }

        public Criteria andInterestRevenueEqualTo(BigDecimal value) {
            addCriterion("interest_revenue =", value, "interestRevenue");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInterestRevenueEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("interest_revenue = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestRevenueNotEqualTo(BigDecimal value) {
            addCriterion("interest_revenue <>", value, "interestRevenue");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInterestRevenueNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("interest_revenue <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestRevenueGreaterThan(BigDecimal value) {
            addCriterion("interest_revenue >", value, "interestRevenue");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInterestRevenueGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("interest_revenue > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestRevenueGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("interest_revenue >=", value, "interestRevenue");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInterestRevenueGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("interest_revenue >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestRevenueLessThan(BigDecimal value) {
            addCriterion("interest_revenue <", value, "interestRevenue");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInterestRevenueLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("interest_revenue < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestRevenueLessThanOrEqualTo(BigDecimal value) {
            addCriterion("interest_revenue <=", value, "interestRevenue");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInterestRevenueLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("interest_revenue <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInterestRevenueIn(List<BigDecimal> values) {
            addCriterion("interest_revenue in", values, "interestRevenue");
            return (Criteria) this;
        }

        public Criteria andInterestRevenueNotIn(List<BigDecimal> values) {
            addCriterion("interest_revenue not in", values, "interestRevenue");
            return (Criteria) this;
        }

        public Criteria andInterestRevenueBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("interest_revenue between", value1, value2, "interestRevenue");
            return (Criteria) this;
        }

        public Criteria andInterestRevenueNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("interest_revenue not between", value1, value2, "interestRevenue");
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesIsNull() {
            addCriterion("asset_impairment_losses is null");
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesIsNotNull() {
            addCriterion("asset_impairment_losses is not null");
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesEqualTo(BigDecimal value) {
            addCriterion("asset_impairment_losses =", value, "assetImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetImpairmentLossesEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("asset_impairment_losses = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesNotEqualTo(BigDecimal value) {
            addCriterion("asset_impairment_losses <>", value, "assetImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetImpairmentLossesNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("asset_impairment_losses <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesGreaterThan(BigDecimal value) {
            addCriterion("asset_impairment_losses >", value, "assetImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetImpairmentLossesGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("asset_impairment_losses > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("asset_impairment_losses >=", value, "assetImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetImpairmentLossesGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("asset_impairment_losses >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesLessThan(BigDecimal value) {
            addCriterion("asset_impairment_losses <", value, "assetImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetImpairmentLossesLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("asset_impairment_losses < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("asset_impairment_losses <=", value, "assetImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetImpairmentLossesLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("asset_impairment_losses <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesIn(List<BigDecimal> values) {
            addCriterion("asset_impairment_losses in", values, "assetImpairmentLosses");
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesNotIn(List<BigDecimal> values) {
            addCriterion("asset_impairment_losses not in", values, "assetImpairmentLosses");
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("asset_impairment_losses between", value1, value2, "assetImpairmentLosses");
            return (Criteria) this;
        }

        public Criteria andAssetImpairmentLossesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("asset_impairment_losses not between", value1, value2, "assetImpairmentLosses");
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesIsNull() {
            addCriterion("credit_impairment_losses is null");
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesIsNotNull() {
            addCriterion("credit_impairment_losses is not null");
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesEqualTo(BigDecimal value) {
            addCriterion("credit_impairment_losses =", value, "creditImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditImpairmentLossesEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_impairment_losses = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesNotEqualTo(BigDecimal value) {
            addCriterion("credit_impairment_losses <>", value, "creditImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditImpairmentLossesNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_impairment_losses <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesGreaterThan(BigDecimal value) {
            addCriterion("credit_impairment_losses >", value, "creditImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditImpairmentLossesGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_impairment_losses > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("credit_impairment_losses >=", value, "creditImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditImpairmentLossesGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_impairment_losses >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesLessThan(BigDecimal value) {
            addCriterion("credit_impairment_losses <", value, "creditImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditImpairmentLossesLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_impairment_losses < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("credit_impairment_losses <=", value, "creditImpairmentLosses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditImpairmentLossesLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_impairment_losses <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesIn(List<BigDecimal> values) {
            addCriterion("credit_impairment_losses in", values, "creditImpairmentLosses");
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesNotIn(List<BigDecimal> values) {
            addCriterion("credit_impairment_losses not in", values, "creditImpairmentLosses");
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("credit_impairment_losses between", value1, value2, "creditImpairmentLosses");
            return (Criteria) this;
        }

        public Criteria andCreditImpairmentLossesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("credit_impairment_losses not between", value1, value2, "creditImpairmentLosses");
            return (Criteria) this;
        }

        public Criteria andOtherIncomeIsNull() {
            addCriterion("other_income is null");
            return (Criteria) this;
        }

        public Criteria andOtherIncomeIsNotNull() {
            addCriterion("other_income is not null");
            return (Criteria) this;
        }

        public Criteria andOtherIncomeEqualTo(BigDecimal value) {
            addCriterion("other_income =", value, "otherIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherIncomeNotEqualTo(BigDecimal value) {
            addCriterion("other_income <>", value, "otherIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherIncomeGreaterThan(BigDecimal value) {
            addCriterion("other_income >", value, "otherIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_income >=", value, "otherIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherIncomeLessThan(BigDecimal value) {
            addCriterion("other_income <", value, "otherIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_income <=", value, "otherIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherIncomeIn(List<BigDecimal> values) {
            addCriterion("other_income in", values, "otherIncome");
            return (Criteria) this;
        }

        public Criteria andOtherIncomeNotIn(List<BigDecimal> values) {
            addCriterion("other_income not in", values, "otherIncome");
            return (Criteria) this;
        }

        public Criteria andOtherIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_income between", value1, value2, "otherIncome");
            return (Criteria) this;
        }

        public Criteria andOtherIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_income not between", value1, value2, "otherIncome");
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeIsNull() {
            addCriterion("investment_income is null");
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeIsNotNull() {
            addCriterion("investment_income is not null");
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeEqualTo(BigDecimal value) {
            addCriterion("investment_income =", value, "investmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInvestmentIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("investment_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeNotEqualTo(BigDecimal value) {
            addCriterion("investment_income <>", value, "investmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInvestmentIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("investment_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeGreaterThan(BigDecimal value) {
            addCriterion("investment_income >", value, "investmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInvestmentIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("investment_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_income >=", value, "investmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInvestmentIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("investment_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeLessThan(BigDecimal value) {
            addCriterion("investment_income <", value, "investmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInvestmentIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("investment_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("investment_income <=", value, "investmentIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInvestmentIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("investment_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeIn(List<BigDecimal> values) {
            addCriterion("investment_income in", values, "investmentIncome");
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeNotIn(List<BigDecimal> values) {
            addCriterion("investment_income not in", values, "investmentIncome");
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_income between", value1, value2, "investmentIncome");
            return (Criteria) this;
        }

        public Criteria andInvestmentIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("investment_income not between", value1, value2, "investmentIncome");
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentIsNull() {
            addCriterion("joint_ventures_investment is null");
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentIsNotNull() {
            addCriterion("joint_ventures_investment is not null");
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentEqualTo(BigDecimal value) {
            addCriterion("joint_ventures_investment =", value, "jointVenturesInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andJointVenturesInvestmentEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("joint_ventures_investment = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentNotEqualTo(BigDecimal value) {
            addCriterion("joint_ventures_investment <>", value, "jointVenturesInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andJointVenturesInvestmentNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("joint_ventures_investment <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentGreaterThan(BigDecimal value) {
            addCriterion("joint_ventures_investment >", value, "jointVenturesInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andJointVenturesInvestmentGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("joint_ventures_investment > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("joint_ventures_investment >=", value, "jointVenturesInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andJointVenturesInvestmentGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("joint_ventures_investment >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentLessThan(BigDecimal value) {
            addCriterion("joint_ventures_investment <", value, "jointVenturesInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andJointVenturesInvestmentLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("joint_ventures_investment < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("joint_ventures_investment <=", value, "jointVenturesInvestment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andJointVenturesInvestmentLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("joint_ventures_investment <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentIn(List<BigDecimal> values) {
            addCriterion("joint_ventures_investment in", values, "jointVenturesInvestment");
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentNotIn(List<BigDecimal> values) {
            addCriterion("joint_ventures_investment not in", values, "jointVenturesInvestment");
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("joint_ventures_investment between", value1, value2, "jointVenturesInvestment");
            return (Criteria) this;
        }

        public Criteria andJointVenturesInvestmentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("joint_ventures_investment not between", value1, value2, "jointVenturesInvestment");
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeIsNull() {
            addCriterion("net_exposure_hedging_income is null");
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeIsNotNull() {
            addCriterion("net_exposure_hedging_income is not null");
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeEqualTo(BigDecimal value) {
            addCriterion("net_exposure_hedging_income =", value, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetExposureHedgingIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_exposure_hedging_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeNotEqualTo(BigDecimal value) {
            addCriterion("net_exposure_hedging_income <>", value, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetExposureHedgingIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_exposure_hedging_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeGreaterThan(BigDecimal value) {
            addCriterion("net_exposure_hedging_income >", value, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetExposureHedgingIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_exposure_hedging_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("net_exposure_hedging_income >=", value, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetExposureHedgingIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_exposure_hedging_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeLessThan(BigDecimal value) {
            addCriterion("net_exposure_hedging_income <", value, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetExposureHedgingIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_exposure_hedging_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("net_exposure_hedging_income <=", value, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetExposureHedgingIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_exposure_hedging_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeIn(List<BigDecimal> values) {
            addCriterion("net_exposure_hedging_income in", values, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeNotIn(List<BigDecimal> values) {
            addCriterion("net_exposure_hedging_income not in", values, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_exposure_hedging_income between", value1, value2, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        public Criteria andNetExposureHedgingIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_exposure_hedging_income not between", value1, value2, "netExposureHedgingIncome");
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsIsNull() {
            addCriterion("fairvalue_changegains is null");
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsIsNotNull() {
            addCriterion("fairvalue_changegains is not null");
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsEqualTo(BigDecimal value) {
            addCriterion("fairvalue_changegains =", value, "fairvalueChangegains");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFairvalueChangegainsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("fairvalue_changegains = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsNotEqualTo(BigDecimal value) {
            addCriterion("fairvalue_changegains <>", value, "fairvalueChangegains");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFairvalueChangegainsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("fairvalue_changegains <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsGreaterThan(BigDecimal value) {
            addCriterion("fairvalue_changegains >", value, "fairvalueChangegains");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFairvalueChangegainsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("fairvalue_changegains > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("fairvalue_changegains >=", value, "fairvalueChangegains");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFairvalueChangegainsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("fairvalue_changegains >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsLessThan(BigDecimal value) {
            addCriterion("fairvalue_changegains <", value, "fairvalueChangegains");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFairvalueChangegainsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("fairvalue_changegains < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("fairvalue_changegains <=", value, "fairvalueChangegains");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andFairvalueChangegainsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("fairvalue_changegains <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsIn(List<BigDecimal> values) {
            addCriterion("fairvalue_changegains in", values, "fairvalueChangegains");
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsNotIn(List<BigDecimal> values) {
            addCriterion("fairvalue_changegains not in", values, "fairvalueChangegains");
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fairvalue_changegains between", value1, value2, "fairvalueChangegains");
            return (Criteria) this;
        }

        public Criteria andFairvalueChangegainsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fairvalue_changegains not between", value1, value2, "fairvalueChangegains");
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeIsNull() {
            addCriterion("assets_disposal_income is null");
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeIsNotNull() {
            addCriterion("assets_disposal_income is not null");
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeEqualTo(BigDecimal value) {
            addCriterion("assets_disposal_income =", value, "assetsDisposalIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetsDisposalIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("assets_disposal_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeNotEqualTo(BigDecimal value) {
            addCriterion("assets_disposal_income <>", value, "assetsDisposalIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetsDisposalIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("assets_disposal_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeGreaterThan(BigDecimal value) {
            addCriterion("assets_disposal_income >", value, "assetsDisposalIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetsDisposalIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("assets_disposal_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("assets_disposal_income >=", value, "assetsDisposalIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetsDisposalIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("assets_disposal_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeLessThan(BigDecimal value) {
            addCriterion("assets_disposal_income <", value, "assetsDisposalIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetsDisposalIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("assets_disposal_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("assets_disposal_income <=", value, "assetsDisposalIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andAssetsDisposalIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("assets_disposal_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeIn(List<BigDecimal> values) {
            addCriterion("assets_disposal_income in", values, "assetsDisposalIncome");
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeNotIn(List<BigDecimal> values) {
            addCriterion("assets_disposal_income not in", values, "assetsDisposalIncome");
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("assets_disposal_income between", value1, value2, "assetsDisposalIncome");
            return (Criteria) this;
        }

        public Criteria andAssetsDisposalIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("assets_disposal_income not between", value1, value2, "assetsDisposalIncome");
            return (Criteria) this;
        }

        public Criteria andOperatingProfitIsNull() {
            addCriterion("operating_profit is null");
            return (Criteria) this;
        }

        public Criteria andOperatingProfitIsNotNull() {
            addCriterion("operating_profit is not null");
            return (Criteria) this;
        }

        public Criteria andOperatingProfitEqualTo(BigDecimal value) {
            addCriterion("operating_profit =", value, "operatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingProfitEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_profit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingProfitNotEqualTo(BigDecimal value) {
            addCriterion("operating_profit <>", value, "operatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingProfitNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_profit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingProfitGreaterThan(BigDecimal value) {
            addCriterion("operating_profit >", value, "operatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingProfitGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_profit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingProfitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("operating_profit >=", value, "operatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingProfitGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_profit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingProfitLessThan(BigDecimal value) {
            addCriterion("operating_profit <", value, "operatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingProfitLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_profit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingProfitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("operating_profit <=", value, "operatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOperatingProfitLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("operating_profit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatingProfitIn(List<BigDecimal> values) {
            addCriterion("operating_profit in", values, "operatingProfit");
            return (Criteria) this;
        }

        public Criteria andOperatingProfitNotIn(List<BigDecimal> values) {
            addCriterion("operating_profit not in", values, "operatingProfit");
            return (Criteria) this;
        }

        public Criteria andOperatingProfitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("operating_profit between", value1, value2, "operatingProfit");
            return (Criteria) this;
        }

        public Criteria andOperatingProfitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("operating_profit not between", value1, value2, "operatingProfit");
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitIsNull() {
            addCriterion("offBusiness_profit is null");
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitIsNotNull() {
            addCriterion("offBusiness_profit is not null");
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitEqualTo(BigDecimal value) {
            addCriterion("offBusiness_profit =", value, "offbusinessProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOffbusinessProfitEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("offBusiness_profit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitNotEqualTo(BigDecimal value) {
            addCriterion("offBusiness_profit <>", value, "offbusinessProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOffbusinessProfitNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("offBusiness_profit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitGreaterThan(BigDecimal value) {
            addCriterion("offBusiness_profit >", value, "offbusinessProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOffbusinessProfitGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("offBusiness_profit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("offBusiness_profit >=", value, "offbusinessProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOffbusinessProfitGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("offBusiness_profit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitLessThan(BigDecimal value) {
            addCriterion("offBusiness_profit <", value, "offbusinessProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOffbusinessProfitLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("offBusiness_profit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("offBusiness_profit <=", value, "offbusinessProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOffbusinessProfitLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("offBusiness_profit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitIn(List<BigDecimal> values) {
            addCriterion("offBusiness_profit in", values, "offbusinessProfit");
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitNotIn(List<BigDecimal> values) {
            addCriterion("offBusiness_profit not in", values, "offbusinessProfit");
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("offBusiness_profit between", value1, value2, "offbusinessProfit");
            return (Criteria) this;
        }

        public Criteria andOffbusinessProfitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("offBusiness_profit not between", value1, value2, "offbusinessProfit");
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesIsNull() {
            addCriterion("non_operating_expenses is null");
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesIsNotNull() {
            addCriterion("non_operating_expenses is not null");
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesEqualTo(BigDecimal value) {
            addCriterion("non_operating_expenses =", value, "nonOperatingExpenses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNonOperatingExpensesEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("non_operating_expenses = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesNotEqualTo(BigDecimal value) {
            addCriterion("non_operating_expenses <>", value, "nonOperatingExpenses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNonOperatingExpensesNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("non_operating_expenses <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesGreaterThan(BigDecimal value) {
            addCriterion("non_operating_expenses >", value, "nonOperatingExpenses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNonOperatingExpensesGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("non_operating_expenses > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("non_operating_expenses >=", value, "nonOperatingExpenses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNonOperatingExpensesGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("non_operating_expenses >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesLessThan(BigDecimal value) {
            addCriterion("non_operating_expenses <", value, "nonOperatingExpenses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNonOperatingExpensesLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("non_operating_expenses < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("non_operating_expenses <=", value, "nonOperatingExpenses");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNonOperatingExpensesLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("non_operating_expenses <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesIn(List<BigDecimal> values) {
            addCriterion("non_operating_expenses in", values, "nonOperatingExpenses");
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesNotIn(List<BigDecimal> values) {
            addCriterion("non_operating_expenses not in", values, "nonOperatingExpenses");
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("non_operating_expenses between", value1, value2, "nonOperatingExpenses");
            return (Criteria) this;
        }

        public Criteria andNonOperatingExpensesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("non_operating_expenses not between", value1, value2, "nonOperatingExpenses");
            return (Criteria) this;
        }

        public Criteria andTotalProfitIsNull() {
            addCriterion("total_profit is null");
            return (Criteria) this;
        }

        public Criteria andTotalProfitIsNotNull() {
            addCriterion("total_profit is not null");
            return (Criteria) this;
        }

        public Criteria andTotalProfitEqualTo(BigDecimal value) {
            addCriterion("total_profit =", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_profit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitNotEqualTo(BigDecimal value) {
            addCriterion("total_profit <>", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_profit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitGreaterThan(BigDecimal value) {
            addCriterion("total_profit >", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_profit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_profit >=", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_profit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitLessThan(BigDecimal value) {
            addCriterion("total_profit <", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_profit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_profit <=", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_profit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitIn(List<BigDecimal> values) {
            addCriterion("total_profit in", values, "totalProfit");
            return (Criteria) this;
        }

        public Criteria andTotalProfitNotIn(List<BigDecimal> values) {
            addCriterion("total_profit not in", values, "totalProfit");
            return (Criteria) this;
        }

        public Criteria andTotalProfitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_profit between", value1, value2, "totalProfit");
            return (Criteria) this;
        }

        public Criteria andTotalProfitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_profit not between", value1, value2, "totalProfit");
            return (Criteria) this;
        }

        public Criteria andTaxFeesIsNull() {
            addCriterion("tax_fees is null");
            return (Criteria) this;
        }

        public Criteria andTaxFeesIsNotNull() {
            addCriterion("tax_fees is not null");
            return (Criteria) this;
        }

        public Criteria andTaxFeesEqualTo(BigDecimal value) {
            addCriterion("tax_fees =", value, "taxFees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxFeesEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_fees = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxFeesNotEqualTo(BigDecimal value) {
            addCriterion("tax_fees <>", value, "taxFees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxFeesNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_fees <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxFeesGreaterThan(BigDecimal value) {
            addCriterion("tax_fees >", value, "taxFees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxFeesGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_fees > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxFeesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_fees >=", value, "taxFees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxFeesGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_fees >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxFeesLessThan(BigDecimal value) {
            addCriterion("tax_fees <", value, "taxFees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxFeesLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_fees < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxFeesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("tax_fees <=", value, "taxFees");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTaxFeesLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("tax_fees <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaxFeesIn(List<BigDecimal> values) {
            addCriterion("tax_fees in", values, "taxFees");
            return (Criteria) this;
        }

        public Criteria andTaxFeesNotIn(List<BigDecimal> values) {
            addCriterion("tax_fees not in", values, "taxFees");
            return (Criteria) this;
        }

        public Criteria andTaxFeesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_fees between", value1, value2, "taxFees");
            return (Criteria) this;
        }

        public Criteria andTaxFeesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("tax_fees not between", value1, value2, "taxFees");
            return (Criteria) this;
        }

        public Criteria andNetProfitIsNull() {
            addCriterion("net_profit is null");
            return (Criteria) this;
        }

        public Criteria andNetProfitIsNotNull() {
            addCriterion("net_profit is not null");
            return (Criteria) this;
        }

        public Criteria andNetProfitEqualTo(BigDecimal value) {
            addCriterion("net_profit =", value, "netProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetProfitEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_profit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetProfitNotEqualTo(BigDecimal value) {
            addCriterion("net_profit <>", value, "netProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetProfitNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_profit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetProfitGreaterThan(BigDecimal value) {
            addCriterion("net_profit >", value, "netProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetProfitGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_profit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetProfitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("net_profit >=", value, "netProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetProfitGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_profit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetProfitLessThan(BigDecimal value) {
            addCriterion("net_profit <", value, "netProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetProfitLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_profit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetProfitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("net_profit <=", value, "netProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetProfitLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_profit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetProfitIn(List<BigDecimal> values) {
            addCriterion("net_profit in", values, "netProfit");
            return (Criteria) this;
        }

        public Criteria andNetProfitNotIn(List<BigDecimal> values) {
            addCriterion("net_profit not in", values, "netProfit");
            return (Criteria) this;
        }

        public Criteria andNetProfitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_profit between", value1, value2, "netProfit");
            return (Criteria) this;
        }

        public Criteria andNetProfitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_profit not between", value1, value2, "netProfit");
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitIsNull() {
            addCriterion("net_continuing_operating_profit is null");
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitIsNotNull() {
            addCriterion("net_continuing_operating_profit is not null");
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitEqualTo(BigDecimal value) {
            addCriterion("net_continuing_operating_profit =", value, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetContinuingOperatingProfitEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_continuing_operating_profit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitNotEqualTo(BigDecimal value) {
            addCriterion("net_continuing_operating_profit <>", value, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetContinuingOperatingProfitNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_continuing_operating_profit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitGreaterThan(BigDecimal value) {
            addCriterion("net_continuing_operating_profit >", value, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetContinuingOperatingProfitGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_continuing_operating_profit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("net_continuing_operating_profit >=", value, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetContinuingOperatingProfitGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_continuing_operating_profit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitLessThan(BigDecimal value) {
            addCriterion("net_continuing_operating_profit <", value, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetContinuingOperatingProfitLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_continuing_operating_profit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("net_continuing_operating_profit <=", value, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetContinuingOperatingProfitLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_continuing_operating_profit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitIn(List<BigDecimal> values) {
            addCriterion("net_continuing_operating_profit in", values, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitNotIn(List<BigDecimal> values) {
            addCriterion("net_continuing_operating_profit not in", values, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_continuing_operating_profit between", value1, value2, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        public Criteria andNetContinuingOperatingProfitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_continuing_operating_profit not between", value1, value2, "netContinuingOperatingProfit");
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitIsNull() {
            addCriterion("net_termination_operating_profit is null");
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitIsNotNull() {
            addCriterion("net_termination_operating_profit is not null");
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitEqualTo(BigDecimal value) {
            addCriterion("net_termination_operating_profit =", value, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetTerminationOperatingProfitEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_termination_operating_profit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitNotEqualTo(BigDecimal value) {
            addCriterion("net_termination_operating_profit <>", value, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetTerminationOperatingProfitNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_termination_operating_profit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitGreaterThan(BigDecimal value) {
            addCriterion("net_termination_operating_profit >", value, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetTerminationOperatingProfitGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_termination_operating_profit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("net_termination_operating_profit >=", value, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetTerminationOperatingProfitGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_termination_operating_profit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitLessThan(BigDecimal value) {
            addCriterion("net_termination_operating_profit <", value, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetTerminationOperatingProfitLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_termination_operating_profit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("net_termination_operating_profit <=", value, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andNetTerminationOperatingProfitLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("net_termination_operating_profit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitIn(List<BigDecimal> values) {
            addCriterion("net_termination_operating_profit in", values, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitNotIn(List<BigDecimal> values) {
            addCriterion("net_termination_operating_profit not in", values, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_termination_operating_profit between", value1, value2, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        public Criteria andNetTerminationOperatingProfitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_termination_operating_profit not between", value1, value2, "netTerminationOperatingProfit");
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsIsNull() {
            addCriterion("other_after_tax_earnings is null");
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsIsNotNull() {
            addCriterion("other_after_tax_earnings is not null");
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsEqualTo(BigDecimal value) {
            addCriterion("other_after_tax_earnings =", value, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherAfterTaxEarningsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_after_tax_earnings = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsNotEqualTo(BigDecimal value) {
            addCriterion("other_after_tax_earnings <>", value, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherAfterTaxEarningsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_after_tax_earnings <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsGreaterThan(BigDecimal value) {
            addCriterion("other_after_tax_earnings >", value, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherAfterTaxEarningsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_after_tax_earnings > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_after_tax_earnings >=", value, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherAfterTaxEarningsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_after_tax_earnings >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsLessThan(BigDecimal value) {
            addCriterion("other_after_tax_earnings <", value, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherAfterTaxEarningsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_after_tax_earnings < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_after_tax_earnings <=", value, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherAfterTaxEarningsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_after_tax_earnings <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsIn(List<BigDecimal> values) {
            addCriterion("other_after_tax_earnings in", values, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsNotIn(List<BigDecimal> values) {
            addCriterion("other_after_tax_earnings not in", values, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_after_tax_earnings between", value1, value2, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        public Criteria andOtherAfterTaxEarningsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_after_tax_earnings not between", value1, value2, "otherAfterTaxEarnings");
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeIsNull() {
            addCriterion("other_non_reclassified_income is null");
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeIsNotNull() {
            addCriterion("other_non_reclassified_income is not null");
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeEqualTo(BigDecimal value) {
            addCriterion("other_non_reclassified_income =", value, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonReclassifiedIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_reclassified_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeNotEqualTo(BigDecimal value) {
            addCriterion("other_non_reclassified_income <>", value, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonReclassifiedIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_reclassified_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeGreaterThan(BigDecimal value) {
            addCriterion("other_non_reclassified_income >", value, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonReclassifiedIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_reclassified_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_reclassified_income >=", value, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonReclassifiedIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_reclassified_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeLessThan(BigDecimal value) {
            addCriterion("other_non_reclassified_income <", value, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonReclassifiedIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_reclassified_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_reclassified_income <=", value, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonReclassifiedIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_reclassified_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeIn(List<BigDecimal> values) {
            addCriterion("other_non_reclassified_income in", values, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeNotIn(List<BigDecimal> values) {
            addCriterion("other_non_reclassified_income not in", values, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_reclassified_income between", value1, value2, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherNonReclassifiedIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_reclassified_income not between", value1, value2, "otherNonReclassifiedIncome");
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesIsNull() {
            addCriterion("recalculating_changes is null");
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesIsNotNull() {
            addCriterion("recalculating_changes is not null");
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesEqualTo(BigDecimal value) {
            addCriterion("recalculating_changes =", value, "recalculatingChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andRecalculatingChangesEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("recalculating_changes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesNotEqualTo(BigDecimal value) {
            addCriterion("recalculating_changes <>", value, "recalculatingChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andRecalculatingChangesNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("recalculating_changes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesGreaterThan(BigDecimal value) {
            addCriterion("recalculating_changes >", value, "recalculatingChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andRecalculatingChangesGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("recalculating_changes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("recalculating_changes >=", value, "recalculatingChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andRecalculatingChangesGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("recalculating_changes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesLessThan(BigDecimal value) {
            addCriterion("recalculating_changes <", value, "recalculatingChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andRecalculatingChangesLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("recalculating_changes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("recalculating_changes <=", value, "recalculatingChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andRecalculatingChangesLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("recalculating_changes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesIn(List<BigDecimal> values) {
            addCriterion("recalculating_changes in", values, "recalculatingChanges");
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesNotIn(List<BigDecimal> values) {
            addCriterion("recalculating_changes not in", values, "recalculatingChanges");
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("recalculating_changes between", value1, value2, "recalculatingChanges");
            return (Criteria) this;
        }

        public Criteria andRecalculatingChangesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("recalculating_changes not between", value1, value2, "recalculatingChanges");
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2IsNull() {
            addCriterion("other_non_converted_income2 is null");
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2IsNotNull() {
            addCriterion("other_non_converted_income2 is not null");
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2EqualTo(BigDecimal value) {
            addCriterion("other_non_converted_income2 =", value, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonConvertedIncome2EqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_converted_income2 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2NotEqualTo(BigDecimal value) {
            addCriterion("other_non_converted_income2 <>", value, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonConvertedIncome2NotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_converted_income2 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2GreaterThan(BigDecimal value) {
            addCriterion("other_non_converted_income2 >", value, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonConvertedIncome2GreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_converted_income2 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2GreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_converted_income2 >=", value, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonConvertedIncome2GreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_converted_income2 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2LessThan(BigDecimal value) {
            addCriterion("other_non_converted_income2 <", value, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonConvertedIncome2LessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_converted_income2 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2LessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_non_converted_income2 <=", value, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherNonConvertedIncome2LessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_non_converted_income2 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2In(List<BigDecimal> values) {
            addCriterion("other_non_converted_income2 in", values, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2NotIn(List<BigDecimal> values) {
            addCriterion("other_non_converted_income2 not in", values, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2Between(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_converted_income2 between", value1, value2, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        public Criteria andOtherNonConvertedIncome2NotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_non_converted_income2 not between", value1, value2, "otherNonConvertedIncome2");
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesIsNull() {
            addCriterion("instruments_value_changes is null");
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesIsNotNull() {
            addCriterion("instruments_value_changes is not null");
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesEqualTo(BigDecimal value) {
            addCriterion("instruments_value_changes =", value, "instrumentsValueChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInstrumentsValueChangesEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("instruments_value_changes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesNotEqualTo(BigDecimal value) {
            addCriterion("instruments_value_changes <>", value, "instrumentsValueChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInstrumentsValueChangesNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("instruments_value_changes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesGreaterThan(BigDecimal value) {
            addCriterion("instruments_value_changes >", value, "instrumentsValueChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInstrumentsValueChangesGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("instruments_value_changes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("instruments_value_changes >=", value, "instrumentsValueChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInstrumentsValueChangesGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("instruments_value_changes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesLessThan(BigDecimal value) {
            addCriterion("instruments_value_changes <", value, "instrumentsValueChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInstrumentsValueChangesLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("instruments_value_changes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("instruments_value_changes <=", value, "instrumentsValueChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andInstrumentsValueChangesLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("instruments_value_changes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesIn(List<BigDecimal> values) {
            addCriterion("instruments_value_changes in", values, "instrumentsValueChanges");
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesNotIn(List<BigDecimal> values) {
            addCriterion("instruments_value_changes not in", values, "instrumentsValueChanges");
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("instruments_value_changes between", value1, value2, "instrumentsValueChanges");
            return (Criteria) this;
        }

        public Criteria andInstrumentsValueChangesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("instruments_value_changes not between", value1, value2, "instrumentsValueChanges");
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesIsNull() {
            addCriterion("credit_risk_changes is null");
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesIsNotNull() {
            addCriterion("credit_risk_changes is not null");
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesEqualTo(BigDecimal value) {
            addCriterion("credit_risk_changes =", value, "creditRiskChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditRiskChangesEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_risk_changes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesNotEqualTo(BigDecimal value) {
            addCriterion("credit_risk_changes <>", value, "creditRiskChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditRiskChangesNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_risk_changes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesGreaterThan(BigDecimal value) {
            addCriterion("credit_risk_changes >", value, "creditRiskChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditRiskChangesGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_risk_changes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("credit_risk_changes >=", value, "creditRiskChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditRiskChangesGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_risk_changes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesLessThan(BigDecimal value) {
            addCriterion("credit_risk_changes <", value, "creditRiskChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditRiskChangesLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_risk_changes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("credit_risk_changes <=", value, "creditRiskChanges");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreditRiskChangesLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("credit_risk_changes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesIn(List<BigDecimal> values) {
            addCriterion("credit_risk_changes in", values, "creditRiskChanges");
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesNotIn(List<BigDecimal> values) {
            addCriterion("credit_risk_changes not in", values, "creditRiskChanges");
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("credit_risk_changes between", value1, value2, "creditRiskChanges");
            return (Criteria) this;
        }

        public Criteria andCreditRiskChangesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("credit_risk_changes not between", value1, value2, "creditRiskChanges");
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeIsNull() {
            addCriterion("other_reclassified_income is null");
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeIsNotNull() {
            addCriterion("other_reclassified_income is not null");
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeEqualTo(BigDecimal value) {
            addCriterion("other_reclassified_income =", value, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherReclassifiedIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_reclassified_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeNotEqualTo(BigDecimal value) {
            addCriterion("other_reclassified_income <>", value, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherReclassifiedIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_reclassified_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeGreaterThan(BigDecimal value) {
            addCriterion("other_reclassified_income >", value, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherReclassifiedIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_reclassified_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_reclassified_income >=", value, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherReclassifiedIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_reclassified_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeLessThan(BigDecimal value) {
            addCriterion("other_reclassified_income <", value, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherReclassifiedIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_reclassified_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_reclassified_income <=", value, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherReclassifiedIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_reclassified_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeIn(List<BigDecimal> values) {
            addCriterion("other_reclassified_income in", values, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeNotIn(List<BigDecimal> values) {
            addCriterion("other_reclassified_income not in", values, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_reclassified_income between", value1, value2, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherReclassifiedIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_reclassified_income not between", value1, value2, "otherReclassifiedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeIsNull() {
            addCriterion("other_converted_income is null");
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeIsNotNull() {
            addCriterion("other_converted_income is not null");
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeEqualTo(BigDecimal value) {
            addCriterion("other_converted_income =", value, "otherConvertedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherConvertedIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_converted_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeNotEqualTo(BigDecimal value) {
            addCriterion("other_converted_income <>", value, "otherConvertedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherConvertedIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_converted_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeGreaterThan(BigDecimal value) {
            addCriterion("other_converted_income >", value, "otherConvertedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherConvertedIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_converted_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_converted_income >=", value, "otherConvertedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherConvertedIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_converted_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeLessThan(BigDecimal value) {
            addCriterion("other_converted_income <", value, "otherConvertedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherConvertedIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_converted_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_converted_income <=", value, "otherConvertedIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherConvertedIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_converted_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeIn(List<BigDecimal> values) {
            addCriterion("other_converted_income in", values, "otherConvertedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeNotIn(List<BigDecimal> values) {
            addCriterion("other_converted_income not in", values, "otherConvertedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_converted_income between", value1, value2, "otherConvertedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherConvertedIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_converted_income not between", value1, value2, "otherConvertedIncome");
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionIsNull() {
            addCriterion("other_credit_impairment_provision is null");
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionIsNotNull() {
            addCriterion("other_credit_impairment_provision is not null");
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionEqualTo(BigDecimal value) {
            addCriterion("other_credit_impairment_provision =", value, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherCreditImpairmentProvisionEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_credit_impairment_provision = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionNotEqualTo(BigDecimal value) {
            addCriterion("other_credit_impairment_provision <>", value, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherCreditImpairmentProvisionNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_credit_impairment_provision <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionGreaterThan(BigDecimal value) {
            addCriterion("other_credit_impairment_provision >", value, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherCreditImpairmentProvisionGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_credit_impairment_provision > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_credit_impairment_provision >=", value, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherCreditImpairmentProvisionGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_credit_impairment_provision >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionLessThan(BigDecimal value) {
            addCriterion("other_credit_impairment_provision <", value, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherCreditImpairmentProvisionLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_credit_impairment_provision < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_credit_impairment_provision <=", value, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherCreditImpairmentProvisionLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_credit_impairment_provision <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionIn(List<BigDecimal> values) {
            addCriterion("other_credit_impairment_provision in", values, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionNotIn(List<BigDecimal> values) {
            addCriterion("other_credit_impairment_provision not in", values, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_credit_impairment_provision between", value1, value2, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        public Criteria andOtherCreditImpairmentProvisionNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_credit_impairment_provision not between", value1, value2, "otherCreditImpairmentProvision");
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsIsNull() {
            addCriterion("reclassified_financial_assets is null");
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsIsNotNull() {
            addCriterion("reclassified_financial_assets is not null");
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsEqualTo(BigDecimal value) {
            addCriterion("reclassified_financial_assets =", value, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andReclassifiedFinancialAssetsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("reclassified_financial_assets = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsNotEqualTo(BigDecimal value) {
            addCriterion("reclassified_financial_assets <>", value, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andReclassifiedFinancialAssetsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("reclassified_financial_assets <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsGreaterThan(BigDecimal value) {
            addCriterion("reclassified_financial_assets >", value, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andReclassifiedFinancialAssetsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("reclassified_financial_assets > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("reclassified_financial_assets >=", value, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andReclassifiedFinancialAssetsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("reclassified_financial_assets >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsLessThan(BigDecimal value) {
            addCriterion("reclassified_financial_assets <", value, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andReclassifiedFinancialAssetsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("reclassified_financial_assets < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("reclassified_financial_assets <=", value, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andReclassifiedFinancialAssetsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("reclassified_financial_assets <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsIn(List<BigDecimal> values) {
            addCriterion("reclassified_financial_assets in", values, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsNotIn(List<BigDecimal> values) {
            addCriterion("reclassified_financial_assets not in", values, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reclassified_financial_assets between", value1, value2, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andReclassifiedFinancialAssetsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reclassified_financial_assets not between", value1, value2, "reclassifiedFinancialAssets");
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceIsNull() {
            addCriterion("foreign_currency_translation_difference is null");
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceIsNotNull() {
            addCriterion("foreign_currency_translation_difference is not null");
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceEqualTo(BigDecimal value) {
            addCriterion("foreign_currency_translation_difference =", value, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andForeignCurrencyTranslationDifferenceEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("foreign_currency_translation_difference = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceNotEqualTo(BigDecimal value) {
            addCriterion("foreign_currency_translation_difference <>", value, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andForeignCurrencyTranslationDifferenceNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("foreign_currency_translation_difference <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceGreaterThan(BigDecimal value) {
            addCriterion("foreign_currency_translation_difference >", value, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andForeignCurrencyTranslationDifferenceGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("foreign_currency_translation_difference > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("foreign_currency_translation_difference >=", value, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andForeignCurrencyTranslationDifferenceGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("foreign_currency_translation_difference >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceLessThan(BigDecimal value) {
            addCriterion("foreign_currency_translation_difference <", value, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andForeignCurrencyTranslationDifferenceLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("foreign_currency_translation_difference < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("foreign_currency_translation_difference <=", value, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andForeignCurrencyTranslationDifferenceLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("foreign_currency_translation_difference <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceIn(List<BigDecimal> values) {
            addCriterion("foreign_currency_translation_difference in", values, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceNotIn(List<BigDecimal> values) {
            addCriterion("foreign_currency_translation_difference not in", values, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("foreign_currency_translation_difference between", value1, value2, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        public Criteria andForeignCurrencyTranslationDifferenceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("foreign_currency_translation_difference not between", value1, value2, "foreignCurrencyTranslationDifference");
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveIsNull() {
            addCriterion("cash_flow_hedging_reserve is null");
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveIsNotNull() {
            addCriterion("cash_flow_hedging_reserve is not null");
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveEqualTo(BigDecimal value) {
            addCriterion("cash_flow_hedging_reserve =", value, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCashFlowHedgingReserveEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("cash_flow_hedging_reserve = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveNotEqualTo(BigDecimal value) {
            addCriterion("cash_flow_hedging_reserve <>", value, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCashFlowHedgingReserveNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("cash_flow_hedging_reserve <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveGreaterThan(BigDecimal value) {
            addCriterion("cash_flow_hedging_reserve >", value, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCashFlowHedgingReserveGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("cash_flow_hedging_reserve > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_flow_hedging_reserve >=", value, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCashFlowHedgingReserveGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("cash_flow_hedging_reserve >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveLessThan(BigDecimal value) {
            addCriterion("cash_flow_hedging_reserve <", value, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCashFlowHedgingReserveLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("cash_flow_hedging_reserve < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash_flow_hedging_reserve <=", value, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCashFlowHedgingReserveLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("cash_flow_hedging_reserve <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveIn(List<BigDecimal> values) {
            addCriterion("cash_flow_hedging_reserve in", values, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveNotIn(List<BigDecimal> values) {
            addCriterion("cash_flow_hedging_reserve not in", values, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_flow_hedging_reserve between", value1, value2, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        public Criteria andCashFlowHedgingReserveNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash_flow_hedging_reserve not between", value1, value2, "cashFlowHedgingReserve");
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsIsNull() {
            addCriterion("total_combined_proceeds is null");
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsIsNotNull() {
            addCriterion("total_combined_proceeds is not null");
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsEqualTo(BigDecimal value) {
            addCriterion("total_combined_proceeds =", value, "totalCombinedProceeds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalCombinedProceedsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_combined_proceeds = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsNotEqualTo(BigDecimal value) {
            addCriterion("total_combined_proceeds <>", value, "totalCombinedProceeds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalCombinedProceedsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_combined_proceeds <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsGreaterThan(BigDecimal value) {
            addCriterion("total_combined_proceeds >", value, "totalCombinedProceeds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalCombinedProceedsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_combined_proceeds > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_combined_proceeds >=", value, "totalCombinedProceeds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalCombinedProceedsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_combined_proceeds >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsLessThan(BigDecimal value) {
            addCriterion("total_combined_proceeds <", value, "totalCombinedProceeds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalCombinedProceedsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_combined_proceeds < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_combined_proceeds <=", value, "totalCombinedProceeds");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andTotalCombinedProceedsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("total_combined_proceeds <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsIn(List<BigDecimal> values) {
            addCriterion("total_combined_proceeds in", values, "totalCombinedProceeds");
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsNotIn(List<BigDecimal> values) {
            addCriterion("total_combined_proceeds not in", values, "totalCombinedProceeds");
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_combined_proceeds between", value1, value2, "totalCombinedProceeds");
            return (Criteria) this;
        }

        public Criteria andTotalCombinedProceedsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_combined_proceeds not between", value1, value2, "totalCombinedProceeds");
            return (Criteria) this;
        }

        public Criteria andStockIncomeIsNull() {
            addCriterion("stock_income is null");
            return (Criteria) this;
        }

        public Criteria andStockIncomeIsNotNull() {
            addCriterion("stock_income is not null");
            return (Criteria) this;
        }

        public Criteria andStockIncomeEqualTo(BigDecimal value) {
            addCriterion("stock_income =", value, "stockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andStockIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("stock_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStockIncomeNotEqualTo(BigDecimal value) {
            addCriterion("stock_income <>", value, "stockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andStockIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("stock_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStockIncomeGreaterThan(BigDecimal value) {
            addCriterion("stock_income >", value, "stockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andStockIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("stock_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStockIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("stock_income >=", value, "stockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andStockIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("stock_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStockIncomeLessThan(BigDecimal value) {
            addCriterion("stock_income <", value, "stockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andStockIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("stock_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStockIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("stock_income <=", value, "stockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andStockIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("stock_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStockIncomeIn(List<BigDecimal> values) {
            addCriterion("stock_income in", values, "stockIncome");
            return (Criteria) this;
        }

        public Criteria andStockIncomeNotIn(List<BigDecimal> values) {
            addCriterion("stock_income not in", values, "stockIncome");
            return (Criteria) this;
        }

        public Criteria andStockIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("stock_income between", value1, value2, "stockIncome");
            return (Criteria) this;
        }

        public Criteria andStockIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("stock_income not between", value1, value2, "stockIncome");
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeIsNull() {
            addCriterion("basic_stock_income is null");
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeIsNotNull() {
            addCriterion("basic_stock_income is not null");
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeEqualTo(BigDecimal value) {
            addCriterion("basic_stock_income =", value, "basicStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andBasicStockIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("basic_stock_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeNotEqualTo(BigDecimal value) {
            addCriterion("basic_stock_income <>", value, "basicStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andBasicStockIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("basic_stock_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeGreaterThan(BigDecimal value) {
            addCriterion("basic_stock_income >", value, "basicStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andBasicStockIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("basic_stock_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("basic_stock_income >=", value, "basicStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andBasicStockIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("basic_stock_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeLessThan(BigDecimal value) {
            addCriterion("basic_stock_income <", value, "basicStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andBasicStockIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("basic_stock_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("basic_stock_income <=", value, "basicStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andBasicStockIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("basic_stock_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeIn(List<BigDecimal> values) {
            addCriterion("basic_stock_income in", values, "basicStockIncome");
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeNotIn(List<BigDecimal> values) {
            addCriterion("basic_stock_income not in", values, "basicStockIncome");
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("basic_stock_income between", value1, value2, "basicStockIncome");
            return (Criteria) this;
        }

        public Criteria andBasicStockIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("basic_stock_income not between", value1, value2, "basicStockIncome");
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeIsNull() {
            addCriterion("dilute_stock_income is null");
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeIsNotNull() {
            addCriterion("dilute_stock_income is not null");
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeEqualTo(BigDecimal value) {
            addCriterion("dilute_stock_income =", value, "diluteStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDiluteStockIncomeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("dilute_stock_income = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeNotEqualTo(BigDecimal value) {
            addCriterion("dilute_stock_income <>", value, "diluteStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDiluteStockIncomeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("dilute_stock_income <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeGreaterThan(BigDecimal value) {
            addCriterion("dilute_stock_income >", value, "diluteStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDiluteStockIncomeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("dilute_stock_income > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("dilute_stock_income >=", value, "diluteStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDiluteStockIncomeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("dilute_stock_income >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeLessThan(BigDecimal value) {
            addCriterion("dilute_stock_income <", value, "diluteStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDiluteStockIncomeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("dilute_stock_income < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("dilute_stock_income <=", value, "diluteStockIncome");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDiluteStockIncomeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("dilute_stock_income <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeIn(List<BigDecimal> values) {
            addCriterion("dilute_stock_income in", values, "diluteStockIncome");
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeNotIn(List<BigDecimal> values) {
            addCriterion("dilute_stock_income not in", values, "diluteStockIncome");
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("dilute_stock_income between", value1, value2, "diluteStockIncome");
            return (Criteria) this;
        }

        public Criteria andDiluteStockIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("dilute_stock_income not between", value1, value2, "diluteStockIncome");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsIsNull() {
            addCriterion("other_obligatory_right_investments is null");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsIsNotNull() {
            addCriterion("other_obligatory_right_investments is not null");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsEqualTo(BigDecimal value) {
            addCriterion("other_obligatory_right_investments =", value, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentsEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investments = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsNotEqualTo(BigDecimal value) {
            addCriterion("other_obligatory_right_investments <>", value, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentsNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investments <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsGreaterThan(BigDecimal value) {
            addCriterion("other_obligatory_right_investments >", value, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentsGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investments > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("other_obligatory_right_investments >=", value, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentsGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investments >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsLessThan(BigDecimal value) {
            addCriterion("other_obligatory_right_investments <", value, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentsLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investments < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("other_obligatory_right_investments <=", value, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andOtherObligatoryRightInvestmentsLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("other_obligatory_right_investments <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsIn(List<BigDecimal> values) {
            addCriterion("other_obligatory_right_investments in", values, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsNotIn(List<BigDecimal> values) {
            addCriterion("other_obligatory_right_investments not in", values, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_obligatory_right_investments between", value1, value2, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        public Criteria andOtherObligatoryRightInvestmentsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("other_obligatory_right_investments not between", value1, value2, "otherObligatoryRightInvestments");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyProfitLoss.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        private TCpyProfitLossExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        protected Criteria(TCpyProfitLossExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public TCpyProfitLossExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_profit_loss
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_profit_loss
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_profit_loss
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyProfitLossExample example);
    }
}