package com.huizhi.supplier.db.model;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyYearCheckExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public TCpyYearCheckExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public TCpyYearCheckExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public TCpyYearCheckExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyYearCheckExample example = new TCpyYearCheckExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public TCpyYearCheckExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public TCpyYearCheckExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Integer value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Integer value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Integer value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Integer value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Integer> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Integer> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Integer value1, Integer value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameIsNull() {
            addCriterion("check_items_name is null");
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameIsNotNull() {
            addCriterion("check_items_name is not null");
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameEqualTo(String value) {
            addCriterion("check_items_name =", value, "checkItemsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckItemsNameEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_items_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameNotEqualTo(String value) {
            addCriterion("check_items_name <>", value, "checkItemsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckItemsNameNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_items_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameGreaterThan(String value) {
            addCriterion("check_items_name >", value, "checkItemsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckItemsNameGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_items_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameGreaterThanOrEqualTo(String value) {
            addCriterion("check_items_name >=", value, "checkItemsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckItemsNameGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_items_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameLessThan(String value) {
            addCriterion("check_items_name <", value, "checkItemsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckItemsNameLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_items_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameLessThanOrEqualTo(String value) {
            addCriterion("check_items_name <=", value, "checkItemsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckItemsNameLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_items_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameLike(String value) {
            addCriterion("check_items_name like", value, "checkItemsName");
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameNotLike(String value) {
            addCriterion("check_items_name not like", value, "checkItemsName");
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameIn(List<String> values) {
            addCriterion("check_items_name in", values, "checkItemsName");
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameNotIn(List<String> values) {
            addCriterion("check_items_name not in", values, "checkItemsName");
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameBetween(String value1, String value2) {
            addCriterion("check_items_name between", value1, value2, "checkItemsName");
            return (Criteria) this;
        }

        public Criteria andCheckItemsNameNotBetween(String value1, String value2) {
            addCriterion("check_items_name not between", value1, value2, "checkItemsName");
            return (Criteria) this;
        }

        public Criteria andCheckYearIsNull() {
            addCriterion("check_year is null");
            return (Criteria) this;
        }

        public Criteria andCheckYearIsNotNull() {
            addCriterion("check_year is not null");
            return (Criteria) this;
        }

        public Criteria andCheckYearEqualTo(String value) {
            addCriterion("check_year =", value, "checkYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckYearEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_year = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckYearNotEqualTo(String value) {
            addCriterion("check_year <>", value, "checkYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckYearNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_year <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckYearGreaterThan(String value) {
            addCriterion("check_year >", value, "checkYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckYearGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_year > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckYearGreaterThanOrEqualTo(String value) {
            addCriterion("check_year >=", value, "checkYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckYearGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_year >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckYearLessThan(String value) {
            addCriterion("check_year <", value, "checkYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckYearLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_year < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckYearLessThanOrEqualTo(String value) {
            addCriterion("check_year <=", value, "checkYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckYearLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_year <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckYearLike(String value) {
            addCriterion("check_year like", value, "checkYear");
            return (Criteria) this;
        }

        public Criteria andCheckYearNotLike(String value) {
            addCriterion("check_year not like", value, "checkYear");
            return (Criteria) this;
        }

        public Criteria andCheckYearIn(List<String> values) {
            addCriterion("check_year in", values, "checkYear");
            return (Criteria) this;
        }

        public Criteria andCheckYearNotIn(List<String> values) {
            addCriterion("check_year not in", values, "checkYear");
            return (Criteria) this;
        }

        public Criteria andCheckYearBetween(String value1, String value2) {
            addCriterion("check_year between", value1, value2, "checkYear");
            return (Criteria) this;
        }

        public Criteria andCheckYearNotBetween(String value1, String value2) {
            addCriterion("check_year not between", value1, value2, "checkYear");
            return (Criteria) this;
        }

        public Criteria andCheckResultsIsNull() {
            addCriterion("check_results is null");
            return (Criteria) this;
        }

        public Criteria andCheckResultsIsNotNull() {
            addCriterion("check_results is not null");
            return (Criteria) this;
        }

        public Criteria andCheckResultsEqualTo(String value) {
            addCriterion("check_results =", value, "checkResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckResultsEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_results = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckResultsNotEqualTo(String value) {
            addCriterion("check_results <>", value, "checkResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckResultsNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_results <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckResultsGreaterThan(String value) {
            addCriterion("check_results >", value, "checkResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckResultsGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_results > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckResultsGreaterThanOrEqualTo(String value) {
            addCriterion("check_results >=", value, "checkResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckResultsGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_results >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckResultsLessThan(String value) {
            addCriterion("check_results <", value, "checkResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckResultsLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_results < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckResultsLessThanOrEqualTo(String value) {
            addCriterion("check_results <=", value, "checkResults");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckResultsLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_results <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckResultsLike(String value) {
            addCriterion("check_results like", value, "checkResults");
            return (Criteria) this;
        }

        public Criteria andCheckResultsNotLike(String value) {
            addCriterion("check_results not like", value, "checkResults");
            return (Criteria) this;
        }

        public Criteria andCheckResultsIn(List<String> values) {
            addCriterion("check_results in", values, "checkResults");
            return (Criteria) this;
        }

        public Criteria andCheckResultsNotIn(List<String> values) {
            addCriterion("check_results not in", values, "checkResults");
            return (Criteria) this;
        }

        public Criteria andCheckResultsBetween(String value1, String value2) {
            addCriterion("check_results between", value1, value2, "checkResults");
            return (Criteria) this;
        }

        public Criteria andCheckResultsNotBetween(String value1, String value2) {
            addCriterion("check_results not between", value1, value2, "checkResults");
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameIsNull() {
            addCriterion("check_organ_name is null");
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameIsNotNull() {
            addCriterion("check_organ_name is not null");
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameEqualTo(String value) {
            addCriterion("check_organ_name =", value, "checkOrganName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckOrganNameEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_organ_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameNotEqualTo(String value) {
            addCriterion("check_organ_name <>", value, "checkOrganName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckOrganNameNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_organ_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameGreaterThan(String value) {
            addCriterion("check_organ_name >", value, "checkOrganName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckOrganNameGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_organ_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameGreaterThanOrEqualTo(String value) {
            addCriterion("check_organ_name >=", value, "checkOrganName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckOrganNameGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_organ_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameLessThan(String value) {
            addCriterion("check_organ_name <", value, "checkOrganName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckOrganNameLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_organ_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameLessThanOrEqualTo(String value) {
            addCriterion("check_organ_name <=", value, "checkOrganName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckOrganNameLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_organ_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameLike(String value) {
            addCriterion("check_organ_name like", value, "checkOrganName");
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameNotLike(String value) {
            addCriterion("check_organ_name not like", value, "checkOrganName");
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameIn(List<String> values) {
            addCriterion("check_organ_name in", values, "checkOrganName");
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameNotIn(List<String> values) {
            addCriterion("check_organ_name not in", values, "checkOrganName");
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameBetween(String value1, String value2) {
            addCriterion("check_organ_name between", value1, value2, "checkOrganName");
            return (Criteria) this;
        }

        public Criteria andCheckOrganNameNotBetween(String value1, String value2) {
            addCriterion("check_organ_name not between", value1, value2, "checkOrganName");
            return (Criteria) this;
        }

        public Criteria andCheckDateIsNull() {
            addCriterion("check_date is null");
            return (Criteria) this;
        }

        public Criteria andCheckDateIsNotNull() {
            addCriterion("check_date is not null");
            return (Criteria) this;
        }

        public Criteria andCheckDateEqualTo(LocalDate value) {
            addCriterion("check_date =", value, "checkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckDateEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckDateNotEqualTo(LocalDate value) {
            addCriterion("check_date <>", value, "checkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckDateNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckDateGreaterThan(LocalDate value) {
            addCriterion("check_date >", value, "checkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckDateGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("check_date >=", value, "checkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckDateGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckDateLessThan(LocalDate value) {
            addCriterion("check_date <", value, "checkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckDateLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("check_date <=", value, "checkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCheckDateLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("check_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCheckDateIn(List<LocalDate> values) {
            addCriterion("check_date in", values, "checkDate");
            return (Criteria) this;
        }

        public Criteria andCheckDateNotIn(List<LocalDate> values) {
            addCriterion("check_date not in", values, "checkDate");
            return (Criteria) this;
        }

        public Criteria andCheckDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("check_date between", value1, value2, "checkDate");
            return (Criteria) this;
        }

        public Criteria andCheckDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("check_date not between", value1, value2, "checkDate");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyYearCheck.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        private TCpyYearCheckExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        protected Criteria(TCpyYearCheckExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public TCpyYearCheckExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_year_check
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_year_check
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_year_check
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyYearCheckExample example);
    }
}