package com.huizhi.supplier.db.model;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TCpyShortBorrowingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public TCpyShortBorrowingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public TCpyShortBorrowingExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public TCpyShortBorrowingExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TCpyShortBorrowingExample example = new TCpyShortBorrowingExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public TCpyShortBorrowingExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public TCpyShortBorrowingExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(String value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("company_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(String value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("company_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(String value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("company_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(String value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("company_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(String value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("company_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(String value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCompanyIdLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("company_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyIdLike(String value) {
            addCriterion("company_id like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotLike(String value) {
            addCriterion("company_id not like", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<String> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<String> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(String value1, String value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(String value1, String value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andLendersIsNull() {
            addCriterion("lenders is null");
            return (Criteria) this;
        }

        public Criteria andLendersIsNotNull() {
            addCriterion("lenders is not null");
            return (Criteria) this;
        }

        public Criteria andLendersEqualTo(String value) {
            addCriterion("lenders =", value, "lenders");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLendersEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("lenders = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLendersNotEqualTo(String value) {
            addCriterion("lenders <>", value, "lenders");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLendersNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("lenders <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLendersGreaterThan(String value) {
            addCriterion("lenders >", value, "lenders");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLendersGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("lenders > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLendersGreaterThanOrEqualTo(String value) {
            addCriterion("lenders >=", value, "lenders");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLendersGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("lenders >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLendersLessThan(String value) {
            addCriterion("lenders <", value, "lenders");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLendersLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("lenders < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLendersLessThanOrEqualTo(String value) {
            addCriterion("lenders <=", value, "lenders");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLendersLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("lenders <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLendersLike(String value) {
            addCriterion("lenders like", value, "lenders");
            return (Criteria) this;
        }

        public Criteria andLendersNotLike(String value) {
            addCriterion("lenders not like", value, "lenders");
            return (Criteria) this;
        }

        public Criteria andLendersIn(List<String> values) {
            addCriterion("lenders in", values, "lenders");
            return (Criteria) this;
        }

        public Criteria andLendersNotIn(List<String> values) {
            addCriterion("lenders not in", values, "lenders");
            return (Criteria) this;
        }

        public Criteria andLendersBetween(String value1, String value2) {
            addCriterion("lenders between", value1, value2, "lenders");
            return (Criteria) this;
        }

        public Criteria andLendersNotBetween(String value1, String value2) {
            addCriterion("lenders not between", value1, value2, "lenders");
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateIsNull() {
            addCriterion("loan_payment_date is null");
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateIsNotNull() {
            addCriterion("loan_payment_date is not null");
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateEqualTo(LocalDate value) {
            addCriterion("loan_payment_date =", value, "loanPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanPaymentDateEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_payment_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateNotEqualTo(LocalDate value) {
            addCriterion("loan_payment_date <>", value, "loanPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanPaymentDateNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_payment_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateGreaterThan(LocalDate value) {
            addCriterion("loan_payment_date >", value, "loanPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanPaymentDateGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_payment_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("loan_payment_date >=", value, "loanPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanPaymentDateGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_payment_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateLessThan(LocalDate value) {
            addCriterion("loan_payment_date <", value, "loanPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanPaymentDateLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_payment_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("loan_payment_date <=", value, "loanPaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanPaymentDateLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_payment_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateIn(List<LocalDate> values) {
            addCriterion("loan_payment_date in", values, "loanPaymentDate");
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateNotIn(List<LocalDate> values) {
            addCriterion("loan_payment_date not in", values, "loanPaymentDate");
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("loan_payment_date between", value1, value2, "loanPaymentDate");
            return (Criteria) this;
        }

        public Criteria andLoanPaymentDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("loan_payment_date not between", value1, value2, "loanPaymentDate");
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateIsNull() {
            addCriterion("loan_maturity_date is null");
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateIsNotNull() {
            addCriterion("loan_maturity_date is not null");
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateEqualTo(LocalDate value) {
            addCriterion("loan_maturity_date =", value, "loanMaturityDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanMaturityDateEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_maturity_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateNotEqualTo(LocalDate value) {
            addCriterion("loan_maturity_date <>", value, "loanMaturityDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanMaturityDateNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_maturity_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateGreaterThan(LocalDate value) {
            addCriterion("loan_maturity_date >", value, "loanMaturityDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanMaturityDateGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_maturity_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("loan_maturity_date >=", value, "loanMaturityDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanMaturityDateGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_maturity_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateLessThan(LocalDate value) {
            addCriterion("loan_maturity_date <", value, "loanMaturityDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanMaturityDateLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_maturity_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("loan_maturity_date <=", value, "loanMaturityDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andLoanMaturityDateLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("loan_maturity_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateIn(List<LocalDate> values) {
            addCriterion("loan_maturity_date in", values, "loanMaturityDate");
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateNotIn(List<LocalDate> values) {
            addCriterion("loan_maturity_date not in", values, "loanMaturityDate");
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("loan_maturity_date between", value1, value2, "loanMaturityDate");
            return (Criteria) this;
        }

        public Criteria andLoanMaturityDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("loan_maturity_date not between", value1, value2, "loanMaturityDate");
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansIsNull() {
            addCriterion("number_overdue_loans is null");
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansIsNotNull() {
            addCriterion("number_overdue_loans is not null");
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansEqualTo(String value) {
            addCriterion("number_overdue_loans =", value, "numberOverdueLoans");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andNumberOverdueLoansEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("number_overdue_loans = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansNotEqualTo(String value) {
            addCriterion("number_overdue_loans <>", value, "numberOverdueLoans");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andNumberOverdueLoansNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("number_overdue_loans <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansGreaterThan(String value) {
            addCriterion("number_overdue_loans >", value, "numberOverdueLoans");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andNumberOverdueLoansGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("number_overdue_loans > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansGreaterThanOrEqualTo(String value) {
            addCriterion("number_overdue_loans >=", value, "numberOverdueLoans");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andNumberOverdueLoansGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("number_overdue_loans >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansLessThan(String value) {
            addCriterion("number_overdue_loans <", value, "numberOverdueLoans");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andNumberOverdueLoansLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("number_overdue_loans < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansLessThanOrEqualTo(String value) {
            addCriterion("number_overdue_loans <=", value, "numberOverdueLoans");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andNumberOverdueLoansLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("number_overdue_loans <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansLike(String value) {
            addCriterion("number_overdue_loans like", value, "numberOverdueLoans");
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansNotLike(String value) {
            addCriterion("number_overdue_loans not like", value, "numberOverdueLoans");
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansIn(List<String> values) {
            addCriterion("number_overdue_loans in", values, "numberOverdueLoans");
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansNotIn(List<String> values) {
            addCriterion("number_overdue_loans not in", values, "numberOverdueLoans");
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansBetween(String value1, String value2) {
            addCriterion("number_overdue_loans between", value1, value2, "numberOverdueLoans");
            return (Criteria) this;
        }

        public Criteria andNumberOverdueLoansNotBetween(String value1, String value2) {
            addCriterion("number_overdue_loans not between", value1, value2, "numberOverdueLoans");
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateIsNull() {
            addCriterion("actual_repayment_date is null");
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateIsNotNull() {
            addCriterion("actual_repayment_date is not null");
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateEqualTo(LocalDate value) {
            addCriterion("actual_repayment_date =", value, "actualRepaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andActualRepaymentDateEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("actual_repayment_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateNotEqualTo(LocalDate value) {
            addCriterion("actual_repayment_date <>", value, "actualRepaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andActualRepaymentDateNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("actual_repayment_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateGreaterThan(LocalDate value) {
            addCriterion("actual_repayment_date >", value, "actualRepaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andActualRepaymentDateGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("actual_repayment_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("actual_repayment_date >=", value, "actualRepaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andActualRepaymentDateGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("actual_repayment_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateLessThan(LocalDate value) {
            addCriterion("actual_repayment_date <", value, "actualRepaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andActualRepaymentDateLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("actual_repayment_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("actual_repayment_date <=", value, "actualRepaymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andActualRepaymentDateLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("actual_repayment_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateIn(List<LocalDate> values) {
            addCriterion("actual_repayment_date in", values, "actualRepaymentDate");
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateNotIn(List<LocalDate> values) {
            addCriterion("actual_repayment_date not in", values, "actualRepaymentDate");
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("actual_repayment_date between", value1, value2, "actualRepaymentDate");
            return (Criteria) this;
        }

        public Criteria andActualRepaymentDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("actual_repayment_date not between", value1, value2, "actualRepaymentDate");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNull() {
            addCriterion("create_person is null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIsNotNull() {
            addCriterion("create_person is not null");
            return (Criteria) this;
        }

        public Criteria andCreatePersonEqualTo(String value) {
            addCriterion("create_person =", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotEqualTo(String value) {
            addCriterion("create_person <>", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThan(String value) {
            addCriterion("create_person >", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonGreaterThanOrEqualTo(String value) {
            addCriterion("create_person >=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThan(String value) {
            addCriterion("create_person <", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLessThanOrEqualTo(String value) {
            addCriterion("create_person <=", value, "createPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreatePersonLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatePersonLike(String value) {
            addCriterion("create_person like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotLike(String value) {
            addCriterion("create_person not like", value, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonIn(List<String> values) {
            addCriterion("create_person in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotIn(List<String> values) {
            addCriterion("create_person not in", values, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonBetween(String value1, String value2) {
            addCriterion("create_person between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreatePersonNotBetween(String value1, String value2) {
            addCriterion("create_person not between", value1, value2, "createPerson");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNull() {
            addCriterion("modify_person is null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIsNotNull() {
            addCriterion("modify_person is not null");
            return (Criteria) this;
        }

        public Criteria andModifyPersonEqualTo(String value) {
            addCriterion("modify_person =", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotEqualTo(String value) {
            addCriterion("modify_person <>", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThan(String value) {
            addCriterion("modify_person >", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonGreaterThanOrEqualTo(String value) {
            addCriterion("modify_person >=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThan(String value) {
            addCriterion("modify_person <", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLessThanOrEqualTo(String value) {
            addCriterion("modify_person <=", value, "modifyPerson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyPersonLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyPersonLike(String value) {
            addCriterion("modify_person like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotLike(String value) {
            addCriterion("modify_person not like", value, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonIn(List<String> values) {
            addCriterion("modify_person in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotIn(List<String> values) {
            addCriterion("modify_person not in", values, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonBetween(String value1, String value2) {
            addCriterion("modify_person between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyPersonNotBetween(String value1, String value2) {
            addCriterion("modify_person not between", value1, value2, "modifyPerson");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(LocalDateTime value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(LocalDateTime value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(LocalDateTime value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(LocalDateTime value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andModifyTimeLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("modify_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<LocalDateTime> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<LocalDateTime> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNull() {
            addCriterion("data_resource is null");
            return (Criteria) this;
        }

        public Criteria andDataResourceIsNotNull() {
            addCriterion("data_resource is not null");
            return (Criteria) this;
        }

        public Criteria andDataResourceEqualTo(String value) {
            addCriterion("data_resource =", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("data_resource = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceNotEqualTo(String value) {
            addCriterion("data_resource <>", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceNotEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("data_resource <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThan(String value) {
            addCriterion("data_resource >", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("data_resource > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceGreaterThanOrEqualTo(String value) {
            addCriterion("data_resource >=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceGreaterThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("data_resource >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThan(String value) {
            addCriterion("data_resource <", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("data_resource < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLessThanOrEqualTo(String value) {
            addCriterion("data_resource <=", value, "dataResource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria andDataResourceLessThanOrEqualToColumn(TCpyShortBorrowing.Column column) {
            addCriterion(new StringBuilder("data_resource <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDataResourceLike(String value) {
            addCriterion("data_resource like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotLike(String value) {
            addCriterion("data_resource not like", value, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceIn(List<String> values) {
            addCriterion("data_resource in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotIn(List<String> values) {
            addCriterion("data_resource not in", values, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceBetween(String value1, String value2) {
            addCriterion("data_resource between", value1, value2, "dataResource");
            return (Criteria) this;
        }

        public Criteria andDataResourceNotBetween(String value1, String value2) {
            addCriterion("data_resource not between", value1, value2, "dataResource");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        private TCpyShortBorrowingExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        protected Criteria(TCpyShortBorrowingExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public TCpyShortBorrowingExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_cpy_short_borrowing
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cpy_short_borrowing
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_cpy_short_borrowing
         *
         * @mbg.generated
         */
        void example(com.huizhi.supplier.db.model.TCpyShortBorrowingExample example);
    }
}